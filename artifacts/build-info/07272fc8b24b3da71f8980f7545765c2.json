{"id":"07272fc8b24b3da71f8980f7545765c2","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@layerzerolabs/solidity-examples/contracts/libraries/BytesLib.sol":{"content":"// SPDX-License-Identifier: Unlicense\n/*\n * @title Solidity Bytes Arrays Utils\n * @author Gonçalo Sá <goncalo.sa@consensys.net>\n *\n * @dev Bytes tightly packed arrays utility library for ethereum contracts written in Solidity.\n *      The library lets you concatenate, slice and type cast bytes arrays both in memory and storage.\n */\npragma solidity >=0.8.0 <0.9.0;\n\nlibrary BytesLib {\n    function concat(bytes memory _preBytes, bytes memory _postBytes) internal pure returns (bytes memory) {\n        bytes memory tempBytes;\n\n        assembly {\n            // Get a location of some free memory and store it in tempBytes as\n            // Solidity does for memory variables.\n            tempBytes := mload(0x40)\n\n            // Store the length of the first bytes array at the beginning of\n            // the memory for tempBytes.\n            let length := mload(_preBytes)\n            mstore(tempBytes, length)\n\n            // Maintain a memory counter for the current write location in the\n            // temp bytes array by adding the 32 bytes for the array length to\n            // the starting location.\n            let mc := add(tempBytes, 0x20)\n            // Stop copying when the memory counter reaches the length of the\n            // first bytes array.\n            let end := add(mc, length)\n\n            for {\n                // Initialize a copy counter to the start of the _preBytes data,\n                // 32 bytes into its memory.\n                let cc := add(_preBytes, 0x20)\n            } lt(mc, end) {\n                // Increase both counters by 32 bytes each iteration.\n                mc := add(mc, 0x20)\n                cc := add(cc, 0x20)\n            } {\n                // Write the _preBytes data into the tempBytes memory 32 bytes\n                // at a time.\n                mstore(mc, mload(cc))\n            }\n\n            // Add the length of _postBytes to the current length of tempBytes\n            // and store it as the new length in the first 32 bytes of the\n            // tempBytes memory.\n            length := mload(_postBytes)\n            mstore(tempBytes, add(length, mload(tempBytes)))\n\n            // Move the memory counter back from a multiple of 0x20 to the\n            // actual end of the _preBytes data.\n            mc := end\n            // Stop copying when the memory counter reaches the new combined\n            // length of the arrays.\n            end := add(mc, length)\n\n            for {\n                let cc := add(_postBytes, 0x20)\n            } lt(mc, end) {\n                mc := add(mc, 0x20)\n                cc := add(cc, 0x20)\n            } {\n                mstore(mc, mload(cc))\n            }\n\n            // Update the free-memory pointer by padding our last write location\n            // to 32 bytes: add 31 bytes to the end of tempBytes to move to the\n            // next 32 byte block, then round down to the nearest multiple of\n            // 32. If the sum of the length of the two arrays is zero then add\n            // one before rounding down to leave a blank 32 bytes (the length block with 0).\n            mstore(\n                0x40,\n                and(\n                    add(add(end, iszero(add(length, mload(_preBytes)))), 31),\n                    not(31) // Round down to the nearest 32 bytes.\n                )\n            )\n        }\n\n        return tempBytes;\n    }\n\n    function concatStorage(bytes storage _preBytes, bytes memory _postBytes) internal {\n        assembly {\n            // Read the first 32 bytes of _preBytes storage, which is the length\n            // of the array. (We don't need to use the offset into the slot\n            // because arrays use the entire slot.)\n            let fslot := sload(_preBytes.slot)\n            // Arrays of 31 bytes or less have an even value in their slot,\n            // while longer arrays have an odd value. The actual length is\n            // the slot divided by two for odd values, and the lowest order\n            // byte divided by two for even values.\n            // If the slot is even, bitwise and the slot with 255 and divide by\n            // two to get the length. If the slot is odd, bitwise and the slot\n            // with -1 and divide by two.\n            let slength := div(and(fslot, sub(mul(0x100, iszero(and(fslot, 1))), 1)), 2)\n            let mlength := mload(_postBytes)\n            let newlength := add(slength, mlength)\n            // slength can contain both the length and contents of the array\n            // if length < 32 bytes so let's prepare for that\n            // v. http://solidity.readthedocs.io/en/latest/miscellaneous.html#layout-of-state-variables-in-storage\n            switch add(lt(slength, 32), lt(newlength, 32))\n            case 2 {\n                // Since the new array still fits in the slot, we just need to\n                // update the contents of the slot.\n                // uint256(bytes_storage) = uint256(bytes_storage) + uint256(bytes_memory) + new_length\n                sstore(\n                    _preBytes.slot,\n                    // all the modifications to the slot are inside this\n                    // next block\n                    add(\n                        // we can just add to the slot contents because the\n                        // bytes we want to change are the LSBs\n                        fslot,\n                        add(\n                            mul(\n                                div(\n                                    // load the bytes from memory\n                                    mload(add(_postBytes, 0x20)),\n                                    // zero all bytes to the right\n                                    exp(0x100, sub(32, mlength))\n                                ),\n                                // and now shift left the number of bytes to\n                                // leave space for the length in the slot\n                                exp(0x100, sub(32, newlength))\n                            ),\n                            // increase length by the double of the memory\n                            // bytes length\n                            mul(mlength, 2)\n                        )\n                    )\n                )\n            }\n            case 1 {\n                // The stored value fits in the slot, but the combined value\n                // will exceed it.\n                // get the keccak hash to get the contents of the array\n                mstore(0x0, _preBytes.slot)\n                let sc := add(keccak256(0x0, 0x20), div(slength, 32))\n\n                // save new length\n                sstore(_preBytes.slot, add(mul(newlength, 2), 1))\n\n                // The contents of the _postBytes array start 32 bytes into\n                // the structure. Our first read should obtain the `submod`\n                // bytes that can fit into the unused space in the last word\n                // of the stored array. To get this, we read 32 bytes starting\n                // from `submod`, so the data we read overlaps with the array\n                // contents by `submod` bytes. Masking the lowest-order\n                // `submod` bytes allows us to add that value directly to the\n                // stored value.\n\n                let submod := sub(32, slength)\n                let mc := add(_postBytes, submod)\n                let end := add(_postBytes, mlength)\n                let mask := sub(exp(0x100, submod), 1)\n\n                sstore(sc, add(and(fslot, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00), and(mload(mc), mask)))\n\n                for {\n                    mc := add(mc, 0x20)\n                    sc := add(sc, 1)\n                } lt(mc, end) {\n                    sc := add(sc, 1)\n                    mc := add(mc, 0x20)\n                } {\n                    sstore(sc, mload(mc))\n                }\n\n                mask := exp(0x100, sub(mc, end))\n\n                sstore(sc, mul(div(mload(mc), mask), mask))\n            }\n            default {\n                // get the keccak hash to get the contents of the array\n                mstore(0x0, _preBytes.slot)\n                // Start copying to the last used word of the stored array.\n                let sc := add(keccak256(0x0, 0x20), div(slength, 32))\n\n                // save new length\n                sstore(_preBytes.slot, add(mul(newlength, 2), 1))\n\n                // Copy over the first `submod` bytes of the new data as in\n                // case 1 above.\n                let slengthmod := mod(slength, 32)\n                let mlengthmod := mod(mlength, 32)\n                let submod := sub(32, slengthmod)\n                let mc := add(_postBytes, submod)\n                let end := add(_postBytes, mlength)\n                let mask := sub(exp(0x100, submod), 1)\n\n                sstore(sc, add(sload(sc), and(mload(mc), mask)))\n\n                for {\n                    sc := add(sc, 1)\n                    mc := add(mc, 0x20)\n                } lt(mc, end) {\n                    sc := add(sc, 1)\n                    mc := add(mc, 0x20)\n                } {\n                    sstore(sc, mload(mc))\n                }\n\n                mask := exp(0x100, sub(mc, end))\n\n                sstore(sc, mul(div(mload(mc), mask), mask))\n            }\n        }\n    }\n\n    function slice(\n        bytes memory _bytes,\n        uint _start,\n        uint _length\n    ) internal pure returns (bytes memory) {\n        require(_length + 31 >= _length, \"slice_overflow\");\n        require(_bytes.length >= _start + _length, \"slice_outOfBounds\");\n\n        bytes memory tempBytes;\n\n        assembly {\n            switch iszero(_length)\n            case 0 {\n                // Get a location of some free memory and store it in tempBytes as\n                // Solidity does for memory variables.\n                tempBytes := mload(0x40)\n\n                // The first word of the slice result is potentially a partial\n                // word read from the original array. To read it, we calculate\n                // the length of that partial word and start copying that many\n                // bytes into the array. The first word we copy will start with\n                // data we don't care about, but the last `lengthmod` bytes will\n                // land at the beginning of the contents of the new array. When\n                // we're done copying, we overwrite the full first word with\n                // the actual length of the slice.\n                let lengthmod := and(_length, 31)\n\n                // The multiplication in the next line is necessary\n                // because when slicing multiples of 32 bytes (lengthmod == 0)\n                // the following copy loop was copying the origin's length\n                // and then ending prematurely not copying everything it should.\n                let mc := add(add(tempBytes, lengthmod), mul(0x20, iszero(lengthmod)))\n                let end := add(mc, _length)\n\n                for {\n                    // The multiplication in the next line has the same exact purpose\n                    // as the one above.\n                    let cc := add(add(add(_bytes, lengthmod), mul(0x20, iszero(lengthmod))), _start)\n                } lt(mc, end) {\n                    mc := add(mc, 0x20)\n                    cc := add(cc, 0x20)\n                } {\n                    mstore(mc, mload(cc))\n                }\n\n                mstore(tempBytes, _length)\n\n                //update free-memory pointer\n                //allocating the array padded to 32 bytes like the compiler does now\n                mstore(0x40, and(add(mc, 31), not(31)))\n            }\n            //if we want a zero-length slice let's just return a zero-length array\n            default {\n                tempBytes := mload(0x40)\n                //zero out the 32 bytes slice we are about to return\n                //we need to do it because Solidity does not garbage collect\n                mstore(tempBytes, 0)\n\n                mstore(0x40, add(tempBytes, 0x20))\n            }\n        }\n\n        return tempBytes;\n    }\n\n    function toAddress(bytes memory _bytes, uint _start) internal pure returns (address) {\n        require(_bytes.length >= _start + 20, \"toAddress_outOfBounds\");\n        address tempAddress;\n\n        assembly {\n            tempAddress := div(mload(add(add(_bytes, 0x20), _start)), 0x1000000000000000000000000)\n        }\n\n        return tempAddress;\n    }\n\n    function toUint8(bytes memory _bytes, uint _start) internal pure returns (uint8) {\n        require(_bytes.length >= _start + 1, \"toUint8_outOfBounds\");\n        uint8 tempUint;\n\n        assembly {\n            tempUint := mload(add(add(_bytes, 0x1), _start))\n        }\n\n        return tempUint;\n    }\n\n    function toUint16(bytes memory _bytes, uint _start) internal pure returns (uint16) {\n        require(_bytes.length >= _start + 2, \"toUint16_outOfBounds\");\n        uint16 tempUint;\n\n        assembly {\n            tempUint := mload(add(add(_bytes, 0x2), _start))\n        }\n\n        return tempUint;\n    }\n\n    function toUint32(bytes memory _bytes, uint _start) internal pure returns (uint32) {\n        require(_bytes.length >= _start + 4, \"toUint32_outOfBounds\");\n        uint32 tempUint;\n\n        assembly {\n            tempUint := mload(add(add(_bytes, 0x4), _start))\n        }\n\n        return tempUint;\n    }\n\n    function toUint64(bytes memory _bytes, uint _start) internal pure returns (uint64) {\n        require(_bytes.length >= _start + 8, \"toUint64_outOfBounds\");\n        uint64 tempUint;\n\n        assembly {\n            tempUint := mload(add(add(_bytes, 0x8), _start))\n        }\n\n        return tempUint;\n    }\n\n    function toUint96(bytes memory _bytes, uint _start) internal pure returns (uint96) {\n        require(_bytes.length >= _start + 12, \"toUint96_outOfBounds\");\n        uint96 tempUint;\n\n        assembly {\n            tempUint := mload(add(add(_bytes, 0xc), _start))\n        }\n\n        return tempUint;\n    }\n\n    function toUint128(bytes memory _bytes, uint _start) internal pure returns (uint128) {\n        require(_bytes.length >= _start + 16, \"toUint128_outOfBounds\");\n        uint128 tempUint;\n\n        assembly {\n            tempUint := mload(add(add(_bytes, 0x10), _start))\n        }\n\n        return tempUint;\n    }\n\n    function toUint256(bytes memory _bytes, uint _start) internal pure returns (uint) {\n        require(_bytes.length >= _start + 32, \"toUint256_outOfBounds\");\n        uint tempUint;\n\n        assembly {\n            tempUint := mload(add(add(_bytes, 0x20), _start))\n        }\n\n        return tempUint;\n    }\n\n    function toBytes32(bytes memory _bytes, uint _start) internal pure returns (bytes32) {\n        require(_bytes.length >= _start + 32, \"toBytes32_outOfBounds\");\n        bytes32 tempBytes32;\n\n        assembly {\n            tempBytes32 := mload(add(add(_bytes, 0x20), _start))\n        }\n\n        return tempBytes32;\n    }\n\n    function equal(bytes memory _preBytes, bytes memory _postBytes) internal pure returns (bool) {\n        bool success = true;\n\n        assembly {\n            let length := mload(_preBytes)\n\n            // if lengths don't match the arrays are not equal\n            switch eq(length, mload(_postBytes))\n            case 1 {\n                // cb is a circuit breaker in the for loop since there's\n                //  no said feature for inline assembly loops\n                // cb = 1 - don't breaker\n                // cb = 0 - break\n                let cb := 1\n\n                let mc := add(_preBytes, 0x20)\n                let end := add(mc, length)\n\n                for {\n                    let cc := add(_postBytes, 0x20)\n                    // the next line is the loop condition:\n                    // while(uint256(mc < end) + cb == 2)\n                } eq(add(lt(mc, end), cb), 2) {\n                    mc := add(mc, 0x20)\n                    cc := add(cc, 0x20)\n                } {\n                    // if any of these checks fails then arrays are not equal\n                    if iszero(eq(mload(mc), mload(cc))) {\n                        // unsuccess:\n                        success := 0\n                        cb := 0\n                    }\n                }\n            }\n            default {\n                // unsuccess:\n                success := 0\n            }\n        }\n\n        return success;\n    }\n\n    function equalStorage(bytes storage _preBytes, bytes memory _postBytes) internal view returns (bool) {\n        bool success = true;\n\n        assembly {\n            // we know _preBytes_offset is 0\n            let fslot := sload(_preBytes.slot)\n            // Decode the length of the stored array like in concatStorage().\n            let slength := div(and(fslot, sub(mul(0x100, iszero(and(fslot, 1))), 1)), 2)\n            let mlength := mload(_postBytes)\n\n            // if lengths don't match the arrays are not equal\n            switch eq(slength, mlength)\n            case 1 {\n                // slength can contain both the length and contents of the array\n                // if length < 32 bytes so let's prepare for that\n                // v. http://solidity.readthedocs.io/en/latest/miscellaneous.html#layout-of-state-variables-in-storage\n                if iszero(iszero(slength)) {\n                    switch lt(slength, 32)\n                    case 1 {\n                        // blank the last byte which is the length\n                        fslot := mul(div(fslot, 0x100), 0x100)\n\n                        if iszero(eq(fslot, mload(add(_postBytes, 0x20)))) {\n                            // unsuccess:\n                            success := 0\n                        }\n                    }\n                    default {\n                        // cb is a circuit breaker in the for loop since there's\n                        //  no said feature for inline assembly loops\n                        // cb = 1 - don't breaker\n                        // cb = 0 - break\n                        let cb := 1\n\n                        // get the keccak hash to get the contents of the array\n                        mstore(0x0, _preBytes.slot)\n                        let sc := keccak256(0x0, 0x20)\n\n                        let mc := add(_postBytes, 0x20)\n                        let end := add(mc, mlength)\n\n                        // the next line is the loop condition:\n                        // while(uint256(mc < end) + cb == 2)\n                        for {\n\n                        } eq(add(lt(mc, end), cb), 2) {\n                            sc := add(sc, 1)\n                            mc := add(mc, 0x20)\n                        } {\n                            if iszero(eq(sload(sc), mload(mc))) {\n                                // unsuccess:\n                                success := 0\n                                cb := 0\n                            }\n                        }\n                    }\n                }\n            }\n            default {\n                // unsuccess:\n                success := 0\n            }\n        }\n\n        return success;\n    }\n}\n"},"@layerzerolabs/solidity-examples/contracts/libraries/ExcessivelySafeCall.sol":{"content":"// SPDX-License-Identifier: MIT OR Apache-2.0\npragma solidity >=0.7.6;\n\nlibrary ExcessivelySafeCall {\n    uint constant LOW_28_MASK = 0x00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff;\n\n    /// @notice Use when you _really_ really _really_ don't trust the called\n    /// contract. This prevents the called contract from causing reversion of\n    /// the caller in as many ways as we can.\n    /// @dev The main difference between this and a solidity low-level call is\n    /// that we limit the number of bytes that the callee can cause to be\n    /// copied to caller memory. This prevents stupid things like malicious\n    /// contracts returning 10,000,000 bytes causing a local OOG when copying\n    /// to memory.\n    /// @param _target The address to call\n    /// @param _gas The amount of gas to forward to the remote contract\n    /// @param _maxCopy The maximum number of bytes of returndata to copy\n    /// to memory.\n    /// @param _calldata The data to send to the remote contract\n    /// @return success and returndata, as `.call()`. Returndata is capped to\n    /// `_maxCopy` bytes.\n    function excessivelySafeCall(\n        address _target,\n        uint _gas,\n        uint16 _maxCopy,\n        bytes memory _calldata\n    ) internal returns (bool, bytes memory) {\n        // set up for assembly call\n        uint _toCopy;\n        bool _success;\n        bytes memory _returnData = new bytes(_maxCopy);\n        // dispatch message to recipient\n        // by assembly calling \"handle\" function\n        // we call via assembly to avoid memcopying a very large returndata\n        // returned by a malicious contract\n        assembly {\n            _success := call(\n                _gas, // gas\n                _target, // recipient\n                0, // ether value\n                add(_calldata, 0x20), // inloc\n                mload(_calldata), // inlen\n                0, // outloc\n                0 // outlen\n            )\n            // limit our copy to 256 bytes\n            _toCopy := returndatasize()\n            if gt(_toCopy, _maxCopy) {\n                _toCopy := _maxCopy\n            }\n            // Store the length of the copied bytes\n            mstore(_returnData, _toCopy)\n            // copy the bytes from returndata[0:_toCopy]\n            returndatacopy(add(_returnData, 0x20), 0, _toCopy)\n        }\n        return (_success, _returnData);\n    }\n\n    /// @notice Use when you _really_ really _really_ don't trust the called\n    /// contract. This prevents the called contract from causing reversion of\n    /// the caller in as many ways as we can.\n    /// @dev The main difference between this and a solidity low-level call is\n    /// that we limit the number of bytes that the callee can cause to be\n    /// copied to caller memory. This prevents stupid things like malicious\n    /// contracts returning 10,000,000 bytes causing a local OOG when copying\n    /// to memory.\n    /// @param _target The address to call\n    /// @param _gas The amount of gas to forward to the remote contract\n    /// @param _maxCopy The maximum number of bytes of returndata to copy\n    /// to memory.\n    /// @param _calldata The data to send to the remote contract\n    /// @return success and returndata, as `.call()`. Returndata is capped to\n    /// `_maxCopy` bytes.\n    function excessivelySafeStaticCall(\n        address _target,\n        uint _gas,\n        uint16 _maxCopy,\n        bytes memory _calldata\n    ) internal view returns (bool, bytes memory) {\n        // set up for assembly call\n        uint _toCopy;\n        bool _success;\n        bytes memory _returnData = new bytes(_maxCopy);\n        // dispatch message to recipient\n        // by assembly calling \"handle\" function\n        // we call via assembly to avoid memcopying a very large returndata\n        // returned by a malicious contract\n        assembly {\n            _success := staticcall(\n                _gas, // gas\n                _target, // recipient\n                add(_calldata, 0x20), // inloc\n                mload(_calldata), // inlen\n                0, // outloc\n                0 // outlen\n            )\n            // limit our copy to 256 bytes\n            _toCopy := returndatasize()\n            if gt(_toCopy, _maxCopy) {\n                _toCopy := _maxCopy\n            }\n            // Store the length of the copied bytes\n            mstore(_returnData, _toCopy)\n            // copy the bytes from returndata[0:_toCopy]\n            returndatacopy(add(_returnData, 0x20), 0, _toCopy)\n        }\n        return (_success, _returnData);\n    }\n\n    /**\n     * @notice Swaps function selectors in encoded contract calls\n     * @dev Allows reuse of encoded calldata for functions with identical\n     * argument types but different names. It simply swaps out the first 4 bytes\n     * for the new selector. This function modifies memory in place, and should\n     * only be used with caution.\n     * @param _newSelector The new 4-byte selector\n     * @param _buf The encoded contract args\n     */\n    function swapSelector(bytes4 _newSelector, bytes memory _buf) internal pure {\n        require(_buf.length >= 4);\n        uint _mask = LOW_28_MASK;\n        assembly {\n            // load the first word of\n            let _word := mload(add(_buf, 0x20))\n            // mask out the top 4 bytes\n            // /x\n            _word := and(_word, _mask)\n            _word := or(_newSelector, _word)\n            mstore(add(_buf, 0x20), _word)\n        }\n    }\n}\n"},"@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroEndpoint.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity >=0.5.0;\n\nimport \"./ILayerZeroUserApplicationConfig.sol\";\n\ninterface ILayerZeroEndpoint is ILayerZeroUserApplicationConfig {\n    // @notice send a LayerZero message to the specified address at a LayerZero endpoint.\n    // @param _dstChainId - the destination chain identifier\n    // @param _destination - the address on destination chain (in bytes). address length/format may vary by chains\n    // @param _payload - a custom bytes payload to send to the destination contract\n    // @param _refundAddress - if the source transaction is cheaper than the amount of value passed, refund the additional amount to this address\n    // @param _zroPaymentAddress - the address of the ZRO token holder who would pay for the transaction\n    // @param _adapterParams - parameters for custom functionality. e.g. receive airdropped native gas from the relayer on destination\n    function send(\n        uint16 _dstChainId,\n        bytes calldata _destination,\n        bytes calldata _payload,\n        address payable _refundAddress,\n        address _zroPaymentAddress,\n        bytes calldata _adapterParams\n    ) external payable;\n\n    // @notice used by the messaging library to publish verified payload\n    // @param _srcChainId - the source chain identifier\n    // @param _srcAddress - the source contract (as bytes) at the source chain\n    // @param _dstAddress - the address on destination chain\n    // @param _nonce - the unbound message ordering nonce\n    // @param _gasLimit - the gas limit for external contract execution\n    // @param _payload - verified payload to send to the destination contract\n    function receivePayload(\n        uint16 _srcChainId,\n        bytes calldata _srcAddress,\n        address _dstAddress,\n        uint64 _nonce,\n        uint _gasLimit,\n        bytes calldata _payload\n    ) external;\n\n    // @notice get the inboundNonce of a lzApp from a source chain which could be EVM or non-EVM chain\n    // @param _srcChainId - the source chain identifier\n    // @param _srcAddress - the source chain contract address\n    function getInboundNonce(uint16 _srcChainId, bytes calldata _srcAddress) external view returns (uint64);\n\n    // @notice get the outboundNonce from this source chain which, consequently, is always an EVM\n    // @param _srcAddress - the source chain contract address\n    function getOutboundNonce(uint16 _dstChainId, address _srcAddress) external view returns (uint64);\n\n    // @notice gets a quote in source native gas, for the amount that send() requires to pay for message delivery\n    // @param _dstChainId - the destination chain identifier\n    // @param _userApplication - the user app address on this EVM chain\n    // @param _payload - the custom message to send over LayerZero\n    // @param _payInZRO - if false, user app pays the protocol fee in native token\n    // @param _adapterParam - parameters for the adapter service, e.g. send some dust native token to dstChain\n    function estimateFees(\n        uint16 _dstChainId,\n        address _userApplication,\n        bytes calldata _payload,\n        bool _payInZRO,\n        bytes calldata _adapterParam\n    ) external view returns (uint nativeFee, uint zroFee);\n\n    // @notice get this Endpoint's immutable source identifier\n    function getChainId() external view returns (uint16);\n\n    // @notice the interface to retry failed message on this Endpoint destination\n    // @param _srcChainId - the source chain identifier\n    // @param _srcAddress - the source chain contract address\n    // @param _payload - the payload to be retried\n    function retryPayload(\n        uint16 _srcChainId,\n        bytes calldata _srcAddress,\n        bytes calldata _payload\n    ) external;\n\n    // @notice query if any STORED payload (message blocking) at the endpoint.\n    // @param _srcChainId - the source chain identifier\n    // @param _srcAddress - the source chain contract address\n    function hasStoredPayload(uint16 _srcChainId, bytes calldata _srcAddress) external view returns (bool);\n\n    // @notice query if the _libraryAddress is valid for sending msgs.\n    // @param _userApplication - the user app address on this EVM chain\n    function getSendLibraryAddress(address _userApplication) external view returns (address);\n\n    // @notice query if the _libraryAddress is valid for receiving msgs.\n    // @param _userApplication - the user app address on this EVM chain\n    function getReceiveLibraryAddress(address _userApplication) external view returns (address);\n\n    // @notice query if the non-reentrancy guard for send() is on\n    // @return true if the guard is on. false otherwise\n    function isSendingPayload() external view returns (bool);\n\n    // @notice query if the non-reentrancy guard for receive() is on\n    // @return true if the guard is on. false otherwise\n    function isReceivingPayload() external view returns (bool);\n\n    // @notice get the configuration of the LayerZero messaging library of the specified version\n    // @param _version - messaging library version\n    // @param _chainId - the chainId for the pending config change\n    // @param _userApplication - the contract address of the user application\n    // @param _configType - type of configuration. every messaging library has its own convention.\n    function getConfig(\n        uint16 _version,\n        uint16 _chainId,\n        address _userApplication,\n        uint _configType\n    ) external view returns (bytes memory);\n\n    // @notice get the send() LayerZero messaging library version\n    // @param _userApplication - the contract address of the user application\n    function getSendVersion(address _userApplication) external view returns (uint16);\n\n    // @notice get the lzReceive() LayerZero messaging library version\n    // @param _userApplication - the contract address of the user application\n    function getReceiveVersion(address _userApplication) external view returns (uint16);\n}\n"},"@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroReceiver.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity >=0.5.0;\n\ninterface ILayerZeroReceiver {\n    // @notice LayerZero endpoint will invoke this function to deliver the message on the destination\n    // @param _srcChainId - the source endpoint identifier\n    // @param _srcAddress - the source sending contract address from the source chain\n    // @param _nonce - the ordered message nonce\n    // @param _payload - the signed payload is the UA bytes has encoded to be sent\n    function lzReceive(\n        uint16 _srcChainId,\n        bytes calldata _srcAddress,\n        uint64 _nonce,\n        bytes calldata _payload\n    ) external;\n}\n"},"@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroUserApplicationConfig.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity >=0.5.0;\n\ninterface ILayerZeroUserApplicationConfig {\n    // @notice set the configuration of the LayerZero messaging library of the specified version\n    // @param _version - messaging library version\n    // @param _chainId - the chainId for the pending config change\n    // @param _configType - type of configuration. every messaging library has its own convention.\n    // @param _config - configuration in the bytes. can encode arbitrary content.\n    function setConfig(\n        uint16 _version,\n        uint16 _chainId,\n        uint _configType,\n        bytes calldata _config\n    ) external;\n\n    // @notice set the send() LayerZero messaging library version to _version\n    // @param _version - new messaging library version\n    function setSendVersion(uint16 _version) external;\n\n    // @notice set the lzReceive() LayerZero messaging library version to _version\n    // @param _version - new messaging library version\n    function setReceiveVersion(uint16 _version) external;\n\n    // @notice Only when the UA needs to resume the message flow in blocking mode and clear the stored payload\n    // @param _srcChainId - the chainId of the source chain\n    // @param _srcAddress - the contract address of the source contract at the source chain\n    function forceResumeReceive(uint16 _srcChainId, bytes calldata _srcAddress) external;\n}\n"},"@layerzerolabs/solidity-examples/contracts/lzApp/LzApp.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"./interfaces/ILayerZeroReceiver.sol\";\nimport \"./interfaces/ILayerZeroUserApplicationConfig.sol\";\nimport \"./interfaces/ILayerZeroEndpoint.sol\";\nimport \"../libraries/BytesLib.sol\";\n\n/*\n * a generic LzReceiver implementation\n */\nabstract contract LzApp is Ownable, ILayerZeroReceiver, ILayerZeroUserApplicationConfig {\n    using BytesLib for bytes;\n\n    // ua can not send payload larger than this by default, but it can be changed by the ua owner\n    uint public constant DEFAULT_PAYLOAD_SIZE_LIMIT = 10000;\n\n    ILayerZeroEndpoint public immutable lzEndpoint;\n    mapping(uint16 => bytes) public trustedRemoteLookup;\n    mapping(uint16 => mapping(uint16 => uint)) public minDstGasLookup;\n    mapping(uint16 => uint) public payloadSizeLimitLookup;\n    address public precrime;\n\n    event SetPrecrime(address precrime);\n    event SetTrustedRemote(uint16 _remoteChainId, bytes _path);\n    event SetTrustedRemoteAddress(uint16 _remoteChainId, bytes _remoteAddress);\n    event SetMinDstGas(uint16 _dstChainId, uint16 _type, uint _minDstGas);\n\n    constructor(address _endpoint) {\n        lzEndpoint = ILayerZeroEndpoint(_endpoint);\n    }\n\n    function lzReceive(\n        uint16 _srcChainId,\n        bytes calldata _srcAddress,\n        uint64 _nonce,\n        bytes calldata _payload\n    ) public virtual override {\n        // lzReceive must be called by the endpoint for security\n        require(_msgSender() == address(lzEndpoint), \"LzApp: invalid endpoint caller\");\n\n        bytes memory trustedRemote = trustedRemoteLookup[_srcChainId];\n        // if will still block the message pathway from (srcChainId, srcAddress). should not receive message from untrusted remote.\n        require(\n            _srcAddress.length == trustedRemote.length && trustedRemote.length > 0 && keccak256(_srcAddress) == keccak256(trustedRemote),\n            \"LzApp: invalid source sending contract\"\n        );\n\n        _blockingLzReceive(_srcChainId, _srcAddress, _nonce, _payload);\n    }\n\n    // abstract function - the default behaviour of LayerZero is blocking. See: NonblockingLzApp if you dont need to enforce ordered messaging\n    function _blockingLzReceive(\n        uint16 _srcChainId,\n        bytes memory _srcAddress,\n        uint64 _nonce,\n        bytes memory _payload\n    ) internal virtual;\n\n    function _lzSend(\n        uint16 _dstChainId,\n        bytes memory _payload,\n        address payable _refundAddress,\n        address _zroPaymentAddress,\n        bytes memory _adapterParams,\n        uint _nativeFee\n    ) internal virtual {\n        bytes memory trustedRemote = trustedRemoteLookup[_dstChainId];\n        require(trustedRemote.length != 0, \"LzApp: destination chain is not a trusted source\");\n        _checkPayloadSize(_dstChainId, _payload.length);\n        lzEndpoint.send{value: _nativeFee}(_dstChainId, trustedRemote, _payload, _refundAddress, _zroPaymentAddress, _adapterParams);\n    }\n\n    function _checkGasLimit(\n        uint16 _dstChainId,\n        uint16 _type,\n        bytes memory _adapterParams,\n        uint _extraGas\n    ) internal view virtual {\n        uint providedGasLimit = _getGasLimit(_adapterParams);\n        uint minGasLimit = minDstGasLookup[_dstChainId][_type];\n        require(minGasLimit > 0, \"LzApp: minGasLimit not set\");\n        require(providedGasLimit >= minGasLimit + _extraGas, \"LzApp: gas limit is too low\");\n    }\n\n    function _getGasLimit(bytes memory _adapterParams) internal pure virtual returns (uint gasLimit) {\n        require(_adapterParams.length >= 34, \"LzApp: invalid adapterParams\");\n        assembly {\n            gasLimit := mload(add(_adapterParams, 34))\n        }\n    }\n\n    function _checkPayloadSize(uint16 _dstChainId, uint _payloadSize) internal view virtual {\n        uint payloadSizeLimit = payloadSizeLimitLookup[_dstChainId];\n        if (payloadSizeLimit == 0) {\n            // use default if not set\n            payloadSizeLimit = DEFAULT_PAYLOAD_SIZE_LIMIT;\n        }\n        require(_payloadSize <= payloadSizeLimit, \"LzApp: payload size is too large\");\n    }\n\n    //---------------------------UserApplication config----------------------------------------\n    function getConfig(\n        uint16 _version,\n        uint16 _chainId,\n        address,\n        uint _configType\n    ) external view returns (bytes memory) {\n        return lzEndpoint.getConfig(_version, _chainId, address(this), _configType);\n    }\n\n    // generic config for LayerZero user Application\n    function setConfig(\n        uint16 _version,\n        uint16 _chainId,\n        uint _configType,\n        bytes calldata _config\n    ) external override onlyOwner {\n        lzEndpoint.setConfig(_version, _chainId, _configType, _config);\n    }\n\n    function setSendVersion(uint16 _version) external override onlyOwner {\n        lzEndpoint.setSendVersion(_version);\n    }\n\n    function setReceiveVersion(uint16 _version) external override onlyOwner {\n        lzEndpoint.setReceiveVersion(_version);\n    }\n\n    function forceResumeReceive(uint16 _srcChainId, bytes calldata _srcAddress) external override onlyOwner {\n        lzEndpoint.forceResumeReceive(_srcChainId, _srcAddress);\n    }\n\n    // _path = abi.encodePacked(remoteAddress, localAddress)\n    // this function set the trusted path for the cross-chain communication\n    function setTrustedRemote(uint16 _remoteChainId, bytes calldata _path) external onlyOwner {\n        trustedRemoteLookup[_remoteChainId] = _path;\n        emit SetTrustedRemote(_remoteChainId, _path);\n    }\n\n    function setTrustedRemoteAddress(uint16 _remoteChainId, bytes calldata _remoteAddress) external onlyOwner {\n        trustedRemoteLookup[_remoteChainId] = abi.encodePacked(_remoteAddress, address(this));\n        emit SetTrustedRemoteAddress(_remoteChainId, _remoteAddress);\n    }\n\n    function getTrustedRemoteAddress(uint16 _remoteChainId) external view returns (bytes memory) {\n        bytes memory path = trustedRemoteLookup[_remoteChainId];\n        require(path.length != 0, \"LzApp: no trusted path record\");\n        return path.slice(0, path.length - 20); // the last 20 bytes should be address(this)\n    }\n\n    function setPrecrime(address _precrime) external onlyOwner {\n        precrime = _precrime;\n        emit SetPrecrime(_precrime);\n    }\n\n    function setMinDstGas(\n        uint16 _dstChainId,\n        uint16 _packetType,\n        uint _minGas\n    ) external onlyOwner {\n        minDstGasLookup[_dstChainId][_packetType] = _minGas;\n        emit SetMinDstGas(_dstChainId, _packetType, _minGas);\n    }\n\n    // if the size is 0, it means default size limit\n    function setPayloadSizeLimit(uint16 _dstChainId, uint _size) external onlyOwner {\n        payloadSizeLimitLookup[_dstChainId] = _size;\n    }\n\n    //--------------------------- VIEW FUNCTION ----------------------------------------\n    function isTrustedRemote(uint16 _srcChainId, bytes calldata _srcAddress) external view returns (bool) {\n        bytes memory trustedSource = trustedRemoteLookup[_srcChainId];\n        return keccak256(trustedSource) == keccak256(_srcAddress);\n    }\n}\n"},"@layerzerolabs/solidity-examples/contracts/lzApp/NonblockingLzApp.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./LzApp.sol\";\nimport \"../libraries/ExcessivelySafeCall.sol\";\n\n/*\n * the default LayerZero messaging behaviour is blocking, i.e. any failed message will block the channel\n * this abstract class try-catch all fail messages and store locally for future retry. hence, non-blocking\n * NOTE: if the srcAddress is not configured properly, it will still block the message pathway from (srcChainId, srcAddress)\n */\nabstract contract NonblockingLzApp is LzApp {\n    using ExcessivelySafeCall for address;\n\n    constructor(address _endpoint) LzApp(_endpoint) {}\n\n    mapping(uint16 => mapping(bytes => mapping(uint64 => bytes32))) public failedMessages;\n\n    event MessageFailed(uint16 _srcChainId, bytes _srcAddress, uint64 _nonce, bytes _payload, bytes _reason);\n    event RetryMessageSuccess(uint16 _srcChainId, bytes _srcAddress, uint64 _nonce, bytes32 _payloadHash);\n\n    // overriding the virtual function in LzReceiver\n    function _blockingLzReceive(\n        uint16 _srcChainId,\n        bytes memory _srcAddress,\n        uint64 _nonce,\n        bytes memory _payload\n    ) internal virtual override {\n        (bool success, bytes memory reason) = address(this).excessivelySafeCall(\n            gasleft(),\n            150,\n            abi.encodeWithSelector(this.nonblockingLzReceive.selector, _srcChainId, _srcAddress, _nonce, _payload)\n        );\n        // try-catch all errors/exceptions\n        if (!success) {\n            _storeFailedMessage(_srcChainId, _srcAddress, _nonce, _payload, reason);\n        }\n    }\n\n    function _storeFailedMessage(\n        uint16 _srcChainId,\n        bytes memory _srcAddress,\n        uint64 _nonce,\n        bytes memory _payload,\n        bytes memory _reason\n    ) internal virtual {\n        failedMessages[_srcChainId][_srcAddress][_nonce] = keccak256(_payload);\n        emit MessageFailed(_srcChainId, _srcAddress, _nonce, _payload, _reason);\n    }\n\n    function nonblockingLzReceive(\n        uint16 _srcChainId,\n        bytes calldata _srcAddress,\n        uint64 _nonce,\n        bytes calldata _payload\n    ) public virtual {\n        // only internal transaction\n        require(_msgSender() == address(this), \"NonblockingLzApp: caller must be LzApp\");\n        _nonblockingLzReceive(_srcChainId, _srcAddress, _nonce, _payload);\n    }\n\n    //@notice override this function\n    function _nonblockingLzReceive(\n        uint16 _srcChainId,\n        bytes memory _srcAddress,\n        uint64 _nonce,\n        bytes memory _payload\n    ) internal virtual;\n\n    function retryMessage(\n        uint16 _srcChainId,\n        bytes calldata _srcAddress,\n        uint64 _nonce,\n        bytes calldata _payload\n    ) public payable virtual {\n        // assert there is message to retry\n        bytes32 payloadHash = failedMessages[_srcChainId][_srcAddress][_nonce];\n        require(payloadHash != bytes32(0), \"NonblockingLzApp: no stored message\");\n        require(keccak256(_payload) == payloadHash, \"NonblockingLzApp: invalid payload\");\n        // clear the stored message\n        failedMessages[_srcChainId][_srcAddress][_nonce] = bytes32(0);\n        // execute the message. revert if it fails again\n        _nonblockingLzReceive(_srcChainId, _srcAddress, _nonce, _payload);\n        emit RetryMessageSuccess(_srcChainId, _srcAddress, _nonce, payloadHash);\n    }\n}\n"},"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"contracts/LayerZeroTest.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@layerzerolabs/solidity-examples/contracts/lzApp/NonblockingLzApp.sol\";\r\n\r\n/*\r\n    LayerZero BNB Testnet\r\n      lzChainId: 10102  lzEndpoint: 0x6Fcb97553D41516Cb228ac03FdC8B9a0a9df04A1\r\n      contract: \r\n    LayerZero Fantom Testnet\r\n      lzChainId:10112   lzEndpoint: 0x7dcAD72640F835B0FA36EFD3D6d3ec902C7E5acf\r\n      contract: \r\n*/\r\n\r\ncontract LayerZeroTest is NonblockingLzApp {\r\n    string public data = \"Nothing received yet\";\r\n    uint16 destChainId;\r\n    \r\n    constructor(address _lzEndpoint) NonblockingLzApp(_lzEndpoint) {\r\n        if (_lzEndpoint == 0x6Fcb97553D41516Cb228ac03FdC8B9a0a9df04A1) destChainId = 10112;\r\n        if (_lzEndpoint == 0x7dcAD72640F835B0FA36EFD3D6d3ec902C7E5acf) destChainId = 10102;\r\n        // if (_lzEndpoint == 0xf69186dfBa60DdB133E91E9A4B5673624293d8F8) destChainId = 10109;\r\n        // if (_lzEndpoint == 0x6aB5Ae6822647046626e83ee6dB8187151E1d5ab) destChainId = 10143;\r\n    }\r\n\r\n    function _nonblockingLzReceive(uint16, bytes memory, uint64, bytes memory _payload) internal override {\r\n       data = abi.decode(_payload, (string));\r\n    }\r\n\r\n    function send(string memory _message) public payable {\r\n        bytes memory payload = abi.encode(_message);\r\n        _lzSend(destChainId, payload, payable(msg.sender), address(0x0), bytes(\"\"), msg.value);\r\n    }\r\n\r\n    function trustAddress(address _otherContract) public onlyOwner {\r\n        trustedRemoteLookup[destChainId] = abi.encodePacked(_otherContract, address(this));   \r\n    }\r\n}"}},"settings":{"optimizer":{"enabled":true,"runs":1},"evmVersion":"berlin","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"@layerzerolabs/solidity-examples/contracts/libraries/BytesLib.sol":{"ast":{"absolutePath":"@layerzerolabs/solidity-examples/contracts/libraries/BytesLib.sol","exportedSymbols":{"BytesLib":[332]},"id":333,"license":"Unlicense","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity",">=","0.8",".0","<","0.9",".0"],"nodeType":"PragmaDirective","src":"336:31:0"},{"abstract":false,"baseContracts":[],"canonicalName":"BytesLib","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":332,"linearizedBaseContracts":[332],"name":"BytesLib","nameLocation":"377:8:0","nodeType":"ContractDefinition","nodes":[{"body":{"id":16,"nodeType":"Block","src":"494:2865:0","statements":[{"assignments":[11],"declarations":[{"constant":false,"id":11,"mutability":"mutable","name":"tempBytes","nameLocation":"517:9:0","nodeType":"VariableDeclaration","scope":16,"src":"504:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":10,"name":"bytes","nodeType":"ElementaryTypeName","src":"504:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":12,"nodeType":"VariableDeclarationStatement","src":"504:22:0"},{"AST":{"nodeType":"YulBlock","src":"546:2780:0","statements":[{"nodeType":"YulAssignment","src":"690:24:0","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"709:4:0","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"703:5:0"},"nodeType":"YulFunctionCall","src":"703:11:0"},"variableNames":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"690:9:0"}]},{"nodeType":"YulVariableDeclaration","src":"846:30:0","value":{"arguments":[{"name":"_preBytes","nodeType":"YulIdentifier","src":"866:9:0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"860:5:0"},"nodeType":"YulFunctionCall","src":"860:16:0"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"850:6:0","type":""}]},{"expression":{"arguments":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"896:9:0"},{"name":"length","nodeType":"YulIdentifier","src":"907:6:0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"889:6:0"},"nodeType":"YulFunctionCall","src":"889:25:0"},"nodeType":"YulExpressionStatement","src":"889:25:0"},{"nodeType":"YulVariableDeclaration","src":"1124:30:0","value":{"arguments":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"1138:9:0"},{"kind":"number","nodeType":"YulLiteral","src":"1149:4:0","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1134:3:0"},"nodeType":"YulFunctionCall","src":"1134:20:0"},"variables":[{"name":"mc","nodeType":"YulTypedName","src":"1128:2:0","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1279:26:0","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"1294:2:0"},{"name":"length","nodeType":"YulIdentifier","src":"1298:6:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1290:3:0"},"nodeType":"YulFunctionCall","src":"1290:15:0"},"variables":[{"name":"end","nodeType":"YulTypedName","src":"1283:3:0","type":""}]},{"body":{"nodeType":"YulBlock","src":"1682:162:0","statements":[{"expression":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"1816:2:0"},{"arguments":[{"name":"cc","nodeType":"YulIdentifier","src":"1826:2:0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1820:5:0"},"nodeType":"YulFunctionCall","src":"1820:9:0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1809:6:0"},"nodeType":"YulFunctionCall","src":"1809:21:0"},"nodeType":"YulExpressionStatement","src":"1809:21:0"}]},"condition":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"1515:2:0"},{"name":"end","nodeType":"YulIdentifier","src":"1519:3:0"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1512:2:0"},"nodeType":"YulFunctionCall","src":"1512:11:0"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1524:157:0","statements":[{"nodeType":"YulAssignment","src":"1612:19:0","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"1622:2:0"},{"kind":"number","nodeType":"YulLiteral","src":"1626:4:0","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1618:3:0"},"nodeType":"YulFunctionCall","src":"1618:13:0"},"variableNames":[{"name":"mc","nodeType":"YulIdentifier","src":"1612:2:0"}]},{"nodeType":"YulAssignment","src":"1648:19:0","value":{"arguments":[{"name":"cc","nodeType":"YulIdentifier","src":"1658:2:0"},{"kind":"number","nodeType":"YulLiteral","src":"1662:4:0","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1654:3:0"},"nodeType":"YulFunctionCall","src":"1654:13:0"},"variableNames":[{"name":"cc","nodeType":"YulIdentifier","src":"1648:2:0"}]}]},"pre":{"nodeType":"YulBlock","src":"1323:188:0","statements":[{"nodeType":"YulVariableDeclaration","src":"1467:30:0","value":{"arguments":[{"name":"_preBytes","nodeType":"YulIdentifier","src":"1481:9:0"},{"kind":"number","nodeType":"YulLiteral","src":"1492:4:0","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1477:3:0"},"nodeType":"YulFunctionCall","src":"1477:20:0"},"variables":[{"name":"cc","nodeType":"YulTypedName","src":"1471:2:0","type":""}]}]},"src":"1319:525:0"},{"nodeType":"YulAssignment","src":"2045:27:0","value":{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"2061:10:0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2055:5:0"},"nodeType":"YulFunctionCall","src":"2055:17:0"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2045:6:0"}]},{"expression":{"arguments":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"2092:9:0"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2107:6:0"},{"arguments":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"2121:9:0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2115:5:0"},"nodeType":"YulFunctionCall","src":"2115:16:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2103:3:0"},"nodeType":"YulFunctionCall","src":"2103:29:0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2085:6:0"},"nodeType":"YulFunctionCall","src":"2085:48:0"},"nodeType":"YulExpressionStatement","src":"2085:48:0"},{"nodeType":"YulAssignment","src":"2271:9:0","value":{"name":"end","nodeType":"YulIdentifier","src":"2277:3:0"},"variableNames":[{"name":"mc","nodeType":"YulIdentifier","src":"2271:2:0"}]},{"nodeType":"YulAssignment","src":"2407:22:0","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"2418:2:0"},{"name":"length","nodeType":"YulIdentifier","src":"2422:6:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2414:3:0"},"nodeType":"YulFunctionCall","src":"2414:15:0"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2407:3:0"}]},{"body":{"nodeType":"YulBlock","src":"2611:53:0","statements":[{"expression":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"2636:2:0"},{"arguments":[{"name":"cc","nodeType":"YulIdentifier","src":"2646:2:0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2640:5:0"},"nodeType":"YulFunctionCall","src":"2640:9:0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2629:6:0"},"nodeType":"YulFunctionCall","src":"2629:21:0"},"nodeType":"YulExpressionStatement","src":"2629:21:0"}]},"condition":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"2514:2:0"},{"name":"end","nodeType":"YulIdentifier","src":"2518:3:0"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2511:2:0"},"nodeType":"YulFunctionCall","src":"2511:11:0"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2523:87:0","statements":[{"nodeType":"YulAssignment","src":"2541:19:0","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"2551:2:0"},{"kind":"number","nodeType":"YulLiteral","src":"2555:4:0","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2547:3:0"},"nodeType":"YulFunctionCall","src":"2547:13:0"},"variableNames":[{"name":"mc","nodeType":"YulIdentifier","src":"2541:2:0"}]},{"nodeType":"YulAssignment","src":"2577:19:0","value":{"arguments":[{"name":"cc","nodeType":"YulIdentifier","src":"2587:2:0"},{"kind":"number","nodeType":"YulLiteral","src":"2591:4:0","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2583:3:0"},"nodeType":"YulFunctionCall","src":"2583:13:0"},"variableNames":[{"name":"cc","nodeType":"YulIdentifier","src":"2577:2:0"}]}]},"pre":{"nodeType":"YulBlock","src":"2447:63:0","statements":[{"nodeType":"YulVariableDeclaration","src":"2465:31:0","value":{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"2479:10:0"},{"kind":"number","nodeType":"YulLiteral","src":"2491:4:0","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2475:3:0"},"nodeType":"YulFunctionCall","src":"2475:21:0"},"variables":[{"name":"cc","nodeType":"YulTypedName","src":"2469:2:0","type":""}]}]},"src":"2443:221:0"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3113:4:0","type":"","value":"0x40"},{"arguments":[{"arguments":[{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"3168:3:0"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3184:6:0"},{"arguments":[{"name":"_preBytes","nodeType":"YulIdentifier","src":"3198:9:0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3192:5:0"},"nodeType":"YulFunctionCall","src":"3192:16:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3180:3:0"},"nodeType":"YulFunctionCall","src":"3180:29:0"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3173:6:0"},"nodeType":"YulFunctionCall","src":"3173:37:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3164:3:0"},"nodeType":"YulFunctionCall","src":"3164:47:0"},{"kind":"number","nodeType":"YulLiteral","src":"3213:2:0","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3160:3:0"},"nodeType":"YulFunctionCall","src":"3160:56:0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3242:2:0","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3238:3:0"},"nodeType":"YulFunctionCall","src":"3238:7:0"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3135:3:0"},"nodeType":"YulFunctionCall","src":"3135:167:0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3089:6:0"},"nodeType":"YulFunctionCall","src":"3089:227:0"},"nodeType":"YulExpressionStatement","src":"3089:227:0"}]},"evmVersion":"berlin","externalReferences":[{"declaration":5,"isOffset":false,"isSlot":false,"src":"2061:10:0","valueSize":1},{"declaration":5,"isOffset":false,"isSlot":false,"src":"2479:10:0","valueSize":1},{"declaration":3,"isOffset":false,"isSlot":false,"src":"1481:9:0","valueSize":1},{"declaration":3,"isOffset":false,"isSlot":false,"src":"3198:9:0","valueSize":1},{"declaration":3,"isOffset":false,"isSlot":false,"src":"866:9:0","valueSize":1},{"declaration":11,"isOffset":false,"isSlot":false,"src":"1138:9:0","valueSize":1},{"declaration":11,"isOffset":false,"isSlot":false,"src":"2092:9:0","valueSize":1},{"declaration":11,"isOffset":false,"isSlot":false,"src":"2121:9:0","valueSize":1},{"declaration":11,"isOffset":false,"isSlot":false,"src":"690:9:0","valueSize":1},{"declaration":11,"isOffset":false,"isSlot":false,"src":"896:9:0","valueSize":1}],"id":13,"nodeType":"InlineAssembly","src":"537:2789:0"},{"expression":{"id":14,"name":"tempBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11,"src":"3343:9:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":9,"id":15,"nodeType":"Return","src":"3336:16:0"}]},"id":17,"implemented":true,"kind":"function","modifiers":[],"name":"concat","nameLocation":"401:6:0","nodeType":"FunctionDefinition","parameters":{"id":6,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3,"mutability":"mutable","name":"_preBytes","nameLocation":"421:9:0","nodeType":"VariableDeclaration","scope":17,"src":"408:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2,"name":"bytes","nodeType":"ElementaryTypeName","src":"408:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5,"mutability":"mutable","name":"_postBytes","nameLocation":"445:10:0","nodeType":"VariableDeclaration","scope":17,"src":"432:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4,"name":"bytes","nodeType":"ElementaryTypeName","src":"432:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"407:49:0"},"returnParameters":{"id":9,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":17,"src":"480:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7,"name":"bytes","nodeType":"ElementaryTypeName","src":"480:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"479:14:0"},"scope":332,"src":"392:2967:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":25,"nodeType":"Block","src":"3447:5805:0","statements":[{"AST":{"nodeType":"YulBlock","src":"3466:5780:0","statements":[{"nodeType":"YulVariableDeclaration","src":"3689:34:0","value":{"arguments":[{"name":"_preBytes.slot","nodeType":"YulIdentifier","src":"3708:14:0"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"3702:5:0"},"nodeType":"YulFunctionCall","src":"3702:21:0"},"variables":[{"name":"fslot","nodeType":"YulTypedName","src":"3693:5:0","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4216:76:0","value":{"arguments":[{"arguments":[{"name":"fslot","nodeType":"YulIdentifier","src":"4239:5:0"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4254:5:0","type":"","value":"0x100"},{"arguments":[{"arguments":[{"name":"fslot","nodeType":"YulIdentifier","src":"4272:5:0"},{"kind":"number","nodeType":"YulLiteral","src":"4279:1:0","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4268:3:0"},"nodeType":"YulFunctionCall","src":"4268:13:0"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4261:6:0"},"nodeType":"YulFunctionCall","src":"4261:21:0"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4250:3:0"},"nodeType":"YulFunctionCall","src":"4250:33:0"},{"kind":"number","nodeType":"YulLiteral","src":"4285:1:0","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4246:3:0"},"nodeType":"YulFunctionCall","src":"4246:41:0"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4235:3:0"},"nodeType":"YulFunctionCall","src":"4235:53:0"},{"kind":"number","nodeType":"YulLiteral","src":"4290:1:0","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4231:3:0"},"nodeType":"YulFunctionCall","src":"4231:61:0"},"variables":[{"name":"slength","nodeType":"YulTypedName","src":"4220:7:0","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4305:32:0","value":{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"4326:10:0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4320:5:0"},"nodeType":"YulFunctionCall","src":"4320:17:0"},"variables":[{"name":"mlength","nodeType":"YulTypedName","src":"4309:7:0","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4350:38:0","value":{"arguments":[{"name":"slength","nodeType":"YulIdentifier","src":"4371:7:0"},{"name":"mlength","nodeType":"YulIdentifier","src":"4380:7:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4367:3:0"},"nodeType":"YulFunctionCall","src":"4367:21:0"},"variables":[{"name":"newlength","nodeType":"YulTypedName","src":"4354:9:0","type":""}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"4721:1485:0","statements":[{"expression":{"arguments":[{"name":"_preBytes.slot","nodeType":"YulIdentifier","src":"5002:14:0"},{"arguments":[{"name":"fslot","nodeType":"YulIdentifier","src":"5314:5:0"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"5532:10:0"},{"kind":"number","nodeType":"YulLiteral","src":"5544:4:0","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5528:3:0"},"nodeType":"YulFunctionCall","src":"5528:21:0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5522:5:0"},"nodeType":"YulFunctionCall","src":"5522:28:0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5659:5:0","type":"","value":"0x100"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5670:2:0","type":"","value":"32"},{"name":"mlength","nodeType":"YulIdentifier","src":"5674:7:0"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5666:3:0"},"nodeType":"YulFunctionCall","src":"5666:16:0"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"5655:3:0"},"nodeType":"YulFunctionCall","src":"5655:28:0"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"5415:3:0"},"nodeType":"YulFunctionCall","src":"5415:302:0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5906:5:0","type":"","value":"0x100"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5917:2:0","type":"","value":"32"},{"name":"newlength","nodeType":"YulIdentifier","src":"5921:9:0"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5913:3:0"},"nodeType":"YulFunctionCall","src":"5913:18:0"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"5902:3:0"},"nodeType":"YulFunctionCall","src":"5902:30:0"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5378:3:0"},"nodeType":"YulFunctionCall","src":"5378:584:0"},{"arguments":[{"name":"mlength","nodeType":"YulIdentifier","src":"6115:7:0"},{"kind":"number","nodeType":"YulLiteral","src":"6124:1:0","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6111:3:0"},"nodeType":"YulFunctionCall","src":"6111:15:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5345:3:0"},"nodeType":"YulFunctionCall","src":"5345:807:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5145:3:0"},"nodeType":"YulFunctionCall","src":"5145:1029:0"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4974:6:0"},"nodeType":"YulFunctionCall","src":"4974:1218:0"},"nodeType":"YulExpressionStatement","src":"4974:1218:0"}]},"nodeType":"YulCase","src":"4714:1492:0","value":{"kind":"number","nodeType":"YulLiteral","src":"4719:1:0","type":"","value":"2"}},{"body":{"nodeType":"YulBlock","src":"6226:1725:0","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6435:3:0","type":"","value":"0x0"},{"name":"_preBytes.slot","nodeType":"YulIdentifier","src":"6440:14:0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6428:6:0"},"nodeType":"YulFunctionCall","src":"6428:27:0"},"nodeType":"YulExpressionStatement","src":"6428:27:0"},{"nodeType":"YulVariableDeclaration","src":"6472:53:0","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6496:3:0","type":"","value":"0x0"},{"kind":"number","nodeType":"YulLiteral","src":"6501:4:0","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"6486:9:0"},"nodeType":"YulFunctionCall","src":"6486:20:0"},{"arguments":[{"name":"slength","nodeType":"YulIdentifier","src":"6512:7:0"},{"kind":"number","nodeType":"YulLiteral","src":"6521:2:0","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6508:3:0"},"nodeType":"YulFunctionCall","src":"6508:16:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6482:3:0"},"nodeType":"YulFunctionCall","src":"6482:43:0"},"variables":[{"name":"sc","nodeType":"YulTypedName","src":"6476:2:0","type":""}]},{"expression":{"arguments":[{"name":"_preBytes.slot","nodeType":"YulIdentifier","src":"6585:14:0"},{"arguments":[{"arguments":[{"name":"newlength","nodeType":"YulIdentifier","src":"6609:9:0"},{"kind":"number","nodeType":"YulLiteral","src":"6620:1:0","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6605:3:0"},"nodeType":"YulFunctionCall","src":"6605:17:0"},{"kind":"number","nodeType":"YulLiteral","src":"6624:1:0","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6601:3:0"},"nodeType":"YulFunctionCall","src":"6601:25:0"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"6578:6:0"},"nodeType":"YulFunctionCall","src":"6578:49:0"},"nodeType":"YulExpressionStatement","src":"6578:49:0"},{"nodeType":"YulVariableDeclaration","src":"7215:30:0","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7233:2:0","type":"","value":"32"},{"name":"slength","nodeType":"YulIdentifier","src":"7237:7:0"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7229:3:0"},"nodeType":"YulFunctionCall","src":"7229:16:0"},"variables":[{"name":"submod","nodeType":"YulTypedName","src":"7219:6:0","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7262:33:0","value":{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"7276:10:0"},{"name":"submod","nodeType":"YulIdentifier","src":"7288:6:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7272:3:0"},"nodeType":"YulFunctionCall","src":"7272:23:0"},"variables":[{"name":"mc","nodeType":"YulTypedName","src":"7266:2:0","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7312:35:0","value":{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"7327:10:0"},{"name":"mlength","nodeType":"YulIdentifier","src":"7339:7:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7323:3:0"},"nodeType":"YulFunctionCall","src":"7323:24:0"},"variables":[{"name":"end","nodeType":"YulTypedName","src":"7316:3:0","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7364:38:0","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7384:5:0","type":"","value":"0x100"},{"name":"submod","nodeType":"YulIdentifier","src":"7391:6:0"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"7380:3:0"},"nodeType":"YulFunctionCall","src":"7380:18:0"},{"kind":"number","nodeType":"YulLiteral","src":"7400:1:0","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7376:3:0"},"nodeType":"YulFunctionCall","src":"7376:26:0"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"7368:4:0","type":""}]},{"expression":{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"7427:2:0"},{"arguments":[{"arguments":[{"name":"fslot","nodeType":"YulIdentifier","src":"7439:5:0"},{"kind":"number","nodeType":"YulLiteral","src":"7446:66:0","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7435:3:0"},"nodeType":"YulFunctionCall","src":"7435:78:0"},{"arguments":[{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"7525:2:0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7519:5:0"},"nodeType":"YulFunctionCall","src":"7519:9:0"},{"name":"mask","nodeType":"YulIdentifier","src":"7530:4:0"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7515:3:0"},"nodeType":"YulFunctionCall","src":"7515:20:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7431:3:0"},"nodeType":"YulFunctionCall","src":"7431:105:0"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"7420:6:0"},"nodeType":"YulFunctionCall","src":"7420:117:0"},"nodeType":"YulExpressionStatement","src":"7420:117:0"},{"body":{"nodeType":"YulBlock","src":"7765:61:0","statements":[{"expression":{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"7794:2:0"},{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"7804:2:0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7798:5:0"},"nodeType":"YulFunctionCall","src":"7798:9:0"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"7787:6:0"},"nodeType":"YulFunctionCall","src":"7787:21:0"},"nodeType":"YulExpressionStatement","src":"7787:21:0"}]},"condition":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"7659:2:0"},{"name":"end","nodeType":"YulIdentifier","src":"7663:3:0"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7656:2:0"},"nodeType":"YulFunctionCall","src":"7656:11:0"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7668:96:0","statements":[{"nodeType":"YulAssignment","src":"7690:16:0","value":{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"7700:2:0"},{"kind":"number","nodeType":"YulLiteral","src":"7704:1:0","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7696:3:0"},"nodeType":"YulFunctionCall","src":"7696:10:0"},"variableNames":[{"name":"sc","nodeType":"YulIdentifier","src":"7690:2:0"}]},{"nodeType":"YulAssignment","src":"7727:19:0","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"7737:2:0"},{"kind":"number","nodeType":"YulLiteral","src":"7741:4:0","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7733:3:0"},"nodeType":"YulFunctionCall","src":"7733:13:0"},"variableNames":[{"name":"mc","nodeType":"YulIdentifier","src":"7727:2:0"}]}]},"pre":{"nodeType":"YulBlock","src":"7559:96:0","statements":[{"nodeType":"YulAssignment","src":"7581:19:0","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"7591:2:0"},{"kind":"number","nodeType":"YulLiteral","src":"7595:4:0","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7587:3:0"},"nodeType":"YulFunctionCall","src":"7587:13:0"},"variableNames":[{"name":"mc","nodeType":"YulIdentifier","src":"7581:2:0"}]},{"nodeType":"YulAssignment","src":"7621:16:0","value":{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"7631:2:0"},{"kind":"number","nodeType":"YulLiteral","src":"7635:1:0","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7627:3:0"},"nodeType":"YulFunctionCall","src":"7627:10:0"},"variableNames":[{"name":"sc","nodeType":"YulIdentifier","src":"7621:2:0"}]}]},"src":"7555:271:0"},{"nodeType":"YulAssignment","src":"7844:32:0","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7856:5:0","type":"","value":"0x100"},{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"7867:2:0"},{"name":"end","nodeType":"YulIdentifier","src":"7871:3:0"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7863:3:0"},"nodeType":"YulFunctionCall","src":"7863:12:0"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"7852:3:0"},"nodeType":"YulFunctionCall","src":"7852:24:0"},"variableNames":[{"name":"mask","nodeType":"YulIdentifier","src":"7844:4:0"}]},{"expression":{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"7901:2:0"},{"arguments":[{"arguments":[{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"7919:2:0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7913:5:0"},"nodeType":"YulFunctionCall","src":"7913:9:0"},{"name":"mask","nodeType":"YulIdentifier","src":"7924:4:0"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7909:3:0"},"nodeType":"YulFunctionCall","src":"7909:20:0"},{"name":"mask","nodeType":"YulIdentifier","src":"7931:4:0"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7905:3:0"},"nodeType":"YulFunctionCall","src":"7905:31:0"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"7894:6:0"},"nodeType":"YulFunctionCall","src":"7894:43:0"},"nodeType":"YulExpressionStatement","src":"7894:43:0"}]},"nodeType":"YulCase","src":"6219:1732:0","value":{"kind":"number","nodeType":"YulLiteral","src":"6224:1:0","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"7972:1264:0","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8069:3:0","type":"","value":"0x0"},{"name":"_preBytes.slot","nodeType":"YulIdentifier","src":"8074:14:0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8062:6:0"},"nodeType":"YulFunctionCall","src":"8062:27:0"},"nodeType":"YulExpressionStatement","src":"8062:27:0"},{"nodeType":"YulVariableDeclaration","src":"8182:53:0","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8206:3:0","type":"","value":"0x0"},{"kind":"number","nodeType":"YulLiteral","src":"8211:4:0","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"8196:9:0"},"nodeType":"YulFunctionCall","src":"8196:20:0"},{"arguments":[{"name":"slength","nodeType":"YulIdentifier","src":"8222:7:0"},{"kind":"number","nodeType":"YulLiteral","src":"8231:2:0","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"8218:3:0"},"nodeType":"YulFunctionCall","src":"8218:16:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8192:3:0"},"nodeType":"YulFunctionCall","src":"8192:43:0"},"variables":[{"name":"sc","nodeType":"YulTypedName","src":"8186:2:0","type":""}]},{"expression":{"arguments":[{"name":"_preBytes.slot","nodeType":"YulIdentifier","src":"8295:14:0"},{"arguments":[{"arguments":[{"name":"newlength","nodeType":"YulIdentifier","src":"8319:9:0"},{"kind":"number","nodeType":"YulLiteral","src":"8330:1:0","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"8315:3:0"},"nodeType":"YulFunctionCall","src":"8315:17:0"},{"kind":"number","nodeType":"YulLiteral","src":"8334:1:0","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8311:3:0"},"nodeType":"YulFunctionCall","src":"8311:25:0"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8288:6:0"},"nodeType":"YulFunctionCall","src":"8288:49:0"},"nodeType":"YulExpressionStatement","src":"8288:49:0"},{"nodeType":"YulVariableDeclaration","src":"8464:34:0","value":{"arguments":[{"name":"slength","nodeType":"YulIdentifier","src":"8486:7:0"},{"kind":"number","nodeType":"YulLiteral","src":"8495:2:0","type":"","value":"32"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"8482:3:0"},"nodeType":"YulFunctionCall","src":"8482:16:0"},"variables":[{"name":"slengthmod","nodeType":"YulTypedName","src":"8468:10:0","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8515:34:0","value":{"arguments":[{"name":"mlength","nodeType":"YulIdentifier","src":"8537:7:0"},{"kind":"number","nodeType":"YulLiteral","src":"8546:2:0","type":"","value":"32"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"8533:3:0"},"nodeType":"YulFunctionCall","src":"8533:16:0"},"variables":[{"name":"mlengthmod","nodeType":"YulTypedName","src":"8519:10:0","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8566:33:0","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8584:2:0","type":"","value":"32"},{"name":"slengthmod","nodeType":"YulIdentifier","src":"8588:10:0"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8580:3:0"},"nodeType":"YulFunctionCall","src":"8580:19:0"},"variables":[{"name":"submod","nodeType":"YulTypedName","src":"8570:6:0","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8616:33:0","value":{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"8630:10:0"},{"name":"submod","nodeType":"YulIdentifier","src":"8642:6:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8626:3:0"},"nodeType":"YulFunctionCall","src":"8626:23:0"},"variables":[{"name":"mc","nodeType":"YulTypedName","src":"8620:2:0","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8666:35:0","value":{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"8681:10:0"},{"name":"mlength","nodeType":"YulIdentifier","src":"8693:7:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8677:3:0"},"nodeType":"YulFunctionCall","src":"8677:24:0"},"variables":[{"name":"end","nodeType":"YulTypedName","src":"8670:3:0","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8718:38:0","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8738:5:0","type":"","value":"0x100"},{"name":"submod","nodeType":"YulIdentifier","src":"8745:6:0"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"8734:3:0"},"nodeType":"YulFunctionCall","src":"8734:18:0"},{"kind":"number","nodeType":"YulLiteral","src":"8754:1:0","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8730:3:0"},"nodeType":"YulFunctionCall","src":"8730:26:0"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"8722:4:0","type":""}]},{"expression":{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"8781:2:0"},{"arguments":[{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"8795:2:0"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"8789:5:0"},"nodeType":"YulFunctionCall","src":"8789:9:0"},{"arguments":[{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"8810:2:0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8804:5:0"},"nodeType":"YulFunctionCall","src":"8804:9:0"},{"name":"mask","nodeType":"YulIdentifier","src":"8815:4:0"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8800:3:0"},"nodeType":"YulFunctionCall","src":"8800:20:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8785:3:0"},"nodeType":"YulFunctionCall","src":"8785:36:0"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8774:6:0"},"nodeType":"YulFunctionCall","src":"8774:48:0"},"nodeType":"YulExpressionStatement","src":"8774:48:0"},{"body":{"nodeType":"YulBlock","src":"9050:61:0","statements":[{"expression":{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"9079:2:0"},{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"9089:2:0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9083:5:0"},"nodeType":"YulFunctionCall","src":"9083:9:0"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"9072:6:0"},"nodeType":"YulFunctionCall","src":"9072:21:0"},"nodeType":"YulExpressionStatement","src":"9072:21:0"}]},"condition":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"8944:2:0"},{"name":"end","nodeType":"YulIdentifier","src":"8948:3:0"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8941:2:0"},"nodeType":"YulFunctionCall","src":"8941:11:0"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"8953:96:0","statements":[{"nodeType":"YulAssignment","src":"8975:16:0","value":{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"8985:2:0"},{"kind":"number","nodeType":"YulLiteral","src":"8989:1:0","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8981:3:0"},"nodeType":"YulFunctionCall","src":"8981:10:0"},"variableNames":[{"name":"sc","nodeType":"YulIdentifier","src":"8975:2:0"}]},{"nodeType":"YulAssignment","src":"9012:19:0","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"9022:2:0"},{"kind":"number","nodeType":"YulLiteral","src":"9026:4:0","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9018:3:0"},"nodeType":"YulFunctionCall","src":"9018:13:0"},"variableNames":[{"name":"mc","nodeType":"YulIdentifier","src":"9012:2:0"}]}]},"pre":{"nodeType":"YulBlock","src":"8844:96:0","statements":[{"nodeType":"YulAssignment","src":"8866:16:0","value":{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"8876:2:0"},{"kind":"number","nodeType":"YulLiteral","src":"8880:1:0","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8872:3:0"},"nodeType":"YulFunctionCall","src":"8872:10:0"},"variableNames":[{"name":"sc","nodeType":"YulIdentifier","src":"8866:2:0"}]},{"nodeType":"YulAssignment","src":"8903:19:0","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"8913:2:0"},{"kind":"number","nodeType":"YulLiteral","src":"8917:4:0","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8909:3:0"},"nodeType":"YulFunctionCall","src":"8909:13:0"},"variableNames":[{"name":"mc","nodeType":"YulIdentifier","src":"8903:2:0"}]}]},"src":"8840:271:0"},{"nodeType":"YulAssignment","src":"9129:32:0","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9141:5:0","type":"","value":"0x100"},{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"9152:2:0"},{"name":"end","nodeType":"YulIdentifier","src":"9156:3:0"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9148:3:0"},"nodeType":"YulFunctionCall","src":"9148:12:0"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"9137:3:0"},"nodeType":"YulFunctionCall","src":"9137:24:0"},"variableNames":[{"name":"mask","nodeType":"YulIdentifier","src":"9129:4:0"}]},{"expression":{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"9186:2:0"},{"arguments":[{"arguments":[{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"9204:2:0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9198:5:0"},"nodeType":"YulFunctionCall","src":"9198:9:0"},{"name":"mask","nodeType":"YulIdentifier","src":"9209:4:0"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9194:3:0"},"nodeType":"YulFunctionCall","src":"9194:20:0"},{"name":"mask","nodeType":"YulIdentifier","src":"9216:4:0"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"9190:3:0"},"nodeType":"YulFunctionCall","src":"9190:31:0"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"9179:6:0"},"nodeType":"YulFunctionCall","src":"9179:43:0"},"nodeType":"YulExpressionStatement","src":"9179:43:0"}]},"nodeType":"YulCase","src":"7964:1272:0","value":"default"}],"expression":{"arguments":[{"arguments":[{"name":"slength","nodeType":"YulIdentifier","src":"4669:7:0"},{"kind":"number","nodeType":"YulLiteral","src":"4678:2:0","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4666:2:0"},"nodeType":"YulFunctionCall","src":"4666:15:0"},{"arguments":[{"name":"newlength","nodeType":"YulIdentifier","src":"4686:9:0"},{"kind":"number","nodeType":"YulLiteral","src":"4697:2:0","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4683:2:0"},"nodeType":"YulFunctionCall","src":"4683:17:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4662:3:0"},"nodeType":"YulFunctionCall","src":"4662:39:0"},"nodeType":"YulSwitch","src":"4655:4581:0"}]},"evmVersion":"berlin","externalReferences":[{"declaration":21,"isOffset":false,"isSlot":false,"src":"4326:10:0","valueSize":1},{"declaration":21,"isOffset":false,"isSlot":false,"src":"5532:10:0","valueSize":1},{"declaration":21,"isOffset":false,"isSlot":false,"src":"7276:10:0","valueSize":1},{"declaration":21,"isOffset":false,"isSlot":false,"src":"7327:10:0","valueSize":1},{"declaration":21,"isOffset":false,"isSlot":false,"src":"8630:10:0","valueSize":1},{"declaration":21,"isOffset":false,"isSlot":false,"src":"8681:10:0","valueSize":1},{"declaration":19,"isOffset":false,"isSlot":true,"src":"3708:14:0","suffix":"slot","valueSize":1},{"declaration":19,"isOffset":false,"isSlot":true,"src":"5002:14:0","suffix":"slot","valueSize":1},{"declaration":19,"isOffset":false,"isSlot":true,"src":"6440:14:0","suffix":"slot","valueSize":1},{"declaration":19,"isOffset":false,"isSlot":true,"src":"6585:14:0","suffix":"slot","valueSize":1},{"declaration":19,"isOffset":false,"isSlot":true,"src":"8074:14:0","suffix":"slot","valueSize":1},{"declaration":19,"isOffset":false,"isSlot":true,"src":"8295:14:0","suffix":"slot","valueSize":1}],"id":24,"nodeType":"InlineAssembly","src":"3457:5789:0"}]},"id":26,"implemented":true,"kind":"function","modifiers":[],"name":"concatStorage","nameLocation":"3374:13:0","nodeType":"FunctionDefinition","parameters":{"id":22,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19,"mutability":"mutable","name":"_preBytes","nameLocation":"3402:9:0","nodeType":"VariableDeclaration","scope":26,"src":"3388:23:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":18,"name":"bytes","nodeType":"ElementaryTypeName","src":"3388:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":21,"mutability":"mutable","name":"_postBytes","nameLocation":"3426:10:0","nodeType":"VariableDeclaration","scope":26,"src":"3413:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":20,"name":"bytes","nodeType":"ElementaryTypeName","src":"3413:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3387:50:0"},"returnParameters":{"id":23,"nodeType":"ParameterList","parameters":[],"src":"3447:0:0"},"scope":332,"src":"3365:5887:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":62,"nodeType":"Block","src":"9388:2640:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":42,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":40,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":38,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":32,"src":"9406:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3331","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9416:2:0","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"9406:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":41,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":32,"src":"9422:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9406:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"736c6963655f6f766572666c6f77","id":43,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9431:16:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_5d3d629f76473d94377d221b1f1c8f2161f7b65cab69e095662ec5d0e026c17e","typeString":"literal_string \"slice_overflow\""},"value":"slice_overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5d3d629f76473d94377d221b1f1c8f2161f7b65cab69e095662ec5d0e026c17e","typeString":"literal_string \"slice_overflow\""}],"id":37,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9398:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":44,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9398:50:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":45,"nodeType":"ExpressionStatement","src":"9398:50:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":52,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":47,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":28,"src":"9466:6:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":48,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9473:6:0","memberName":"length","nodeType":"MemberAccess","src":"9466:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":49,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"9483:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":50,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":32,"src":"9492:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9483:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9466:33:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"736c6963655f6f75744f66426f756e6473","id":53,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9501:19:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_cca2258dcc0d08c244435525255fbef9116c9a31b4c29471218f002bbbceb7a0","typeString":"literal_string \"slice_outOfBounds\""},"value":"slice_outOfBounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cca2258dcc0d08c244435525255fbef9116c9a31b4c29471218f002bbbceb7a0","typeString":"literal_string \"slice_outOfBounds\""}],"id":46,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9458:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9458:63:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"9458:63:0"},{"assignments":[57],"declarations":[{"constant":false,"id":57,"mutability":"mutable","name":"tempBytes","nameLocation":"9545:9:0","nodeType":"VariableDeclaration","scope":62,"src":"9532:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":56,"name":"bytes","nodeType":"ElementaryTypeName","src":"9532:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":58,"nodeType":"VariableDeclarationStatement","src":"9532:22:0"},{"AST":{"nodeType":"YulBlock","src":"9574:2421:0","statements":[{"cases":[{"body":{"nodeType":"YulBlock","src":"9630:1960:0","statements":[{"nodeType":"YulAssignment","src":"9786:24:0","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9805:4:0","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9799:5:0"},"nodeType":"YulFunctionCall","src":"9799:11:0"},"variableNames":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"9786:9:0"}]},{"nodeType":"YulVariableDeclaration","src":"10434:33:0","value":{"arguments":[{"name":"_length","nodeType":"YulIdentifier","src":"10455:7:0"},{"kind":"number","nodeType":"YulLiteral","src":"10464:2:0","type":"","value":"31"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10451:3:0"},"nodeType":"YulFunctionCall","src":"10451:16:0"},"variables":[{"name":"lengthmod","nodeType":"YulTypedName","src":"10438:9:0","type":""}]},{"nodeType":"YulVariableDeclaration","src":"10788:70:0","value":{"arguments":[{"arguments":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"10806:9:0"},{"name":"lengthmod","nodeType":"YulIdentifier","src":"10817:9:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10802:3:0"},"nodeType":"YulFunctionCall","src":"10802:25:0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10833:4:0","type":"","value":"0x20"},{"arguments":[{"name":"lengthmod","nodeType":"YulIdentifier","src":"10846:9:0"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10839:6:0"},"nodeType":"YulFunctionCall","src":"10839:17:0"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"10829:3:0"},"nodeType":"YulFunctionCall","src":"10829:28:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10798:3:0"},"nodeType":"YulFunctionCall","src":"10798:60:0"},"variables":[{"name":"mc","nodeType":"YulTypedName","src":"10792:2:0","type":""}]},{"nodeType":"YulVariableDeclaration","src":"10875:27:0","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"10890:2:0"},{"name":"_length","nodeType":"YulIdentifier","src":"10894:7:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10886:3:0"},"nodeType":"YulFunctionCall","src":"10886:16:0"},"variables":[{"name":"end","nodeType":"YulTypedName","src":"10879:3:0","type":""}]},{"body":{"nodeType":"YulBlock","src":"11284:61:0","statements":[{"expression":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"11313:2:0"},{"arguments":[{"name":"cc","nodeType":"YulIdentifier","src":"11323:2:0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11317:5:0"},"nodeType":"YulFunctionCall","src":"11317:9:0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11306:6:0"},"nodeType":"YulFunctionCall","src":"11306:21:0"},"nodeType":"YulExpressionStatement","src":"11306:21:0"}]},"condition":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"11175:2:0"},{"name":"end","nodeType":"YulIdentifier","src":"11179:3:0"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11172:2:0"},"nodeType":"YulFunctionCall","src":"11172:11:0"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"11184:99:0","statements":[{"nodeType":"YulAssignment","src":"11206:19:0","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"11216:2:0"},{"kind":"number","nodeType":"YulLiteral","src":"11220:4:0","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11212:3:0"},"nodeType":"YulFunctionCall","src":"11212:13:0"},"variableNames":[{"name":"mc","nodeType":"YulIdentifier","src":"11206:2:0"}]},{"nodeType":"YulAssignment","src":"11246:19:0","value":{"arguments":[{"name":"cc","nodeType":"YulIdentifier","src":"11256:2:0"},{"kind":"number","nodeType":"YulLiteral","src":"11260:4:0","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11252:3:0"},"nodeType":"YulFunctionCall","src":"11252:13:0"},"variableNames":[{"name":"cc","nodeType":"YulIdentifier","src":"11246:2:0"}]}]},"pre":{"nodeType":"YulBlock","src":"10924:247:0","statements":[{"nodeType":"YulVariableDeclaration","src":"11073:80:0","value":{"arguments":[{"arguments":[{"arguments":[{"name":"_bytes","nodeType":"YulIdentifier","src":"11095:6:0"},{"name":"lengthmod","nodeType":"YulIdentifier","src":"11103:9:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11091:3:0"},"nodeType":"YulFunctionCall","src":"11091:22:0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11119:4:0","type":"","value":"0x20"},{"arguments":[{"name":"lengthmod","nodeType":"YulIdentifier","src":"11132:9:0"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11125:6:0"},"nodeType":"YulFunctionCall","src":"11125:17:0"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"11115:3:0"},"nodeType":"YulFunctionCall","src":"11115:28:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11087:3:0"},"nodeType":"YulFunctionCall","src":"11087:57:0"},{"name":"_start","nodeType":"YulIdentifier","src":"11146:6:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11083:3:0"},"nodeType":"YulFunctionCall","src":"11083:70:0"},"variables":[{"name":"cc","nodeType":"YulTypedName","src":"11077:2:0","type":""}]}]},"src":"10920:425:0"},{"expression":{"arguments":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"11370:9:0"},{"name":"_length","nodeType":"YulIdentifier","src":"11381:7:0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11363:6:0"},"nodeType":"YulFunctionCall","src":"11363:26:0"},"nodeType":"YulExpressionStatement","src":"11363:26:0"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11544:4:0","type":"","value":"0x40"},{"arguments":[{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"11558:2:0"},{"kind":"number","nodeType":"YulLiteral","src":"11562:2:0","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11554:3:0"},"nodeType":"YulFunctionCall","src":"11554:11:0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11571:2:0","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"11567:3:0"},"nodeType":"YulFunctionCall","src":"11567:7:0"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11550:3:0"},"nodeType":"YulFunctionCall","src":"11550:25:0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11537:6:0"},"nodeType":"YulFunctionCall","src":"11537:39:0"},"nodeType":"YulExpressionStatement","src":"11537:39:0"}]},"nodeType":"YulCase","src":"9623:1967:0","value":{"kind":"number","nodeType":"YulLiteral","src":"9628:1:0","type":"","value":"0"}},{"body":{"nodeType":"YulBlock","src":"11694:291:0","statements":[{"nodeType":"YulAssignment","src":"11712:24:0","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11731:4:0","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11725:5:0"},"nodeType":"YulFunctionCall","src":"11725:11:0"},"variableNames":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"11712:9:0"}]},{"expression":{"arguments":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"11906:9:0"},{"kind":"number","nodeType":"YulLiteral","src":"11917:1:0","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11899:6:0"},"nodeType":"YulFunctionCall","src":"11899:20:0"},"nodeType":"YulExpressionStatement","src":"11899:20:0"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11944:4:0","type":"","value":"0x40"},{"arguments":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"11954:9:0"},{"kind":"number","nodeType":"YulLiteral","src":"11965:4:0","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11950:3:0"},"nodeType":"YulFunctionCall","src":"11950:20:0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11937:6:0"},"nodeType":"YulFunctionCall","src":"11937:34:0"},"nodeType":"YulExpressionStatement","src":"11937:34:0"}]},"nodeType":"YulCase","src":"11686:299:0","value":"default"}],"expression":{"arguments":[{"name":"_length","nodeType":"YulIdentifier","src":"9602:7:0"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9595:6:0"},"nodeType":"YulFunctionCall","src":"9595:15:0"},"nodeType":"YulSwitch","src":"9588:2397:0"}]},"evmVersion":"berlin","externalReferences":[{"declaration":28,"isOffset":false,"isSlot":false,"src":"11095:6:0","valueSize":1},{"declaration":32,"isOffset":false,"isSlot":false,"src":"10455:7:0","valueSize":1},{"declaration":32,"isOffset":false,"isSlot":false,"src":"10894:7:0","valueSize":1},{"declaration":32,"isOffset":false,"isSlot":false,"src":"11381:7:0","valueSize":1},{"declaration":32,"isOffset":false,"isSlot":false,"src":"9602:7:0","valueSize":1},{"declaration":30,"isOffset":false,"isSlot":false,"src":"11146:6:0","valueSize":1},{"declaration":57,"isOffset":false,"isSlot":false,"src":"10806:9:0","valueSize":1},{"declaration":57,"isOffset":false,"isSlot":false,"src":"11370:9:0","valueSize":1},{"declaration":57,"isOffset":false,"isSlot":false,"src":"11712:9:0","valueSize":1},{"declaration":57,"isOffset":false,"isSlot":false,"src":"11906:9:0","valueSize":1},{"declaration":57,"isOffset":false,"isSlot":false,"src":"11954:9:0","valueSize":1},{"declaration":57,"isOffset":false,"isSlot":false,"src":"9786:9:0","valueSize":1}],"id":59,"nodeType":"InlineAssembly","src":"9565:2430:0"},{"expression":{"id":60,"name":"tempBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":57,"src":"12012:9:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":36,"id":61,"nodeType":"Return","src":"12005:16:0"}]},"id":63,"implemented":true,"kind":"function","modifiers":[],"name":"slice","nameLocation":"9267:5:0","nodeType":"FunctionDefinition","parameters":{"id":33,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28,"mutability":"mutable","name":"_bytes","nameLocation":"9295:6:0","nodeType":"VariableDeclaration","scope":63,"src":"9282:19:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":27,"name":"bytes","nodeType":"ElementaryTypeName","src":"9282:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":30,"mutability":"mutable","name":"_start","nameLocation":"9316:6:0","nodeType":"VariableDeclaration","scope":63,"src":"9311:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":29,"name":"uint","nodeType":"ElementaryTypeName","src":"9311:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":32,"mutability":"mutable","name":"_length","nameLocation":"9337:7:0","nodeType":"VariableDeclaration","scope":63,"src":"9332:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":31,"name":"uint","nodeType":"ElementaryTypeName","src":"9332:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9272:78:0"},"returnParameters":{"id":36,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":63,"src":"9374:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":34,"name":"bytes","nodeType":"ElementaryTypeName","src":"9374:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9373:14:0"},"scope":332,"src":"9258:2770:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":88,"nodeType":"Block","src":"12119:266:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":73,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65,"src":"12137:6:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12144:6:0","memberName":"length","nodeType":"MemberAccess","src":"12137:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":77,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":75,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"12154:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3230","id":76,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12163:2:0","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"src":"12154:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12137:28:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"746f416464726573735f6f75744f66426f756e6473","id":79,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12167:23:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_9f688071e1df0f70b63e3651005878331be1fe9591d6cfb3187cb52a13439e5d","typeString":"literal_string \"toAddress_outOfBounds\""},"value":"toAddress_outOfBounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9f688071e1df0f70b63e3651005878331be1fe9591d6cfb3187cb52a13439e5d","typeString":"literal_string \"toAddress_outOfBounds\""}],"id":72,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12129:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":80,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12129:62:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":81,"nodeType":"ExpressionStatement","src":"12129:62:0"},{"assignments":[83],"declarations":[{"constant":false,"id":83,"mutability":"mutable","name":"tempAddress","nameLocation":"12209:11:0","nodeType":"VariableDeclaration","scope":88,"src":"12201:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":82,"name":"address","nodeType":"ElementaryTypeName","src":"12201:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":84,"nodeType":"VariableDeclarationStatement","src":"12201:19:0"},{"AST":{"nodeType":"YulBlock","src":"12240:110:0","statements":[{"nodeType":"YulAssignment","src":"12254:86:0","value":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_bytes","nodeType":"YulIdentifier","src":"12287:6:0"},{"kind":"number","nodeType":"YulLiteral","src":"12295:4:0","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12283:3:0"},"nodeType":"YulFunctionCall","src":"12283:17:0"},{"name":"_start","nodeType":"YulIdentifier","src":"12302:6:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12279:3:0"},"nodeType":"YulFunctionCall","src":"12279:30:0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12273:5:0"},"nodeType":"YulFunctionCall","src":"12273:37:0"},{"kind":"number","nodeType":"YulLiteral","src":"12312:27:0","type":"","value":"0x1000000000000000000000000"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"12269:3:0"},"nodeType":"YulFunctionCall","src":"12269:71:0"},"variableNames":[{"name":"tempAddress","nodeType":"YulIdentifier","src":"12254:11:0"}]}]},"evmVersion":"berlin","externalReferences":[{"declaration":65,"isOffset":false,"isSlot":false,"src":"12287:6:0","valueSize":1},{"declaration":67,"isOffset":false,"isSlot":false,"src":"12302:6:0","valueSize":1},{"declaration":83,"isOffset":false,"isSlot":false,"src":"12254:11:0","valueSize":1}],"id":85,"nodeType":"InlineAssembly","src":"12231:119:0"},{"expression":{"id":86,"name":"tempAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":83,"src":"12367:11:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":71,"id":87,"nodeType":"Return","src":"12360:18:0"}]},"id":89,"implemented":true,"kind":"function","modifiers":[],"name":"toAddress","nameLocation":"12043:9:0","nodeType":"FunctionDefinition","parameters":{"id":68,"nodeType":"ParameterList","parameters":[{"constant":false,"id":65,"mutability":"mutable","name":"_bytes","nameLocation":"12066:6:0","nodeType":"VariableDeclaration","scope":89,"src":"12053:19:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":64,"name":"bytes","nodeType":"ElementaryTypeName","src":"12053:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":67,"mutability":"mutable","name":"_start","nameLocation":"12079:6:0","nodeType":"VariableDeclaration","scope":89,"src":"12074:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":66,"name":"uint","nodeType":"ElementaryTypeName","src":"12074:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12052:34:0"},"returnParameters":{"id":71,"nodeType":"ParameterList","parameters":[{"constant":false,"id":70,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":89,"src":"12110:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":69,"name":"address","nodeType":"ElementaryTypeName","src":"12110:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12109:9:0"},"scope":332,"src":"12034:351:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":114,"nodeType":"Block","src":"12472:217:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":99,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":91,"src":"12490:6:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12497:6:0","memberName":"length","nodeType":"MemberAccess","src":"12490:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":101,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":93,"src":"12507:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12516:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12507:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12490:27:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"746f55696e74385f6f75744f66426f756e6473","id":105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12519:21:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_ce6d7be00009dd45cc670fb6c2ceee25786f142bcb64e7f1ee73012b26bb6ca1","typeString":"literal_string \"toUint8_outOfBounds\""},"value":"toUint8_outOfBounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ce6d7be00009dd45cc670fb6c2ceee25786f142bcb64e7f1ee73012b26bb6ca1","typeString":"literal_string \"toUint8_outOfBounds\""}],"id":98,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12482:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12482:59:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":107,"nodeType":"ExpressionStatement","src":"12482:59:0"},{"assignments":[109],"declarations":[{"constant":false,"id":109,"mutability":"mutable","name":"tempUint","nameLocation":"12557:8:0","nodeType":"VariableDeclaration","scope":114,"src":"12551:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":108,"name":"uint8","nodeType":"ElementaryTypeName","src":"12551:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":110,"nodeType":"VariableDeclarationStatement","src":"12551:14:0"},{"AST":{"nodeType":"YulBlock","src":"12585:72:0","statements":[{"nodeType":"YulAssignment","src":"12599:48:0","value":{"arguments":[{"arguments":[{"arguments":[{"name":"_bytes","nodeType":"YulIdentifier","src":"12625:6:0"},{"kind":"number","nodeType":"YulLiteral","src":"12633:3:0","type":"","value":"0x1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12621:3:0"},"nodeType":"YulFunctionCall","src":"12621:16:0"},{"name":"_start","nodeType":"YulIdentifier","src":"12639:6:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12617:3:0"},"nodeType":"YulFunctionCall","src":"12617:29:0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12611:5:0"},"nodeType":"YulFunctionCall","src":"12611:36:0"},"variableNames":[{"name":"tempUint","nodeType":"YulIdentifier","src":"12599:8:0"}]}]},"evmVersion":"berlin","externalReferences":[{"declaration":91,"isOffset":false,"isSlot":false,"src":"12625:6:0","valueSize":1},{"declaration":93,"isOffset":false,"isSlot":false,"src":"12639:6:0","valueSize":1},{"declaration":109,"isOffset":false,"isSlot":false,"src":"12599:8:0","valueSize":1}],"id":111,"nodeType":"InlineAssembly","src":"12576:81:0"},{"expression":{"id":112,"name":"tempUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":109,"src":"12674:8:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":97,"id":113,"nodeType":"Return","src":"12667:15:0"}]},"id":115,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"12400:7:0","nodeType":"FunctionDefinition","parameters":{"id":94,"nodeType":"ParameterList","parameters":[{"constant":false,"id":91,"mutability":"mutable","name":"_bytes","nameLocation":"12421:6:0","nodeType":"VariableDeclaration","scope":115,"src":"12408:19:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":90,"name":"bytes","nodeType":"ElementaryTypeName","src":"12408:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":93,"mutability":"mutable","name":"_start","nameLocation":"12434:6:0","nodeType":"VariableDeclaration","scope":115,"src":"12429:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":92,"name":"uint","nodeType":"ElementaryTypeName","src":"12429:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12407:34:0"},"returnParameters":{"id":97,"nodeType":"ParameterList","parameters":[{"constant":false,"id":96,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":115,"src":"12465:5:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":95,"name":"uint8","nodeType":"ElementaryTypeName","src":"12465:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"12464:7:0"},"scope":332,"src":"12391:298:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":140,"nodeType":"Block","src":"12778:219:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":125,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":117,"src":"12796:6:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12803:6:0","memberName":"length","nodeType":"MemberAccess","src":"12796:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":127,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":119,"src":"12813:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12822:1:0","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12813:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12796:27:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"746f55696e7431365f6f75744f66426f756e6473","id":131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12825:22:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_414233483a71244a4f2700455a9733e71511b5279e381bdd2af6d44b1b09ecab","typeString":"literal_string \"toUint16_outOfBounds\""},"value":"toUint16_outOfBounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_414233483a71244a4f2700455a9733e71511b5279e381bdd2af6d44b1b09ecab","typeString":"literal_string \"toUint16_outOfBounds\""}],"id":124,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12788:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12788:60:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":133,"nodeType":"ExpressionStatement","src":"12788:60:0"},{"assignments":[135],"declarations":[{"constant":false,"id":135,"mutability":"mutable","name":"tempUint","nameLocation":"12865:8:0","nodeType":"VariableDeclaration","scope":140,"src":"12858:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":134,"name":"uint16","nodeType":"ElementaryTypeName","src":"12858:6:0","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"id":136,"nodeType":"VariableDeclarationStatement","src":"12858:15:0"},{"AST":{"nodeType":"YulBlock","src":"12893:72:0","statements":[{"nodeType":"YulAssignment","src":"12907:48:0","value":{"arguments":[{"arguments":[{"arguments":[{"name":"_bytes","nodeType":"YulIdentifier","src":"12933:6:0"},{"kind":"number","nodeType":"YulLiteral","src":"12941:3:0","type":"","value":"0x2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12929:3:0"},"nodeType":"YulFunctionCall","src":"12929:16:0"},{"name":"_start","nodeType":"YulIdentifier","src":"12947:6:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12925:3:0"},"nodeType":"YulFunctionCall","src":"12925:29:0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12919:5:0"},"nodeType":"YulFunctionCall","src":"12919:36:0"},"variableNames":[{"name":"tempUint","nodeType":"YulIdentifier","src":"12907:8:0"}]}]},"evmVersion":"berlin","externalReferences":[{"declaration":117,"isOffset":false,"isSlot":false,"src":"12933:6:0","valueSize":1},{"declaration":119,"isOffset":false,"isSlot":false,"src":"12947:6:0","valueSize":1},{"declaration":135,"isOffset":false,"isSlot":false,"src":"12907:8:0","valueSize":1}],"id":137,"nodeType":"InlineAssembly","src":"12884:81:0"},{"expression":{"id":138,"name":"tempUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":135,"src":"12982:8:0","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":123,"id":139,"nodeType":"Return","src":"12975:15:0"}]},"id":141,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"12704:8:0","nodeType":"FunctionDefinition","parameters":{"id":120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":117,"mutability":"mutable","name":"_bytes","nameLocation":"12726:6:0","nodeType":"VariableDeclaration","scope":141,"src":"12713:19:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":116,"name":"bytes","nodeType":"ElementaryTypeName","src":"12713:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":119,"mutability":"mutable","name":"_start","nameLocation":"12739:6:0","nodeType":"VariableDeclaration","scope":141,"src":"12734:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":118,"name":"uint","nodeType":"ElementaryTypeName","src":"12734:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12712:34:0"},"returnParameters":{"id":123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":122,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":141,"src":"12770:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":121,"name":"uint16","nodeType":"ElementaryTypeName","src":"12770:6:0","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"12769:8:0"},"scope":332,"src":"12695:302:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":166,"nodeType":"Block","src":"13086:219:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":151,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":143,"src":"13104:6:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13111:6:0","memberName":"length","nodeType":"MemberAccess","src":"13104:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":153,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":145,"src":"13121:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"34","id":154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13130:1:0","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"13121:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13104:27:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"746f55696e7433325f6f75744f66426f756e6473","id":157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13133:22:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_e0a09853867d05bef4b1d534052126bc72acd3515e1725b9b280e16d988e6ccf","typeString":"literal_string \"toUint32_outOfBounds\""},"value":"toUint32_outOfBounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e0a09853867d05bef4b1d534052126bc72acd3515e1725b9b280e16d988e6ccf","typeString":"literal_string \"toUint32_outOfBounds\""}],"id":150,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13096:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13096:60:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":159,"nodeType":"ExpressionStatement","src":"13096:60:0"},{"assignments":[161],"declarations":[{"constant":false,"id":161,"mutability":"mutable","name":"tempUint","nameLocation":"13173:8:0","nodeType":"VariableDeclaration","scope":166,"src":"13166:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":160,"name":"uint32","nodeType":"ElementaryTypeName","src":"13166:6:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"id":162,"nodeType":"VariableDeclarationStatement","src":"13166:15:0"},{"AST":{"nodeType":"YulBlock","src":"13201:72:0","statements":[{"nodeType":"YulAssignment","src":"13215:48:0","value":{"arguments":[{"arguments":[{"arguments":[{"name":"_bytes","nodeType":"YulIdentifier","src":"13241:6:0"},{"kind":"number","nodeType":"YulLiteral","src":"13249:3:0","type":"","value":"0x4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13237:3:0"},"nodeType":"YulFunctionCall","src":"13237:16:0"},{"name":"_start","nodeType":"YulIdentifier","src":"13255:6:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13233:3:0"},"nodeType":"YulFunctionCall","src":"13233:29:0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13227:5:0"},"nodeType":"YulFunctionCall","src":"13227:36:0"},"variableNames":[{"name":"tempUint","nodeType":"YulIdentifier","src":"13215:8:0"}]}]},"evmVersion":"berlin","externalReferences":[{"declaration":143,"isOffset":false,"isSlot":false,"src":"13241:6:0","valueSize":1},{"declaration":145,"isOffset":false,"isSlot":false,"src":"13255:6:0","valueSize":1},{"declaration":161,"isOffset":false,"isSlot":false,"src":"13215:8:0","valueSize":1}],"id":163,"nodeType":"InlineAssembly","src":"13192:81:0"},{"expression":{"id":164,"name":"tempUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":161,"src":"13290:8:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":149,"id":165,"nodeType":"Return","src":"13283:15:0"}]},"id":167,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"13012:8:0","nodeType":"FunctionDefinition","parameters":{"id":146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":143,"mutability":"mutable","name":"_bytes","nameLocation":"13034:6:0","nodeType":"VariableDeclaration","scope":167,"src":"13021:19:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":142,"name":"bytes","nodeType":"ElementaryTypeName","src":"13021:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":145,"mutability":"mutable","name":"_start","nameLocation":"13047:6:0","nodeType":"VariableDeclaration","scope":167,"src":"13042:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":144,"name":"uint","nodeType":"ElementaryTypeName","src":"13042:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13020:34:0"},"returnParameters":{"id":149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":148,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":167,"src":"13078:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":147,"name":"uint32","nodeType":"ElementaryTypeName","src":"13078:6:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"13077:8:0"},"scope":332,"src":"13003:302:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":192,"nodeType":"Block","src":"13394:219:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":177,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"13412:6:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13419:6:0","memberName":"length","nodeType":"MemberAccess","src":"13412:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":179,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"13429:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"38","id":180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13438:1:0","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"13429:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13412:27:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"746f55696e7436345f6f75744f66426f756e6473","id":183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13441:22:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_55885cc1e15ebd0ff3d9803b39476f6ee2279f42aa3070b40f2de433347c0145","typeString":"literal_string \"toUint64_outOfBounds\""},"value":"toUint64_outOfBounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_55885cc1e15ebd0ff3d9803b39476f6ee2279f42aa3070b40f2de433347c0145","typeString":"literal_string \"toUint64_outOfBounds\""}],"id":176,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13404:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13404:60:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":185,"nodeType":"ExpressionStatement","src":"13404:60:0"},{"assignments":[187],"declarations":[{"constant":false,"id":187,"mutability":"mutable","name":"tempUint","nameLocation":"13481:8:0","nodeType":"VariableDeclaration","scope":192,"src":"13474:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":186,"name":"uint64","nodeType":"ElementaryTypeName","src":"13474:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"id":188,"nodeType":"VariableDeclarationStatement","src":"13474:15:0"},{"AST":{"nodeType":"YulBlock","src":"13509:72:0","statements":[{"nodeType":"YulAssignment","src":"13523:48:0","value":{"arguments":[{"arguments":[{"arguments":[{"name":"_bytes","nodeType":"YulIdentifier","src":"13549:6:0"},{"kind":"number","nodeType":"YulLiteral","src":"13557:3:0","type":"","value":"0x8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13545:3:0"},"nodeType":"YulFunctionCall","src":"13545:16:0"},{"name":"_start","nodeType":"YulIdentifier","src":"13563:6:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13541:3:0"},"nodeType":"YulFunctionCall","src":"13541:29:0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13535:5:0"},"nodeType":"YulFunctionCall","src":"13535:36:0"},"variableNames":[{"name":"tempUint","nodeType":"YulIdentifier","src":"13523:8:0"}]}]},"evmVersion":"berlin","externalReferences":[{"declaration":169,"isOffset":false,"isSlot":false,"src":"13549:6:0","valueSize":1},{"declaration":171,"isOffset":false,"isSlot":false,"src":"13563:6:0","valueSize":1},{"declaration":187,"isOffset":false,"isSlot":false,"src":"13523:8:0","valueSize":1}],"id":189,"nodeType":"InlineAssembly","src":"13500:81:0"},{"expression":{"id":190,"name":"tempUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":187,"src":"13598:8:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":175,"id":191,"nodeType":"Return","src":"13591:15:0"}]},"id":193,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13320:8:0","nodeType":"FunctionDefinition","parameters":{"id":172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":169,"mutability":"mutable","name":"_bytes","nameLocation":"13342:6:0","nodeType":"VariableDeclaration","scope":193,"src":"13329:19:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":168,"name":"bytes","nodeType":"ElementaryTypeName","src":"13329:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":171,"mutability":"mutable","name":"_start","nameLocation":"13355:6:0","nodeType":"VariableDeclaration","scope":193,"src":"13350:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":170,"name":"uint","nodeType":"ElementaryTypeName","src":"13350:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13328:34:0"},"returnParameters":{"id":175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":174,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":193,"src":"13386:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":173,"name":"uint64","nodeType":"ElementaryTypeName","src":"13386:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13385:8:0"},"scope":332,"src":"13311:302:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":218,"nodeType":"Block","src":"13702:220:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":203,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"13720:6:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13727:6:0","memberName":"length","nodeType":"MemberAccess","src":"13720:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":205,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":197,"src":"13737:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3132","id":206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13746:2:0","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"12"},"src":"13737:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13720:28:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"746f55696e7439365f6f75744f66426f756e6473","id":209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13750:22:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_245175b34ac1d95c460f2a4fcb106dbfea12949a3cbb7ae3362c49144bb9feb7","typeString":"literal_string \"toUint96_outOfBounds\""},"value":"toUint96_outOfBounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245175b34ac1d95c460f2a4fcb106dbfea12949a3cbb7ae3362c49144bb9feb7","typeString":"literal_string \"toUint96_outOfBounds\""}],"id":202,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13712:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13712:61:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":211,"nodeType":"ExpressionStatement","src":"13712:61:0"},{"assignments":[213],"declarations":[{"constant":false,"id":213,"mutability":"mutable","name":"tempUint","nameLocation":"13790:8:0","nodeType":"VariableDeclaration","scope":218,"src":"13783:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":212,"name":"uint96","nodeType":"ElementaryTypeName","src":"13783:6:0","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"id":214,"nodeType":"VariableDeclarationStatement","src":"13783:15:0"},{"AST":{"nodeType":"YulBlock","src":"13818:72:0","statements":[{"nodeType":"YulAssignment","src":"13832:48:0","value":{"arguments":[{"arguments":[{"arguments":[{"name":"_bytes","nodeType":"YulIdentifier","src":"13858:6:0"},{"kind":"number","nodeType":"YulLiteral","src":"13866:3:0","type":"","value":"0xc"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13854:3:0"},"nodeType":"YulFunctionCall","src":"13854:16:0"},{"name":"_start","nodeType":"YulIdentifier","src":"13872:6:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13850:3:0"},"nodeType":"YulFunctionCall","src":"13850:29:0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13844:5:0"},"nodeType":"YulFunctionCall","src":"13844:36:0"},"variableNames":[{"name":"tempUint","nodeType":"YulIdentifier","src":"13832:8:0"}]}]},"evmVersion":"berlin","externalReferences":[{"declaration":195,"isOffset":false,"isSlot":false,"src":"13858:6:0","valueSize":1},{"declaration":197,"isOffset":false,"isSlot":false,"src":"13872:6:0","valueSize":1},{"declaration":213,"isOffset":false,"isSlot":false,"src":"13832:8:0","valueSize":1}],"id":215,"nodeType":"InlineAssembly","src":"13809:81:0"},{"expression":{"id":216,"name":"tempUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":213,"src":"13907:8:0","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":201,"id":217,"nodeType":"Return","src":"13900:15:0"}]},"id":219,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"13628:8:0","nodeType":"FunctionDefinition","parameters":{"id":198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":195,"mutability":"mutable","name":"_bytes","nameLocation":"13650:6:0","nodeType":"VariableDeclaration","scope":219,"src":"13637:19:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":194,"name":"bytes","nodeType":"ElementaryTypeName","src":"13637:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":197,"mutability":"mutable","name":"_start","nameLocation":"13663:6:0","nodeType":"VariableDeclaration","scope":219,"src":"13658:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":196,"name":"uint","nodeType":"ElementaryTypeName","src":"13658:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13636:34:0"},"returnParameters":{"id":201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":200,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":219,"src":"13694:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":199,"name":"uint96","nodeType":"ElementaryTypeName","src":"13694:6:0","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"13693:8:0"},"scope":332,"src":"13619:303:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":244,"nodeType":"Block","src":"14013:223:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":229,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":221,"src":"14031:6:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14038:6:0","memberName":"length","nodeType":"MemberAccess","src":"14031:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":231,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"14048:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3136","id":232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14057:2:0","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"14048:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14031:28:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"746f55696e743132385f6f75744f66426f756e6473","id":235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14061:23:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_17474b965d7fdba029328487966488b63c32338e60aea74eafb22325bb8d90dc","typeString":"literal_string \"toUint128_outOfBounds\""},"value":"toUint128_outOfBounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_17474b965d7fdba029328487966488b63c32338e60aea74eafb22325bb8d90dc","typeString":"literal_string \"toUint128_outOfBounds\""}],"id":228,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14023:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14023:62:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":237,"nodeType":"ExpressionStatement","src":"14023:62:0"},{"assignments":[239],"declarations":[{"constant":false,"id":239,"mutability":"mutable","name":"tempUint","nameLocation":"14103:8:0","nodeType":"VariableDeclaration","scope":244,"src":"14095:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":238,"name":"uint128","nodeType":"ElementaryTypeName","src":"14095:7:0","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"id":240,"nodeType":"VariableDeclarationStatement","src":"14095:16:0"},{"AST":{"nodeType":"YulBlock","src":"14131:73:0","statements":[{"nodeType":"YulAssignment","src":"14145:49:0","value":{"arguments":[{"arguments":[{"arguments":[{"name":"_bytes","nodeType":"YulIdentifier","src":"14171:6:0"},{"kind":"number","nodeType":"YulLiteral","src":"14179:4:0","type":"","value":"0x10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14167:3:0"},"nodeType":"YulFunctionCall","src":"14167:17:0"},{"name":"_start","nodeType":"YulIdentifier","src":"14186:6:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14163:3:0"},"nodeType":"YulFunctionCall","src":"14163:30:0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14157:5:0"},"nodeType":"YulFunctionCall","src":"14157:37:0"},"variableNames":[{"name":"tempUint","nodeType":"YulIdentifier","src":"14145:8:0"}]}]},"evmVersion":"berlin","externalReferences":[{"declaration":221,"isOffset":false,"isSlot":false,"src":"14171:6:0","valueSize":1},{"declaration":223,"isOffset":false,"isSlot":false,"src":"14186:6:0","valueSize":1},{"declaration":239,"isOffset":false,"isSlot":false,"src":"14145:8:0","valueSize":1}],"id":241,"nodeType":"InlineAssembly","src":"14122:82:0"},{"expression":{"id":242,"name":"tempUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":239,"src":"14221:8:0","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":227,"id":243,"nodeType":"Return","src":"14214:15:0"}]},"id":245,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"13937:9:0","nodeType":"FunctionDefinition","parameters":{"id":224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":221,"mutability":"mutable","name":"_bytes","nameLocation":"13960:6:0","nodeType":"VariableDeclaration","scope":245,"src":"13947:19:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":220,"name":"bytes","nodeType":"ElementaryTypeName","src":"13947:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":223,"mutability":"mutable","name":"_start","nameLocation":"13973:6:0","nodeType":"VariableDeclaration","scope":245,"src":"13968:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":222,"name":"uint","nodeType":"ElementaryTypeName","src":"13968:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13946:34:0"},"returnParameters":{"id":227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":226,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":245,"src":"14004:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":225,"name":"uint128","nodeType":"ElementaryTypeName","src":"14004:7:0","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"14003:9:0"},"scope":332,"src":"13928:308:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":270,"nodeType":"Block","src":"14324:220:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":255,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":247,"src":"14342:6:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14349:6:0","memberName":"length","nodeType":"MemberAccess","src":"14342:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":257,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":249,"src":"14359:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3332","id":258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14368:2:0","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"14359:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14342:28:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"746f55696e743235365f6f75744f66426f756e6473","id":261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14372:23:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_87a32b96294a395a4fb365d8b27a23d532fa10419cffd7dc13367cdc71bf4d7b","typeString":"literal_string \"toUint256_outOfBounds\""},"value":"toUint256_outOfBounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_87a32b96294a395a4fb365d8b27a23d532fa10419cffd7dc13367cdc71bf4d7b","typeString":"literal_string \"toUint256_outOfBounds\""}],"id":254,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14334:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14334:62:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":263,"nodeType":"ExpressionStatement","src":"14334:62:0"},{"assignments":[265],"declarations":[{"constant":false,"id":265,"mutability":"mutable","name":"tempUint","nameLocation":"14411:8:0","nodeType":"VariableDeclaration","scope":270,"src":"14406:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":264,"name":"uint","nodeType":"ElementaryTypeName","src":"14406:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":266,"nodeType":"VariableDeclarationStatement","src":"14406:13:0"},{"AST":{"nodeType":"YulBlock","src":"14439:73:0","statements":[{"nodeType":"YulAssignment","src":"14453:49:0","value":{"arguments":[{"arguments":[{"arguments":[{"name":"_bytes","nodeType":"YulIdentifier","src":"14479:6:0"},{"kind":"number","nodeType":"YulLiteral","src":"14487:4:0","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14475:3:0"},"nodeType":"YulFunctionCall","src":"14475:17:0"},{"name":"_start","nodeType":"YulIdentifier","src":"14494:6:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14471:3:0"},"nodeType":"YulFunctionCall","src":"14471:30:0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14465:5:0"},"nodeType":"YulFunctionCall","src":"14465:37:0"},"variableNames":[{"name":"tempUint","nodeType":"YulIdentifier","src":"14453:8:0"}]}]},"evmVersion":"berlin","externalReferences":[{"declaration":247,"isOffset":false,"isSlot":false,"src":"14479:6:0","valueSize":1},{"declaration":249,"isOffset":false,"isSlot":false,"src":"14494:6:0","valueSize":1},{"declaration":265,"isOffset":false,"isSlot":false,"src":"14453:8:0","valueSize":1}],"id":267,"nodeType":"InlineAssembly","src":"14430:82:0"},{"expression":{"id":268,"name":"tempUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":265,"src":"14529:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":253,"id":269,"nodeType":"Return","src":"14522:15:0"}]},"id":271,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"14251:9:0","nodeType":"FunctionDefinition","parameters":{"id":250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":247,"mutability":"mutable","name":"_bytes","nameLocation":"14274:6:0","nodeType":"VariableDeclaration","scope":271,"src":"14261:19:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":246,"name":"bytes","nodeType":"ElementaryTypeName","src":"14261:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":249,"mutability":"mutable","name":"_start","nameLocation":"14287:6:0","nodeType":"VariableDeclaration","scope":271,"src":"14282:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":248,"name":"uint","nodeType":"ElementaryTypeName","src":"14282:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14260:34:0"},"returnParameters":{"id":253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":252,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":271,"src":"14318:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":251,"name":"uint","nodeType":"ElementaryTypeName","src":"14318:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14317:6:0"},"scope":332,"src":"14242:302:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":296,"nodeType":"Block","src":"14635:232:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":281,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":273,"src":"14653:6:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14660:6:0","memberName":"length","nodeType":"MemberAccess","src":"14653:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":283,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":275,"src":"14670:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3332","id":284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14679:2:0","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"14670:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14653:28:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"746f427974657333325f6f75744f66426f756e6473","id":287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14683:23:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_95abc635681816f3b423f999d8035c1cc722b70e3d801f56cd1748a4f5810fa2","typeString":"literal_string \"toBytes32_outOfBounds\""},"value":"toBytes32_outOfBounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_95abc635681816f3b423f999d8035c1cc722b70e3d801f56cd1748a4f5810fa2","typeString":"literal_string \"toBytes32_outOfBounds\""}],"id":280,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14645:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14645:62:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":289,"nodeType":"ExpressionStatement","src":"14645:62:0"},{"assignments":[291],"declarations":[{"constant":false,"id":291,"mutability":"mutable","name":"tempBytes32","nameLocation":"14725:11:0","nodeType":"VariableDeclaration","scope":296,"src":"14717:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":290,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14717:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":292,"nodeType":"VariableDeclarationStatement","src":"14717:19:0"},{"AST":{"nodeType":"YulBlock","src":"14756:76:0","statements":[{"nodeType":"YulAssignment","src":"14770:52:0","value":{"arguments":[{"arguments":[{"arguments":[{"name":"_bytes","nodeType":"YulIdentifier","src":"14799:6:0"},{"kind":"number","nodeType":"YulLiteral","src":"14807:4:0","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14795:3:0"},"nodeType":"YulFunctionCall","src":"14795:17:0"},{"name":"_start","nodeType":"YulIdentifier","src":"14814:6:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14791:3:0"},"nodeType":"YulFunctionCall","src":"14791:30:0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14785:5:0"},"nodeType":"YulFunctionCall","src":"14785:37:0"},"variableNames":[{"name":"tempBytes32","nodeType":"YulIdentifier","src":"14770:11:0"}]}]},"evmVersion":"berlin","externalReferences":[{"declaration":273,"isOffset":false,"isSlot":false,"src":"14799:6:0","valueSize":1},{"declaration":275,"isOffset":false,"isSlot":false,"src":"14814:6:0","valueSize":1},{"declaration":291,"isOffset":false,"isSlot":false,"src":"14770:11:0","valueSize":1}],"id":293,"nodeType":"InlineAssembly","src":"14747:85:0"},{"expression":{"id":294,"name":"tempBytes32","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":291,"src":"14849:11:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":279,"id":295,"nodeType":"Return","src":"14842:18:0"}]},"id":297,"implemented":true,"kind":"function","modifiers":[],"name":"toBytes32","nameLocation":"14559:9:0","nodeType":"FunctionDefinition","parameters":{"id":276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":273,"mutability":"mutable","name":"_bytes","nameLocation":"14582:6:0","nodeType":"VariableDeclaration","scope":297,"src":"14569:19:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":272,"name":"bytes","nodeType":"ElementaryTypeName","src":"14569:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":275,"mutability":"mutable","name":"_start","nameLocation":"14595:6:0","nodeType":"VariableDeclaration","scope":297,"src":"14590:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":274,"name":"uint","nodeType":"ElementaryTypeName","src":"14590:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14568:34:0"},"returnParameters":{"id":279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":278,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":297,"src":"14626:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":277,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14626:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"14625:9:0"},"scope":332,"src":"14550:317:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":313,"nodeType":"Block","src":"14966:1331:0","statements":[{"assignments":[307],"declarations":[{"constant":false,"id":307,"mutability":"mutable","name":"success","nameLocation":"14981:7:0","nodeType":"VariableDeclaration","scope":313,"src":"14976:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":306,"name":"bool","nodeType":"ElementaryTypeName","src":"14976:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":309,"initialValue":{"hexValue":"74727565","id":308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14991:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"nodeType":"VariableDeclarationStatement","src":"14976:19:0"},{"AST":{"nodeType":"YulBlock","src":"15015:1251:0","statements":[{"nodeType":"YulVariableDeclaration","src":"15029:30:0","value":{"arguments":[{"name":"_preBytes","nodeType":"YulIdentifier","src":"15049:9:0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15043:5:0"},"nodeType":"YulFunctionCall","src":"15043:16:0"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"15033:6:0","type":""}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"15192:969:0","statements":[{"nodeType":"YulVariableDeclaration","src":"15421:11:0","value":{"kind":"number","nodeType":"YulLiteral","src":"15431:1:0","type":"","value":"1"},"variables":[{"name":"cb","nodeType":"YulTypedName","src":"15425:2:0","type":""}]},{"nodeType":"YulVariableDeclaration","src":"15450:30:0","value":{"arguments":[{"name":"_preBytes","nodeType":"YulIdentifier","src":"15464:9:0"},{"kind":"number","nodeType":"YulLiteral","src":"15475:4:0","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15460:3:0"},"nodeType":"YulFunctionCall","src":"15460:20:0"},"variables":[{"name":"mc","nodeType":"YulTypedName","src":"15454:2:0","type":""}]},{"nodeType":"YulVariableDeclaration","src":"15497:26:0","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"15512:2:0"},{"name":"length","nodeType":"YulIdentifier","src":"15516:6:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15508:3:0"},"nodeType":"YulFunctionCall","src":"15508:15:0"},"variables":[{"name":"end","nodeType":"YulTypedName","src":"15501:3:0","type":""}]},{"body":{"nodeType":"YulBlock","src":"15863:284:0","statements":[{"body":{"nodeType":"YulBlock","src":"15999:130:0","statements":[{"nodeType":"YulAssignment","src":"16063:12:0","value":{"kind":"number","nodeType":"YulLiteral","src":"16074:1:0","type":"","value":"0"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"16063:7:0"}]},{"nodeType":"YulAssignment","src":"16100:7:0","value":{"kind":"number","nodeType":"YulLiteral","src":"16106:1:0","type":"","value":"0"},"variableNames":[{"name":"cb","nodeType":"YulIdentifier","src":"16100:2:0"}]}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"15982:2:0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15976:5:0"},"nodeType":"YulFunctionCall","src":"15976:9:0"},{"arguments":[{"name":"cc","nodeType":"YulIdentifier","src":"15993:2:0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15987:5:0"},"nodeType":"YulFunctionCall","src":"15987:9:0"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"15973:2:0"},"nodeType":"YulFunctionCall","src":"15973:24:0"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"15966:6:0"},"nodeType":"YulFunctionCall","src":"15966:32:0"},"nodeType":"YulIf","src":"15963:166:0"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"15745:2:0"},{"name":"end","nodeType":"YulIdentifier","src":"15749:3:0"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"15742:2:0"},"nodeType":"YulFunctionCall","src":"15742:11:0"},{"name":"cb","nodeType":"YulIdentifier","src":"15755:2:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15738:3:0"},"nodeType":"YulFunctionCall","src":"15738:20:0"},{"kind":"number","nodeType":"YulLiteral","src":"15760:1:0","type":"","value":"2"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"15735:2:0"},"nodeType":"YulFunctionCall","src":"15735:27:0"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"15763:99:0","statements":[{"nodeType":"YulAssignment","src":"15785:19:0","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"15795:2:0"},{"kind":"number","nodeType":"YulLiteral","src":"15799:4:0","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15791:3:0"},"nodeType":"YulFunctionCall","src":"15791:13:0"},"variableNames":[{"name":"mc","nodeType":"YulIdentifier","src":"15785:2:0"}]},{"nodeType":"YulAssignment","src":"15825:19:0","value":{"arguments":[{"name":"cc","nodeType":"YulIdentifier","src":"15835:2:0"},{"kind":"number","nodeType":"YulLiteral","src":"15839:4:0","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15831:3:0"},"nodeType":"YulFunctionCall","src":"15831:13:0"},"variableNames":[{"name":"cc","nodeType":"YulIdentifier","src":"15825:2:0"}]}]},"pre":{"nodeType":"YulBlock","src":"15545:189:0","statements":[{"nodeType":"YulVariableDeclaration","src":"15567:31:0","value":{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"15581:10:0"},{"kind":"number","nodeType":"YulLiteral","src":"15593:4:0","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15577:3:0"},"nodeType":"YulFunctionCall","src":"15577:21:0"},"variables":[{"name":"cc","nodeType":"YulTypedName","src":"15571:2:0","type":""}]}]},"src":"15541:606:0"}]},"nodeType":"YulCase","src":"15185:976:0","value":{"kind":"number","nodeType":"YulLiteral","src":"15190:1:0","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"16182:74:0","statements":[{"nodeType":"YulAssignment","src":"16230:12:0","value":{"kind":"number","nodeType":"YulLiteral","src":"16241:1:0","type":"","value":"0"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"16230:7:0"}]}]},"nodeType":"YulCase","src":"16174:82:0","value":"default"}],"expression":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"15146:6:0"},{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"15160:10:0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15154:5:0"},"nodeType":"YulFunctionCall","src":"15154:17:0"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"15143:2:0"},"nodeType":"YulFunctionCall","src":"15143:29:0"},"nodeType":"YulSwitch","src":"15136:1120:0"}]},"evmVersion":"berlin","externalReferences":[{"declaration":301,"isOffset":false,"isSlot":false,"src":"15160:10:0","valueSize":1},{"declaration":301,"isOffset":false,"isSlot":false,"src":"15581:10:0","valueSize":1},{"declaration":299,"isOffset":false,"isSlot":false,"src":"15049:9:0","valueSize":1},{"declaration":299,"isOffset":false,"isSlot":false,"src":"15464:9:0","valueSize":1},{"declaration":307,"isOffset":false,"isSlot":false,"src":"16063:7:0","valueSize":1},{"declaration":307,"isOffset":false,"isSlot":false,"src":"16230:7:0","valueSize":1}],"id":310,"nodeType":"InlineAssembly","src":"15006:1260:0"},{"expression":{"id":311,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"16283:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":305,"id":312,"nodeType":"Return","src":"16276:14:0"}]},"id":314,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"14882:5:0","nodeType":"FunctionDefinition","parameters":{"id":302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":299,"mutability":"mutable","name":"_preBytes","nameLocation":"14901:9:0","nodeType":"VariableDeclaration","scope":314,"src":"14888:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":298,"name":"bytes","nodeType":"ElementaryTypeName","src":"14888:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":301,"mutability":"mutable","name":"_postBytes","nameLocation":"14925:10:0","nodeType":"VariableDeclaration","scope":314,"src":"14912:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":300,"name":"bytes","nodeType":"ElementaryTypeName","src":"14912:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"14887:49:0"},"returnParameters":{"id":305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":304,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":314,"src":"14960:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":303,"name":"bool","nodeType":"ElementaryTypeName","src":"14960:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"14959:6:0"},"scope":332,"src":"14873:1424:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":330,"nodeType":"Block","src":"16404:2585:0","statements":[{"assignments":[324],"declarations":[{"constant":false,"id":324,"mutability":"mutable","name":"success","nameLocation":"16419:7:0","nodeType":"VariableDeclaration","scope":330,"src":"16414:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":323,"name":"bool","nodeType":"ElementaryTypeName","src":"16414:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":326,"initialValue":{"hexValue":"74727565","id":325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16429:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"nodeType":"VariableDeclarationStatement","src":"16414:19:0"},{"AST":{"nodeType":"YulBlock","src":"16453:2505:0","statements":[{"nodeType":"YulVariableDeclaration","src":"16512:34:0","value":{"arguments":[{"name":"_preBytes.slot","nodeType":"YulIdentifier","src":"16531:14:0"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"16525:5:0"},"nodeType":"YulFunctionCall","src":"16525:21:0"},"variables":[{"name":"fslot","nodeType":"YulTypedName","src":"16516:5:0","type":""}]},{"nodeType":"YulVariableDeclaration","src":"16637:76:0","value":{"arguments":[{"arguments":[{"name":"fslot","nodeType":"YulIdentifier","src":"16660:5:0"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16675:5:0","type":"","value":"0x100"},{"arguments":[{"arguments":[{"name":"fslot","nodeType":"YulIdentifier","src":"16693:5:0"},{"kind":"number","nodeType":"YulLiteral","src":"16700:1:0","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16689:3:0"},"nodeType":"YulFunctionCall","src":"16689:13:0"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"16682:6:0"},"nodeType":"YulFunctionCall","src":"16682:21:0"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"16671:3:0"},"nodeType":"YulFunctionCall","src":"16671:33:0"},{"kind":"number","nodeType":"YulLiteral","src":"16706:1:0","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16667:3:0"},"nodeType":"YulFunctionCall","src":"16667:41:0"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16656:3:0"},"nodeType":"YulFunctionCall","src":"16656:53:0"},{"kind":"number","nodeType":"YulLiteral","src":"16711:1:0","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"16652:3:0"},"nodeType":"YulFunctionCall","src":"16652:61:0"},"variables":[{"name":"slength","nodeType":"YulTypedName","src":"16641:7:0","type":""}]},{"nodeType":"YulVariableDeclaration","src":"16726:32:0","value":{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"16747:10:0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16741:5:0"},"nodeType":"YulFunctionCall","src":"16741:17:0"},"variables":[{"name":"mlength","nodeType":"YulTypedName","src":"16730:7:0","type":""}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"16882:1971:0","statements":[{"body":{"nodeType":"YulBlock","src":"17193:1646:0","statements":[{"cases":[{"body":{"nodeType":"YulBlock","src":"17265:340:0","statements":[{"nodeType":"YulAssignment","src":"17358:38:0","value":{"arguments":[{"arguments":[{"name":"fslot","nodeType":"YulIdentifier","src":"17375:5:0"},{"kind":"number","nodeType":"YulLiteral","src":"17382:5:0","type":"","value":"0x100"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"17371:3:0"},"nodeType":"YulFunctionCall","src":"17371:17:0"},{"kind":"number","nodeType":"YulLiteral","src":"17390:5:0","type":"","value":"0x100"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"17367:3:0"},"nodeType":"YulFunctionCall","src":"17367:29:0"},"variableNames":[{"name":"fslot","nodeType":"YulIdentifier","src":"17358:5:0"}]},{"body":{"nodeType":"YulBlock","src":"17473:110:0","statements":[{"nodeType":"YulAssignment","src":"17545:12:0","value":{"kind":"number","nodeType":"YulLiteral","src":"17556:1:0","type":"","value":"0"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"17545:7:0"}]}]},"condition":{"arguments":[{"arguments":[{"name":"fslot","nodeType":"YulIdentifier","src":"17435:5:0"},{"arguments":[{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"17452:10:0"},{"kind":"number","nodeType":"YulLiteral","src":"17464:4:0","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17448:3:0"},"nodeType":"YulFunctionCall","src":"17448:21:0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17442:5:0"},"nodeType":"YulFunctionCall","src":"17442:28:0"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"17432:2:0"},"nodeType":"YulFunctionCall","src":"17432:39:0"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17425:6:0"},"nodeType":"YulFunctionCall","src":"17425:47:0"},"nodeType":"YulIf","src":"17422:161:0"}]},"nodeType":"YulCase","src":"17258:347:0","value":{"kind":"number","nodeType":"YulLiteral","src":"17263:1:0","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"17634:1187:0","statements":[{"nodeType":"YulVariableDeclaration","src":"17903:11:0","value":{"kind":"number","nodeType":"YulLiteral","src":"17913:1:0","type":"","value":"1"},"variables":[{"name":"cb","nodeType":"YulTypedName","src":"17907:2:0","type":""}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18027:3:0","type":"","value":"0x0"},{"name":"_preBytes.slot","nodeType":"YulIdentifier","src":"18032:14:0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18020:6:0"},"nodeType":"YulFunctionCall","src":"18020:27:0"},"nodeType":"YulExpressionStatement","src":"18020:27:0"},{"nodeType":"YulVariableDeclaration","src":"18072:30:0","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18092:3:0","type":"","value":"0x0"},{"kind":"number","nodeType":"YulLiteral","src":"18097:4:0","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"18082:9:0"},"nodeType":"YulFunctionCall","src":"18082:20:0"},"variables":[{"name":"sc","nodeType":"YulTypedName","src":"18076:2:0","type":""}]},{"nodeType":"YulVariableDeclaration","src":"18128:31:0","value":{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"18142:10:0"},{"kind":"number","nodeType":"YulLiteral","src":"18154:4:0","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18138:3:0"},"nodeType":"YulFunctionCall","src":"18138:21:0"},"variables":[{"name":"mc","nodeType":"YulTypedName","src":"18132:2:0","type":""}]},{"nodeType":"YulVariableDeclaration","src":"18184:27:0","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"18199:2:0"},{"name":"mlength","nodeType":"YulIdentifier","src":"18203:7:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18195:3:0"},"nodeType":"YulFunctionCall","src":"18195:16:0"},"variables":[{"name":"end","nodeType":"YulTypedName","src":"18188:3:0","type":""}]},{"body":{"nodeType":"YulBlock","src":"18545:254:0","statements":[{"body":{"nodeType":"YulBlock","src":"18611:162:0","statements":[{"nodeType":"YulAssignment","src":"18691:12:0","value":{"kind":"number","nodeType":"YulLiteral","src":"18702:1:0","type":"","value":"0"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"18691:7:0"}]},{"nodeType":"YulAssignment","src":"18736:7:0","value":{"kind":"number","nodeType":"YulLiteral","src":"18742:1:0","type":"","value":"0"},"variableNames":[{"name":"cb","nodeType":"YulIdentifier","src":"18736:2:0"}]}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"18594:2:0"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"18588:5:0"},"nodeType":"YulFunctionCall","src":"18588:9:0"},{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"18605:2:0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18599:5:0"},"nodeType":"YulFunctionCall","src":"18599:9:0"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"18585:2:0"},"nodeType":"YulFunctionCall","src":"18585:24:0"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"18578:6:0"},"nodeType":"YulFunctionCall","src":"18578:32:0"},"nodeType":"YulIf","src":"18575:198:0"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"18406:2:0"},{"name":"end","nodeType":"YulIdentifier","src":"18410:3:0"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"18403:2:0"},"nodeType":"YulFunctionCall","src":"18403:11:0"},{"name":"cb","nodeType":"YulIdentifier","src":"18416:2:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18399:3:0"},"nodeType":"YulFunctionCall","src":"18399:20:0"},{"kind":"number","nodeType":"YulLiteral","src":"18421:1:0","type":"","value":"2"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"18396:2:0"},"nodeType":"YulFunctionCall","src":"18396:27:0"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"18424:120:0","statements":[{"nodeType":"YulAssignment","src":"18454:16:0","value":{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"18464:2:0"},{"kind":"number","nodeType":"YulLiteral","src":"18468:1:0","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18460:3:0"},"nodeType":"YulFunctionCall","src":"18460:10:0"},"variableNames":[{"name":"sc","nodeType":"YulIdentifier","src":"18454:2:0"}]},{"nodeType":"YulAssignment","src":"18499:19:0","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"18509:2:0"},{"kind":"number","nodeType":"YulLiteral","src":"18513:4:0","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18505:3:0"},"nodeType":"YulFunctionCall","src":"18505:13:0"},"variableNames":[{"name":"mc","nodeType":"YulIdentifier","src":"18499:2:0"}]}]},"pre":{"nodeType":"YulBlock","src":"18367:28:0","statements":[]},"src":"18363:436:0"}]},"nodeType":"YulCase","src":"17626:1195:0","value":"default"}],"expression":{"arguments":[{"name":"slength","nodeType":"YulIdentifier","src":"17225:7:0"},{"kind":"number","nodeType":"YulLiteral","src":"17234:2:0","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"17222:2:0"},"nodeType":"YulFunctionCall","src":"17222:15:0"},"nodeType":"YulSwitch","src":"17215:1606:0"}]},"condition":{"arguments":[{"arguments":[{"name":"slength","nodeType":"YulIdentifier","src":"17183:7:0"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17176:6:0"},"nodeType":"YulFunctionCall","src":"17176:15:0"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17169:6:0"},"nodeType":"YulFunctionCall","src":"17169:23:0"},"nodeType":"YulIf","src":"17166:1673:0"}]},"nodeType":"YulCase","src":"16875:1978:0","value":{"kind":"number","nodeType":"YulLiteral","src":"16880:1:0","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"18874:74:0","statements":[{"nodeType":"YulAssignment","src":"18922:12:0","value":{"kind":"number","nodeType":"YulLiteral","src":"18933:1:0","type":"","value":"0"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"18922:7:0"}]}]},"nodeType":"YulCase","src":"18866:82:0","value":"default"}],"expression":{"arguments":[{"name":"slength","nodeType":"YulIdentifier","src":"16845:7:0"},{"name":"mlength","nodeType":"YulIdentifier","src":"16854:7:0"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"16842:2:0"},"nodeType":"YulFunctionCall","src":"16842:20:0"},"nodeType":"YulSwitch","src":"16835:2113:0"}]},"evmVersion":"berlin","externalReferences":[{"declaration":318,"isOffset":false,"isSlot":false,"src":"16747:10:0","valueSize":1},{"declaration":318,"isOffset":false,"isSlot":false,"src":"17452:10:0","valueSize":1},{"declaration":318,"isOffset":false,"isSlot":false,"src":"18142:10:0","valueSize":1},{"declaration":316,"isOffset":false,"isSlot":true,"src":"16531:14:0","suffix":"slot","valueSize":1},{"declaration":316,"isOffset":false,"isSlot":true,"src":"18032:14:0","suffix":"slot","valueSize":1},{"declaration":324,"isOffset":false,"isSlot":false,"src":"17545:7:0","valueSize":1},{"declaration":324,"isOffset":false,"isSlot":false,"src":"18691:7:0","valueSize":1},{"declaration":324,"isOffset":false,"isSlot":false,"src":"18922:7:0","valueSize":1}],"id":327,"nodeType":"InlineAssembly","src":"16444:2514:0"},{"expression":{"id":328,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":324,"src":"18975:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":322,"id":329,"nodeType":"Return","src":"18968:14:0"}]},"id":331,"implemented":true,"kind":"function","modifiers":[],"name":"equalStorage","nameLocation":"16312:12:0","nodeType":"FunctionDefinition","parameters":{"id":319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":316,"mutability":"mutable","name":"_preBytes","nameLocation":"16339:9:0","nodeType":"VariableDeclaration","scope":331,"src":"16325:23:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":315,"name":"bytes","nodeType":"ElementaryTypeName","src":"16325:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":318,"mutability":"mutable","name":"_postBytes","nameLocation":"16363:10:0","nodeType":"VariableDeclaration","scope":331,"src":"16350:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":317,"name":"bytes","nodeType":"ElementaryTypeName","src":"16350:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16324:50:0"},"returnParameters":{"id":322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":321,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":331,"src":"16398:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":320,"name":"bool","nodeType":"ElementaryTypeName","src":"16398:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"16397:6:0"},"scope":332,"src":"16303:2686:0","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":333,"src":"369:18622:0","usedErrors":[],"usedEvents":[]}],"src":"336:18656:0"},"id":0},"@layerzerolabs/solidity-examples/contracts/libraries/ExcessivelySafeCall.sol":{"ast":{"absolutePath":"@layerzerolabs/solidity-examples/contracts/libraries/ExcessivelySafeCall.sol","exportedSymbols":{"ExcessivelySafeCall":[429]},"id":430,"license":"MIT OR Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":334,"literals":["solidity",">=","0.7",".6"],"nodeType":"PragmaDirective","src":"46:24:1"},{"abstract":false,"baseContracts":[],"canonicalName":"ExcessivelySafeCall","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":429,"linearizedBaseContracts":[429],"name":"ExcessivelySafeCall","nameLocation":"80:19:1","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":337,"mutability":"constant","name":"LOW_28_MASK","nameLocation":"120:11:1","nodeType":"VariableDeclaration","scope":429,"src":"106:94:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":335,"name":"uint","nodeType":"ElementaryTypeName","src":"106:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"307830303030303030306666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"134:66:1","typeDescriptions":{"typeIdentifier":"t_rational_26959946667150639794667015087019630673637144422540572481103610249215_by_1","typeString":"int_const 2695...(60 digits omitted)...9215"},"value":"0x00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},"visibility":"internal"},{"body":{"id":371,"nodeType":"Block","src":"1285:1100:1","statements":[{"assignments":[354],"declarations":[{"constant":false,"id":354,"mutability":"mutable","name":"_toCopy","nameLocation":"1336:7:1","nodeType":"VariableDeclaration","scope":371,"src":"1331:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":353,"name":"uint","nodeType":"ElementaryTypeName","src":"1331:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":355,"nodeType":"VariableDeclarationStatement","src":"1331:12:1"},{"assignments":[357],"declarations":[{"constant":false,"id":357,"mutability":"mutable","name":"_success","nameLocation":"1358:8:1","nodeType":"VariableDeclaration","scope":371,"src":"1353:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":356,"name":"bool","nodeType":"ElementaryTypeName","src":"1353:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":358,"nodeType":"VariableDeclarationStatement","src":"1353:13:1"},{"assignments":[360],"declarations":[{"constant":false,"id":360,"mutability":"mutable","name":"_returnData","nameLocation":"1389:11:1","nodeType":"VariableDeclaration","scope":371,"src":"1376:24:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":359,"name":"bytes","nodeType":"ElementaryTypeName","src":"1376:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":365,"initialValue":{"arguments":[{"id":363,"name":"_maxCopy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":344,"src":"1413:8:1","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"}],"id":362,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1403:9:1","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":361,"name":"bytes","nodeType":"ElementaryTypeName","src":"1407:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1403:19:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1376:46:1"},{"AST":{"nodeType":"YulBlock","src":"1651:688:1","statements":[{"nodeType":"YulAssignment","src":"1665:279:1","value":{"arguments":[{"name":"_gas","nodeType":"YulIdentifier","src":"1699:4:1"},{"name":"_target","nodeType":"YulIdentifier","src":"1728:7:1"},{"kind":"number","nodeType":"YulLiteral","src":"1766:1:1","type":"","value":"0"},{"arguments":[{"name":"_calldata","nodeType":"YulIdentifier","src":"1804:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"1815:4:1","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1800:3:1"},"nodeType":"YulFunctionCall","src":"1800:20:1"},{"arguments":[{"name":"_calldata","nodeType":"YulIdentifier","src":"1853:9:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1847:5:1"},"nodeType":"YulFunctionCall","src":"1847:16:1"},{"kind":"number","nodeType":"YulLiteral","src":"1890:1:1","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1919:1:1","type":"","value":"0"}],"functionName":{"name":"call","nodeType":"YulIdentifier","src":"1677:4:1"},"nodeType":"YulFunctionCall","src":"1677:267:1"},"variableNames":[{"name":"_success","nodeType":"YulIdentifier","src":"1665:8:1"}]},{"nodeType":"YulAssignment","src":"2000:27:1","value":{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"2011:14:1"},"nodeType":"YulFunctionCall","src":"2011:16:1"},"variableNames":[{"name":"_toCopy","nodeType":"YulIdentifier","src":"2000:7:1"}]},{"body":{"nodeType":"YulBlock","src":"2065:51:1","statements":[{"nodeType":"YulAssignment","src":"2083:19:1","value":{"name":"_maxCopy","nodeType":"YulIdentifier","src":"2094:8:1"},"variableNames":[{"name":"_toCopy","nodeType":"YulIdentifier","src":"2083:7:1"}]}]},"condition":{"arguments":[{"name":"_toCopy","nodeType":"YulIdentifier","src":"2046:7:1"},{"name":"_maxCopy","nodeType":"YulIdentifier","src":"2055:8:1"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2043:2:1"},"nodeType":"YulFunctionCall","src":"2043:21:1"},"nodeType":"YulIf","src":"2040:76:1"},{"expression":{"arguments":[{"name":"_returnData","nodeType":"YulIdentifier","src":"2188:11:1"},{"name":"_toCopy","nodeType":"YulIdentifier","src":"2201:7:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2181:6:1"},"nodeType":"YulFunctionCall","src":"2181:28:1"},"nodeType":"YulExpressionStatement","src":"2181:28:1"},{"expression":{"arguments":[{"arguments":[{"name":"_returnData","nodeType":"YulIdentifier","src":"2298:11:1"},{"kind":"number","nodeType":"YulLiteral","src":"2311:4:1","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2294:3:1"},"nodeType":"YulFunctionCall","src":"2294:22:1"},{"kind":"number","nodeType":"YulLiteral","src":"2318:1:1","type":"","value":"0"},{"name":"_toCopy","nodeType":"YulIdentifier","src":"2321:7:1"}],"functionName":{"name":"returndatacopy","nodeType":"YulIdentifier","src":"2279:14:1"},"nodeType":"YulFunctionCall","src":"2279:50:1"},"nodeType":"YulExpressionStatement","src":"2279:50:1"}]},"evmVersion":"berlin","externalReferences":[{"declaration":346,"isOffset":false,"isSlot":false,"src":"1804:9:1","valueSize":1},{"declaration":346,"isOffset":false,"isSlot":false,"src":"1853:9:1","valueSize":1},{"declaration":342,"isOffset":false,"isSlot":false,"src":"1699:4:1","valueSize":1},{"declaration":344,"isOffset":false,"isSlot":false,"src":"2055:8:1","valueSize":1},{"declaration":344,"isOffset":false,"isSlot":false,"src":"2094:8:1","valueSize":1},{"declaration":360,"isOffset":false,"isSlot":false,"src":"2188:11:1","valueSize":1},{"declaration":360,"isOffset":false,"isSlot":false,"src":"2298:11:1","valueSize":1},{"declaration":357,"isOffset":false,"isSlot":false,"src":"1665:8:1","valueSize":1},{"declaration":340,"isOffset":false,"isSlot":false,"src":"1728:7:1","valueSize":1},{"declaration":354,"isOffset":false,"isSlot":false,"src":"2000:7:1","valueSize":1},{"declaration":354,"isOffset":false,"isSlot":false,"src":"2046:7:1","valueSize":1},{"declaration":354,"isOffset":false,"isSlot":false,"src":"2083:7:1","valueSize":1},{"declaration":354,"isOffset":false,"isSlot":false,"src":"2201:7:1","valueSize":1},{"declaration":354,"isOffset":false,"isSlot":false,"src":"2321:7:1","valueSize":1}],"id":366,"nodeType":"InlineAssembly","src":"1642:697:1"},{"expression":{"components":[{"id":367,"name":"_success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":357,"src":"2356:8:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":368,"name":"_returnData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":360,"src":"2366:11:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":369,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2355:23:1","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":352,"id":370,"nodeType":"Return","src":"2348:30:1"}]},"documentation":{"id":338,"nodeType":"StructuredDocumentation","src":"207:899:1","text":"@notice Use when you _really_ really _really_ don't trust the called\n contract. This prevents the called contract from causing reversion of\n the caller in as many ways as we can.\n @dev The main difference between this and a solidity low-level call is\n that we limit the number of bytes that the callee can cause to be\n copied to caller memory. This prevents stupid things like malicious\n contracts returning 10,000,000 bytes causing a local OOG when copying\n to memory.\n @param _target The address to call\n @param _gas The amount of gas to forward to the remote contract\n @param _maxCopy The maximum number of bytes of returndata to copy\n to memory.\n @param _calldata The data to send to the remote contract\n @return success and returndata, as `.call()`. Returndata is capped to\n `_maxCopy` bytes."},"id":372,"implemented":true,"kind":"function","modifiers":[],"name":"excessivelySafeCall","nameLocation":"1120:19:1","nodeType":"FunctionDefinition","parameters":{"id":347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":340,"mutability":"mutable","name":"_target","nameLocation":"1157:7:1","nodeType":"VariableDeclaration","scope":372,"src":"1149:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":339,"name":"address","nodeType":"ElementaryTypeName","src":"1149:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":342,"mutability":"mutable","name":"_gas","nameLocation":"1179:4:1","nodeType":"VariableDeclaration","scope":372,"src":"1174:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":341,"name":"uint","nodeType":"ElementaryTypeName","src":"1174:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":344,"mutability":"mutable","name":"_maxCopy","nameLocation":"1200:8:1","nodeType":"VariableDeclaration","scope":372,"src":"1193:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":343,"name":"uint16","nodeType":"ElementaryTypeName","src":"1193:6:1","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":346,"mutability":"mutable","name":"_calldata","nameLocation":"1231:9:1","nodeType":"VariableDeclaration","scope":372,"src":"1218:22:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":345,"name":"bytes","nodeType":"ElementaryTypeName","src":"1218:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1139:107:1"},"returnParameters":{"id":352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":349,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":372,"src":"1265:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":348,"name":"bool","nodeType":"ElementaryTypeName","src":"1265:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":351,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":372,"src":"1271:12:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":350,"name":"bytes","nodeType":"ElementaryTypeName","src":"1271:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1264:20:1"},"scope":429,"src":"1111:1274:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":406,"nodeType":"Block","src":"3480:1072:1","statements":[{"assignments":[389],"declarations":[{"constant":false,"id":389,"mutability":"mutable","name":"_toCopy","nameLocation":"3531:7:1","nodeType":"VariableDeclaration","scope":406,"src":"3526:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":388,"name":"uint","nodeType":"ElementaryTypeName","src":"3526:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":390,"nodeType":"VariableDeclarationStatement","src":"3526:12:1"},{"assignments":[392],"declarations":[{"constant":false,"id":392,"mutability":"mutable","name":"_success","nameLocation":"3553:8:1","nodeType":"VariableDeclaration","scope":406,"src":"3548:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":391,"name":"bool","nodeType":"ElementaryTypeName","src":"3548:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":393,"nodeType":"VariableDeclarationStatement","src":"3548:13:1"},{"assignments":[395],"declarations":[{"constant":false,"id":395,"mutability":"mutable","name":"_returnData","nameLocation":"3584:11:1","nodeType":"VariableDeclaration","scope":406,"src":"3571:24:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":394,"name":"bytes","nodeType":"ElementaryTypeName","src":"3571:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":400,"initialValue":{"arguments":[{"id":398,"name":"_maxCopy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"3608:8:1","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"}],"id":397,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3598:9:1","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":396,"name":"bytes","nodeType":"ElementaryTypeName","src":"3602:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3598:19:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3571:46:1"},{"AST":{"nodeType":"YulBlock","src":"3846:660:1","statements":[{"nodeType":"YulAssignment","src":"3860:251:1","value":{"arguments":[{"name":"_gas","nodeType":"YulIdentifier","src":"3900:4:1"},{"name":"_target","nodeType":"YulIdentifier","src":"3929:7:1"},{"arguments":[{"name":"_calldata","nodeType":"YulIdentifier","src":"3971:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"3982:4:1","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3967:3:1"},"nodeType":"YulFunctionCall","src":"3967:20:1"},{"arguments":[{"name":"_calldata","nodeType":"YulIdentifier","src":"4020:9:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4014:5:1"},"nodeType":"YulFunctionCall","src":"4014:16:1"},{"kind":"number","nodeType":"YulLiteral","src":"4057:1:1","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4086:1:1","type":"","value":"0"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"3872:10:1"},"nodeType":"YulFunctionCall","src":"3872:239:1"},"variableNames":[{"name":"_success","nodeType":"YulIdentifier","src":"3860:8:1"}]},{"nodeType":"YulAssignment","src":"4167:27:1","value":{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"4178:14:1"},"nodeType":"YulFunctionCall","src":"4178:16:1"},"variableNames":[{"name":"_toCopy","nodeType":"YulIdentifier","src":"4167:7:1"}]},{"body":{"nodeType":"YulBlock","src":"4232:51:1","statements":[{"nodeType":"YulAssignment","src":"4250:19:1","value":{"name":"_maxCopy","nodeType":"YulIdentifier","src":"4261:8:1"},"variableNames":[{"name":"_toCopy","nodeType":"YulIdentifier","src":"4250:7:1"}]}]},"condition":{"arguments":[{"name":"_toCopy","nodeType":"YulIdentifier","src":"4213:7:1"},{"name":"_maxCopy","nodeType":"YulIdentifier","src":"4222:8:1"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4210:2:1"},"nodeType":"YulFunctionCall","src":"4210:21:1"},"nodeType":"YulIf","src":"4207:76:1"},{"expression":{"arguments":[{"name":"_returnData","nodeType":"YulIdentifier","src":"4355:11:1"},{"name":"_toCopy","nodeType":"YulIdentifier","src":"4368:7:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4348:6:1"},"nodeType":"YulFunctionCall","src":"4348:28:1"},"nodeType":"YulExpressionStatement","src":"4348:28:1"},{"expression":{"arguments":[{"arguments":[{"name":"_returnData","nodeType":"YulIdentifier","src":"4465:11:1"},{"kind":"number","nodeType":"YulLiteral","src":"4478:4:1","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4461:3:1"},"nodeType":"YulFunctionCall","src":"4461:22:1"},{"kind":"number","nodeType":"YulLiteral","src":"4485:1:1","type":"","value":"0"},{"name":"_toCopy","nodeType":"YulIdentifier","src":"4488:7:1"}],"functionName":{"name":"returndatacopy","nodeType":"YulIdentifier","src":"4446:14:1"},"nodeType":"YulFunctionCall","src":"4446:50:1"},"nodeType":"YulExpressionStatement","src":"4446:50:1"}]},"evmVersion":"berlin","externalReferences":[{"declaration":381,"isOffset":false,"isSlot":false,"src":"3971:9:1","valueSize":1},{"declaration":381,"isOffset":false,"isSlot":false,"src":"4020:9:1","valueSize":1},{"declaration":377,"isOffset":false,"isSlot":false,"src":"3900:4:1","valueSize":1},{"declaration":379,"isOffset":false,"isSlot":false,"src":"4222:8:1","valueSize":1},{"declaration":379,"isOffset":false,"isSlot":false,"src":"4261:8:1","valueSize":1},{"declaration":395,"isOffset":false,"isSlot":false,"src":"4355:11:1","valueSize":1},{"declaration":395,"isOffset":false,"isSlot":false,"src":"4465:11:1","valueSize":1},{"declaration":392,"isOffset":false,"isSlot":false,"src":"3860:8:1","valueSize":1},{"declaration":375,"isOffset":false,"isSlot":false,"src":"3929:7:1","valueSize":1},{"declaration":389,"isOffset":false,"isSlot":false,"src":"4167:7:1","valueSize":1},{"declaration":389,"isOffset":false,"isSlot":false,"src":"4213:7:1","valueSize":1},{"declaration":389,"isOffset":false,"isSlot":false,"src":"4250:7:1","valueSize":1},{"declaration":389,"isOffset":false,"isSlot":false,"src":"4368:7:1","valueSize":1},{"declaration":389,"isOffset":false,"isSlot":false,"src":"4488:7:1","valueSize":1}],"id":401,"nodeType":"InlineAssembly","src":"3837:669:1"},{"expression":{"components":[{"id":402,"name":"_success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"4523:8:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":403,"name":"_returnData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":395,"src":"4533:11:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":404,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4522:23:1","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":387,"id":405,"nodeType":"Return","src":"4515:30:1"}]},"documentation":{"id":373,"nodeType":"StructuredDocumentation","src":"2391:899:1","text":"@notice Use when you _really_ really _really_ don't trust the called\n contract. This prevents the called contract from causing reversion of\n the caller in as many ways as we can.\n @dev The main difference between this and a solidity low-level call is\n that we limit the number of bytes that the callee can cause to be\n copied to caller memory. This prevents stupid things like malicious\n contracts returning 10,000,000 bytes causing a local OOG when copying\n to memory.\n @param _target The address to call\n @param _gas The amount of gas to forward to the remote contract\n @param _maxCopy The maximum number of bytes of returndata to copy\n to memory.\n @param _calldata The data to send to the remote contract\n @return success and returndata, as `.call()`. Returndata is capped to\n `_maxCopy` bytes."},"id":407,"implemented":true,"kind":"function","modifiers":[],"name":"excessivelySafeStaticCall","nameLocation":"3304:25:1","nodeType":"FunctionDefinition","parameters":{"id":382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":375,"mutability":"mutable","name":"_target","nameLocation":"3347:7:1","nodeType":"VariableDeclaration","scope":407,"src":"3339:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":374,"name":"address","nodeType":"ElementaryTypeName","src":"3339:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":377,"mutability":"mutable","name":"_gas","nameLocation":"3369:4:1","nodeType":"VariableDeclaration","scope":407,"src":"3364:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":376,"name":"uint","nodeType":"ElementaryTypeName","src":"3364:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":379,"mutability":"mutable","name":"_maxCopy","nameLocation":"3390:8:1","nodeType":"VariableDeclaration","scope":407,"src":"3383:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":378,"name":"uint16","nodeType":"ElementaryTypeName","src":"3383:6:1","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":381,"mutability":"mutable","name":"_calldata","nameLocation":"3421:9:1","nodeType":"VariableDeclaration","scope":407,"src":"3408:22:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":380,"name":"bytes","nodeType":"ElementaryTypeName","src":"3408:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3329:107:1"},"returnParameters":{"id":387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":384,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":407,"src":"3460:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":383,"name":"bool","nodeType":"ElementaryTypeName","src":"3460:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":386,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":407,"src":"3466:12:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":385,"name":"bytes","nodeType":"ElementaryTypeName","src":"3466:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3459:20:1"},"scope":429,"src":"3295:1257:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":427,"nodeType":"Block","src":"5081:376:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":416,"name":"_buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":412,"src":"5099:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5104:6:1","memberName":"length","nodeType":"MemberAccess","src":"5099:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"34","id":418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5114:1:1","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"5099:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":415,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5091:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5091:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":421,"nodeType":"ExpressionStatement","src":"5091:25:1"},{"assignments":[423],"declarations":[{"constant":false,"id":423,"mutability":"mutable","name":"_mask","nameLocation":"5131:5:1","nodeType":"VariableDeclaration","scope":427,"src":"5126:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":422,"name":"uint","nodeType":"ElementaryTypeName","src":"5126:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":425,"initialValue":{"id":424,"name":"LOW_28_MASK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"5139:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5126:24:1"},{"AST":{"nodeType":"YulBlock","src":"5169:282:1","statements":[{"nodeType":"YulVariableDeclaration","src":"5221:35:1","value":{"arguments":[{"arguments":[{"name":"_buf","nodeType":"YulIdentifier","src":"5244:4:1"},{"kind":"number","nodeType":"YulLiteral","src":"5250:4:1","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5240:3:1"},"nodeType":"YulFunctionCall","src":"5240:15:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5234:5:1"},"nodeType":"YulFunctionCall","src":"5234:22:1"},"variables":[{"name":"_word","nodeType":"YulTypedName","src":"5225:5:1","type":""}]},{"nodeType":"YulAssignment","src":"5327:26:1","value":{"arguments":[{"name":"_word","nodeType":"YulIdentifier","src":"5340:5:1"},{"name":"_mask","nodeType":"YulIdentifier","src":"5347:5:1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5336:3:1"},"nodeType":"YulFunctionCall","src":"5336:17:1"},"variableNames":[{"name":"_word","nodeType":"YulIdentifier","src":"5327:5:1"}]},{"nodeType":"YulAssignment","src":"5366:32:1","value":{"arguments":[{"name":"_newSelector","nodeType":"YulIdentifier","src":"5378:12:1"},{"name":"_word","nodeType":"YulIdentifier","src":"5392:5:1"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"5375:2:1"},"nodeType":"YulFunctionCall","src":"5375:23:1"},"variableNames":[{"name":"_word","nodeType":"YulIdentifier","src":"5366:5:1"}]},{"expression":{"arguments":[{"arguments":[{"name":"_buf","nodeType":"YulIdentifier","src":"5422:4:1"},{"kind":"number","nodeType":"YulLiteral","src":"5428:4:1","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5418:3:1"},"nodeType":"YulFunctionCall","src":"5418:15:1"},{"name":"_word","nodeType":"YulIdentifier","src":"5435:5:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5411:6:1"},"nodeType":"YulFunctionCall","src":"5411:30:1"},"nodeType":"YulExpressionStatement","src":"5411:30:1"}]},"evmVersion":"berlin","externalReferences":[{"declaration":412,"isOffset":false,"isSlot":false,"src":"5244:4:1","valueSize":1},{"declaration":412,"isOffset":false,"isSlot":false,"src":"5422:4:1","valueSize":1},{"declaration":423,"isOffset":false,"isSlot":false,"src":"5347:5:1","valueSize":1},{"declaration":410,"isOffset":false,"isSlot":false,"src":"5378:12:1","valueSize":1}],"id":426,"nodeType":"InlineAssembly","src":"5160:291:1"}]},"documentation":{"id":408,"nodeType":"StructuredDocumentation","src":"4558:442:1","text":" @notice Swaps function selectors in encoded contract calls\n @dev Allows reuse of encoded calldata for functions with identical\n argument types but different names. It simply swaps out the first 4 bytes\n for the new selector. This function modifies memory in place, and should\n only be used with caution.\n @param _newSelector The new 4-byte selector\n @param _buf The encoded contract args"},"id":428,"implemented":true,"kind":"function","modifiers":[],"name":"swapSelector","nameLocation":"5014:12:1","nodeType":"FunctionDefinition","parameters":{"id":413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":410,"mutability":"mutable","name":"_newSelector","nameLocation":"5034:12:1","nodeType":"VariableDeclaration","scope":428,"src":"5027:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":409,"name":"bytes4","nodeType":"ElementaryTypeName","src":"5027:6:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"constant":false,"id":412,"mutability":"mutable","name":"_buf","nameLocation":"5061:4:1","nodeType":"VariableDeclaration","scope":428,"src":"5048:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":411,"name":"bytes","nodeType":"ElementaryTypeName","src":"5048:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5026:40:1"},"returnParameters":{"id":414,"nodeType":"ParameterList","parameters":[],"src":"5081:0:1"},"scope":429,"src":"5005:452:1","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":430,"src":"72:5387:1","usedErrors":[],"usedEvents":[]}],"src":"46:5414:1"},"id":1},"@layerzerolabs/solidity-examples/contracts/lzApp/LzApp.sol":{"ast":{"absolutePath":"@layerzerolabs/solidity-examples/contracts/lzApp/LzApp.sol","exportedSymbols":{"BytesLib":[332],"Context":[1537],"ILayerZeroEndpoint":[1357],"ILayerZeroReceiver":[1371],"ILayerZeroUserApplicationConfig":[1402],"LzApp":[971],"Ownable":[1515]},"id":972,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":431,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:2"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":432,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":972,"sourceUnit":1516,"src":"58:52:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroReceiver.sol","file":"./interfaces/ILayerZeroReceiver.sol","id":433,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":972,"sourceUnit":1372,"src":"111:45:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroUserApplicationConfig.sol","file":"./interfaces/ILayerZeroUserApplicationConfig.sol","id":434,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":972,"sourceUnit":1403,"src":"157:58:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroEndpoint.sol","file":"./interfaces/ILayerZeroEndpoint.sol","id":435,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":972,"sourceUnit":1358,"src":"216:45:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"@layerzerolabs/solidity-examples/contracts/libraries/BytesLib.sol","file":"../libraries/BytesLib.sol","id":436,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":972,"sourceUnit":333,"src":"262:35:2","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":437,"name":"Ownable","nameLocations":["372:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":1515,"src":"372:7:2"},"id":438,"nodeType":"InheritanceSpecifier","src":"372:7:2"},{"baseName":{"id":439,"name":"ILayerZeroReceiver","nameLocations":["381:18:2"],"nodeType":"IdentifierPath","referencedDeclaration":1371,"src":"381:18:2"},"id":440,"nodeType":"InheritanceSpecifier","src":"381:18:2"},{"baseName":{"id":441,"name":"ILayerZeroUserApplicationConfig","nameLocations":["401:31:2"],"nodeType":"IdentifierPath","referencedDeclaration":1402,"src":"401:31:2"},"id":442,"nodeType":"InheritanceSpecifier","src":"401:31:2"}],"canonicalName":"LzApp","contractDependencies":[],"contractKind":"contract","fullyImplemented":false,"id":971,"linearizedBaseContracts":[971,1402,1371,1515,1537],"name":"LzApp","nameLocation":"363:5:2","nodeType":"ContractDefinition","nodes":[{"global":false,"id":445,"libraryName":{"id":443,"name":"BytesLib","nameLocations":["445:8:2"],"nodeType":"IdentifierPath","referencedDeclaration":332,"src":"445:8:2"},"nodeType":"UsingForDirective","src":"439:25:2","typeName":{"id":444,"name":"bytes","nodeType":"ElementaryTypeName","src":"458:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},{"constant":true,"functionSelector":"c4461834","id":448,"mutability":"constant","name":"DEFAULT_PAYLOAD_SIZE_LIMIT","nameLocation":"589:26:2","nodeType":"VariableDeclaration","scope":971,"src":"568:55:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":446,"name":"uint","nodeType":"ElementaryTypeName","src":"568:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3130303030","id":447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"618:5:2","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"visibility":"public"},{"constant":false,"functionSelector":"b353aaa7","id":451,"mutability":"immutable","name":"lzEndpoint","nameLocation":"666:10:2","nodeType":"VariableDeclaration","scope":971,"src":"630:46:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpoint_$1357","typeString":"contract ILayerZeroEndpoint"},"typeName":{"id":450,"nodeType":"UserDefinedTypeName","pathNode":{"id":449,"name":"ILayerZeroEndpoint","nameLocations":["630:18:2"],"nodeType":"IdentifierPath","referencedDeclaration":1357,"src":"630:18:2"},"referencedDeclaration":1357,"src":"630:18:2","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpoint_$1357","typeString":"contract ILayerZeroEndpoint"}},"visibility":"public"},{"constant":false,"functionSelector":"7533d788","id":455,"mutability":"mutable","name":"trustedRemoteLookup","nameLocation":"714:19:2","nodeType":"VariableDeclaration","scope":971,"src":"682:51:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_bytes_storage_$","typeString":"mapping(uint16 => bytes)"},"typeName":{"id":454,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":452,"name":"uint16","nodeType":"ElementaryTypeName","src":"690:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"Mapping","src":"682:24:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_bytes_storage_$","typeString":"mapping(uint16 => bytes)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":453,"name":"bytes","nodeType":"ElementaryTypeName","src":"700:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"visibility":"public"},{"constant":false,"functionSelector":"8cfd8f5c","id":461,"mutability":"mutable","name":"minDstGasLookup","nameLocation":"789:15:2","nodeType":"VariableDeclaration","scope":971,"src":"739:65:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_mapping$_t_uint16_$_t_uint256_$_$","typeString":"mapping(uint16 => mapping(uint16 => uint256))"},"typeName":{"id":460,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":456,"name":"uint16","nodeType":"ElementaryTypeName","src":"747:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"Mapping","src":"739:42:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_mapping$_t_uint16_$_t_uint256_$_$","typeString":"mapping(uint16 => mapping(uint16 => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":459,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":457,"name":"uint16","nodeType":"ElementaryTypeName","src":"765:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"Mapping","src":"757:23:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_uint256_$","typeString":"mapping(uint16 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":458,"name":"uint","nodeType":"ElementaryTypeName","src":"775:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"public"},{"constant":false,"functionSelector":"3f1f4fa4","id":465,"mutability":"mutable","name":"payloadSizeLimitLookup","nameLocation":"841:22:2","nodeType":"VariableDeclaration","scope":971,"src":"810:53:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_uint256_$","typeString":"mapping(uint16 => uint256)"},"typeName":{"id":464,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":462,"name":"uint16","nodeType":"ElementaryTypeName","src":"818:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"Mapping","src":"810:23:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_uint256_$","typeString":"mapping(uint16 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":463,"name":"uint","nodeType":"ElementaryTypeName","src":"828:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"950c8a74","id":467,"mutability":"mutable","name":"precrime","nameLocation":"884:8:2","nodeType":"VariableDeclaration","scope":971,"src":"869:23:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":466,"name":"address","nodeType":"ElementaryTypeName","src":"869:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"anonymous":false,"eventSelector":"5db758e995a17ec1ad84bdef7e8c3293a0bd6179bcce400dff5d4c3d87db726b","id":471,"name":"SetPrecrime","nameLocation":"905:11:2","nodeType":"EventDefinition","parameters":{"id":470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":469,"indexed":false,"mutability":"mutable","name":"precrime","nameLocation":"925:8:2","nodeType":"VariableDeclaration","scope":471,"src":"917:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":468,"name":"address","nodeType":"ElementaryTypeName","src":"917:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"916:18:2"},"src":"899:36:2"},{"anonymous":false,"eventSelector":"fa41487ad5d6728f0b19276fa1eddc16558578f5109fc39d2dc33c3230470dab","id":477,"name":"SetTrustedRemote","nameLocation":"946:16:2","nodeType":"EventDefinition","parameters":{"id":476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":473,"indexed":false,"mutability":"mutable","name":"_remoteChainId","nameLocation":"970:14:2","nodeType":"VariableDeclaration","scope":477,"src":"963:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":472,"name":"uint16","nodeType":"ElementaryTypeName","src":"963:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":475,"indexed":false,"mutability":"mutable","name":"_path","nameLocation":"992:5:2","nodeType":"VariableDeclaration","scope":477,"src":"986:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":474,"name":"bytes","nodeType":"ElementaryTypeName","src":"986:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"962:36:2"},"src":"940:59:2"},{"anonymous":false,"eventSelector":"8c0400cfe2d1199b1a725c78960bcc2a344d869b80590d0f2bd005db15a572ce","id":483,"name":"SetTrustedRemoteAddress","nameLocation":"1010:23:2","nodeType":"EventDefinition","parameters":{"id":482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":479,"indexed":false,"mutability":"mutable","name":"_remoteChainId","nameLocation":"1041:14:2","nodeType":"VariableDeclaration","scope":483,"src":"1034:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":478,"name":"uint16","nodeType":"ElementaryTypeName","src":"1034:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":481,"indexed":false,"mutability":"mutable","name":"_remoteAddress","nameLocation":"1063:14:2","nodeType":"VariableDeclaration","scope":483,"src":"1057:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":480,"name":"bytes","nodeType":"ElementaryTypeName","src":"1057:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1033:45:2"},"src":"1004:75:2"},{"anonymous":false,"eventSelector":"9d5c7c0b934da8fefa9c7760c98383778a12dfbfc0c3b3106518f43fb9508ac0","id":491,"name":"SetMinDstGas","nameLocation":"1090:12:2","nodeType":"EventDefinition","parameters":{"id":490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":485,"indexed":false,"mutability":"mutable","name":"_dstChainId","nameLocation":"1110:11:2","nodeType":"VariableDeclaration","scope":491,"src":"1103:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":484,"name":"uint16","nodeType":"ElementaryTypeName","src":"1103:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":487,"indexed":false,"mutability":"mutable","name":"_type","nameLocation":"1130:5:2","nodeType":"VariableDeclaration","scope":491,"src":"1123:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":486,"name":"uint16","nodeType":"ElementaryTypeName","src":"1123:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":489,"indexed":false,"mutability":"mutable","name":"_minDstGas","nameLocation":"1142:10:2","nodeType":"VariableDeclaration","scope":491,"src":"1137:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":488,"name":"uint","nodeType":"ElementaryTypeName","src":"1137:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1102:51:2"},"src":"1084:70:2"},{"body":{"id":502,"nodeType":"Block","src":"1191:59:2","statements":[{"expression":{"id":500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":496,"name":"lzEndpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":451,"src":"1201:10:2","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpoint_$1357","typeString":"contract ILayerZeroEndpoint"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":498,"name":"_endpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":493,"src":"1233:9:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":497,"name":"ILayerZeroEndpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"1214:18:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ILayerZeroEndpoint_$1357_$","typeString":"type(contract ILayerZeroEndpoint)"}},"id":499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1214:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpoint_$1357","typeString":"contract ILayerZeroEndpoint"}},"src":"1201:42:2","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpoint_$1357","typeString":"contract ILayerZeroEndpoint"}},"id":501,"nodeType":"ExpressionStatement","src":"1201:42:2"}]},"id":503,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":493,"mutability":"mutable","name":"_endpoint","nameLocation":"1180:9:2","nodeType":"VariableDeclaration","scope":503,"src":"1172:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":492,"name":"address","nodeType":"ElementaryTypeName","src":"1172:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1171:19:2"},"returnParameters":{"id":495,"nodeType":"ParameterList","parameters":[],"src":"1191:0:2"},"scope":971,"src":"1160:90:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1370],"body":{"id":561,"nodeType":"Block","src":"1425:656:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":516,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1527,"src":"1508:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1508:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":520,"name":"lzEndpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":451,"src":"1532:10:2","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpoint_$1357","typeString":"contract ILayerZeroEndpoint"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ILayerZeroEndpoint_$1357","typeString":"contract ILayerZeroEndpoint"}],"id":519,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1524:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":518,"name":"address","nodeType":"ElementaryTypeName","src":"1524:7:2","typeDescriptions":{}}},"id":521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1524:19:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1508:35:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c7a4170703a20696e76616c696420656e64706f696e742063616c6c6572","id":523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1545:32:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_c76d352ff891dcabaed1e1ebf3c88e97f49052956ad0c09feadb4b7d40c688f9","typeString":"literal_string \"LzApp: invalid endpoint caller\""},"value":"LzApp: invalid endpoint caller"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c76d352ff891dcabaed1e1ebf3c88e97f49052956ad0c09feadb4b7d40c688f9","typeString":"literal_string \"LzApp: invalid endpoint caller\""}],"id":515,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1500:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1500:78:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":525,"nodeType":"ExpressionStatement","src":"1500:78:2"},{"assignments":[527],"declarations":[{"constant":false,"id":527,"mutability":"mutable","name":"trustedRemote","nameLocation":"1602:13:2","nodeType":"VariableDeclaration","scope":561,"src":"1589:26:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":526,"name":"bytes","nodeType":"ElementaryTypeName","src":"1589:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":531,"initialValue":{"baseExpression":{"id":528,"name":"trustedRemoteLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":455,"src":"1618:19:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_bytes_storage_$","typeString":"mapping(uint16 => bytes storage ref)"}},"id":530,"indexExpression":{"id":529,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":505,"src":"1638:11:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1618:32:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"VariableDeclarationStatement","src":"1589:61:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":533,"name":"_srcAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":507,"src":"1813:11:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1825:6:2","memberName":"length","nodeType":"MemberAccess","src":"1813:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":535,"name":"trustedRemote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"1835:13:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1849:6:2","memberName":"length","nodeType":"MemberAccess","src":"1835:20:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1813:42:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":538,"name":"trustedRemote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"1859:13:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1873:6:2","memberName":"length","nodeType":"MemberAccess","src":"1859:20:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1882:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1859:24:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1813:70:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":544,"name":"_srcAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":507,"src":"1897:11:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":543,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1887:9:2","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1887:22:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":547,"name":"trustedRemote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"1923:13:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":546,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1913:9:2","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1913:24:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1887:50:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1813:124:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c7a4170703a20696e76616c696420736f757263652073656e64696e6720636f6e7472616374","id":551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1951:40:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_f2c5f1a596d749e8a7585a60b880c2626f8dc4e8dd0b6f11ae55e0b2b1061815","typeString":"literal_string \"LzApp: invalid source sending contract\""},"value":"LzApp: invalid source sending contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f2c5f1a596d749e8a7585a60b880c2626f8dc4e8dd0b6f11ae55e0b2b1061815","typeString":"literal_string \"LzApp: invalid source sending contract\""}],"id":532,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1792:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1792:209:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":553,"nodeType":"ExpressionStatement","src":"1792:209:2"},{"expression":{"arguments":[{"id":555,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":505,"src":"2031:11:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":556,"name":"_srcAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":507,"src":"2044:11:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":557,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":509,"src":"2057:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":558,"name":"_payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":511,"src":"2065:8:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":554,"name":"_blockingLzReceive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"2012:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint16_$_t_bytes_memory_ptr_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint16,bytes memory,uint64,bytes memory)"}},"id":559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2012:62:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":560,"nodeType":"ExpressionStatement","src":"2012:62:2"}]},"functionSelector":"001d3567","id":562,"implemented":true,"kind":"function","modifiers":[],"name":"lzReceive","nameLocation":"1265:9:2","nodeType":"FunctionDefinition","overrides":{"id":513,"nodeType":"OverrideSpecifier","overrides":[],"src":"1416:8:2"},"parameters":{"id":512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":505,"mutability":"mutable","name":"_srcChainId","nameLocation":"1291:11:2","nodeType":"VariableDeclaration","scope":562,"src":"1284:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":504,"name":"uint16","nodeType":"ElementaryTypeName","src":"1284:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":507,"mutability":"mutable","name":"_srcAddress","nameLocation":"1327:11:2","nodeType":"VariableDeclaration","scope":562,"src":"1312:26:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":506,"name":"bytes","nodeType":"ElementaryTypeName","src":"1312:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":509,"mutability":"mutable","name":"_nonce","nameLocation":"1355:6:2","nodeType":"VariableDeclaration","scope":562,"src":"1348:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":508,"name":"uint64","nodeType":"ElementaryTypeName","src":"1348:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":511,"mutability":"mutable","name":"_payload","nameLocation":"1386:8:2","nodeType":"VariableDeclaration","scope":562,"src":"1371:23:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":510,"name":"bytes","nodeType":"ElementaryTypeName","src":"1371:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1274:126:2"},"returnParameters":{"id":514,"nodeType":"ParameterList","parameters":[],"src":"1425:0:2"},"scope":971,"src":"1256:825:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"id":573,"implemented":false,"kind":"function","modifiers":[],"name":"_blockingLzReceive","nameLocation":"2239:18:2","nodeType":"FunctionDefinition","parameters":{"id":571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":564,"mutability":"mutable","name":"_srcChainId","nameLocation":"2274:11:2","nodeType":"VariableDeclaration","scope":573,"src":"2267:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":563,"name":"uint16","nodeType":"ElementaryTypeName","src":"2267:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":566,"mutability":"mutable","name":"_srcAddress","nameLocation":"2308:11:2","nodeType":"VariableDeclaration","scope":573,"src":"2295:24:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":565,"name":"bytes","nodeType":"ElementaryTypeName","src":"2295:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":568,"mutability":"mutable","name":"_nonce","nameLocation":"2336:6:2","nodeType":"VariableDeclaration","scope":573,"src":"2329:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":567,"name":"uint64","nodeType":"ElementaryTypeName","src":"2329:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":570,"mutability":"mutable","name":"_payload","nameLocation":"2365:8:2","nodeType":"VariableDeclaration","scope":573,"src":"2352:21:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":569,"name":"bytes","nodeType":"ElementaryTypeName","src":"2352:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2257:122:2"},"returnParameters":{"id":572,"nodeType":"ParameterList","parameters":[],"src":"2396:0:2"},"scope":971,"src":"2230:167:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":621,"nodeType":"Block","src":"2640:365:2","statements":[{"assignments":[589],"declarations":[{"constant":false,"id":589,"mutability":"mutable","name":"trustedRemote","nameLocation":"2663:13:2","nodeType":"VariableDeclaration","scope":621,"src":"2650:26:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":588,"name":"bytes","nodeType":"ElementaryTypeName","src":"2650:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":593,"initialValue":{"baseExpression":{"id":590,"name":"trustedRemoteLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":455,"src":"2679:19:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_bytes_storage_$","typeString":"mapping(uint16 => bytes storage ref)"}},"id":592,"indexExpression":{"id":591,"name":"_dstChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":575,"src":"2699:11:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2679:32:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2650:61:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":595,"name":"trustedRemote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":589,"src":"2729:13:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2743:6:2","memberName":"length","nodeType":"MemberAccess","src":"2729:20:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2753:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2729:25:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c7a4170703a2064657374696e6174696f6e20636861696e206973206e6f742061207472757374656420736f75726365","id":599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2756:50:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_65511ce9fb02a17101879c9b581e54d0cddc37b781936a67d4a6ef307ad5afd7","typeString":"literal_string \"LzApp: destination chain is not a trusted source\""},"value":"LzApp: destination chain is not a trusted source"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_65511ce9fb02a17101879c9b581e54d0cddc37b781936a67d4a6ef307ad5afd7","typeString":"literal_string \"LzApp: destination chain is not a trusted source\""}],"id":594,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2721:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2721:86:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":601,"nodeType":"ExpressionStatement","src":"2721:86:2"},{"expression":{"arguments":[{"id":603,"name":"_dstChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":575,"src":"2835:11:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"expression":{"id":604,"name":"_payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":577,"src":"2848:8:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2857:6:2","memberName":"length","nodeType":"MemberAccess","src":"2848:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":602,"name":"_checkPayloadSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":711,"src":"2817:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint16_$_t_uint256_$returns$__$","typeString":"function (uint16,uint256) view"}},"id":606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2817:47:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":607,"nodeType":"ExpressionStatement","src":"2817:47:2"},{"expression":{"arguments":[{"id":613,"name":"_dstChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":575,"src":"2909:11:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":614,"name":"trustedRemote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":589,"src":"2922:13:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":615,"name":"_payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":577,"src":"2937:8:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":616,"name":"_refundAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":579,"src":"2947:14:2","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":617,"name":"_zroPaymentAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":581,"src":"2963:18:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":618,"name":"_adapterParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":583,"src":"2983:14:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":608,"name":"lzEndpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":451,"src":"2874:10:2","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpoint_$1357","typeString":"contract ILayerZeroEndpoint"}},"id":610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2885:4:2","memberName":"send","nodeType":"MemberAccess","referencedDeclaration":1232,"src":"2874:15:2","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_uint16_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_address_payable_$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint16,bytes memory,bytes memory,address payable,address,bytes memory) payable external"}},"id":612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":611,"name":"_nativeFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":585,"src":"2897:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2874:34:2","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_uint16_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_address_payable_$_t_address_$_t_bytes_memory_ptr_$returns$__$value","typeString":"function (uint16,bytes memory,bytes memory,address payable,address,bytes memory) payable external"}},"id":619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2874:124:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":620,"nodeType":"ExpressionStatement","src":"2874:124:2"}]},"id":622,"implemented":true,"kind":"function","modifiers":[],"name":"_lzSend","nameLocation":"2412:7:2","nodeType":"FunctionDefinition","parameters":{"id":586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":575,"mutability":"mutable","name":"_dstChainId","nameLocation":"2436:11:2","nodeType":"VariableDeclaration","scope":622,"src":"2429:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":574,"name":"uint16","nodeType":"ElementaryTypeName","src":"2429:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":577,"mutability":"mutable","name":"_payload","nameLocation":"2470:8:2","nodeType":"VariableDeclaration","scope":622,"src":"2457:21:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":576,"name":"bytes","nodeType":"ElementaryTypeName","src":"2457:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":579,"mutability":"mutable","name":"_refundAddress","nameLocation":"2504:14:2","nodeType":"VariableDeclaration","scope":622,"src":"2488:30:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":578,"name":"address","nodeType":"ElementaryTypeName","src":"2488:15:2","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":581,"mutability":"mutable","name":"_zroPaymentAddress","nameLocation":"2536:18:2","nodeType":"VariableDeclaration","scope":622,"src":"2528:26:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":580,"name":"address","nodeType":"ElementaryTypeName","src":"2528:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":583,"mutability":"mutable","name":"_adapterParams","nameLocation":"2577:14:2","nodeType":"VariableDeclaration","scope":622,"src":"2564:27:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":582,"name":"bytes","nodeType":"ElementaryTypeName","src":"2564:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":585,"mutability":"mutable","name":"_nativeFee","nameLocation":"2606:10:2","nodeType":"VariableDeclaration","scope":622,"src":"2601:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":584,"name":"uint","nodeType":"ElementaryTypeName","src":"2601:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2419:203:2"},"returnParameters":{"id":587,"nodeType":"ParameterList","parameters":[],"src":"2640:0:2"},"scope":971,"src":"2403:602:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":663,"nodeType":"Block","src":"3174:290:2","statements":[{"assignments":[634],"declarations":[{"constant":false,"id":634,"mutability":"mutable","name":"providedGasLimit","nameLocation":"3189:16:2","nodeType":"VariableDeclaration","scope":663,"src":"3184:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":633,"name":"uint","nodeType":"ElementaryTypeName","src":"3184:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":638,"initialValue":{"arguments":[{"id":636,"name":"_adapterParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":628,"src":"3221:14:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":635,"name":"_getGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":681,"src":"3208:12:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_uint256_$","typeString":"function (bytes memory) pure returns (uint256)"}},"id":637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3208:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3184:52:2"},{"assignments":[640],"declarations":[{"constant":false,"id":640,"mutability":"mutable","name":"minGasLimit","nameLocation":"3251:11:2","nodeType":"VariableDeclaration","scope":663,"src":"3246:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":639,"name":"uint","nodeType":"ElementaryTypeName","src":"3246:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":646,"initialValue":{"baseExpression":{"baseExpression":{"id":641,"name":"minDstGasLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"3265:15:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_mapping$_t_uint16_$_t_uint256_$_$","typeString":"mapping(uint16 => mapping(uint16 => uint256))"}},"id":643,"indexExpression":{"id":642,"name":"_dstChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":624,"src":"3281:11:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3265:28:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_uint256_$","typeString":"mapping(uint16 => uint256)"}},"id":645,"indexExpression":{"id":644,"name":"_type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":626,"src":"3294:5:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3265:35:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3246:54:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":648,"name":"minGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":640,"src":"3318:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3332:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3318:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c7a4170703a206d696e4761734c696d6974206e6f7420736574","id":651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3335:28:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_1c12f4398e5982835c19ea43197ffa859493a10bdc288c7cacc6a2d6df414b01","typeString":"literal_string \"LzApp: minGasLimit not set\""},"value":"LzApp: minGasLimit not set"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1c12f4398e5982835c19ea43197ffa859493a10bdc288c7cacc6a2d6df414b01","typeString":"literal_string \"LzApp: minGasLimit not set\""}],"id":647,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3310:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3310:54:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":653,"nodeType":"ExpressionStatement","src":"3310:54:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":655,"name":"providedGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":634,"src":"3382:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":656,"name":"minGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":640,"src":"3402:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":657,"name":"_extraGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":630,"src":"3416:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3402:23:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3382:43:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c7a4170703a20676173206c696d697420697320746f6f206c6f77","id":660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3427:29:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_0cfbfb89d1bd60ee521649a7dce886710cc0992622f97b32d8e555a9c7073be1","typeString":"literal_string \"LzApp: gas limit is too low\""},"value":"LzApp: gas limit is too low"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0cfbfb89d1bd60ee521649a7dce886710cc0992622f97b32d8e555a9c7073be1","typeString":"literal_string \"LzApp: gas limit is too low\""}],"id":654,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3374:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3374:83:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":662,"nodeType":"ExpressionStatement","src":"3374:83:2"}]},"id":664,"implemented":true,"kind":"function","modifiers":[],"name":"_checkGasLimit","nameLocation":"3020:14:2","nodeType":"FunctionDefinition","parameters":{"id":631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":624,"mutability":"mutable","name":"_dstChainId","nameLocation":"3051:11:2","nodeType":"VariableDeclaration","scope":664,"src":"3044:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":623,"name":"uint16","nodeType":"ElementaryTypeName","src":"3044:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":626,"mutability":"mutable","name":"_type","nameLocation":"3079:5:2","nodeType":"VariableDeclaration","scope":664,"src":"3072:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":625,"name":"uint16","nodeType":"ElementaryTypeName","src":"3072:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":628,"mutability":"mutable","name":"_adapterParams","nameLocation":"3107:14:2","nodeType":"VariableDeclaration","scope":664,"src":"3094:27:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":627,"name":"bytes","nodeType":"ElementaryTypeName","src":"3094:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":630,"mutability":"mutable","name":"_extraGas","nameLocation":"3136:9:2","nodeType":"VariableDeclaration","scope":664,"src":"3131:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":629,"name":"uint","nodeType":"ElementaryTypeName","src":"3131:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3034:117:2"},"returnParameters":{"id":632,"nodeType":"ParameterList","parameters":[],"src":"3174:0:2"},"scope":971,"src":"3011:453:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":680,"nodeType":"Block","src":"3567:169:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":672,"name":"_adapterParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":666,"src":"3585:14:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3600:6:2","memberName":"length","nodeType":"MemberAccess","src":"3585:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"3334","id":674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3610:2:2","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"34"},"src":"3585:27:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c7a4170703a20696e76616c69642061646170746572506172616d73","id":676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3614:30:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e109d210c1f1e494c2d731512d3fcc1ea597f69de36a4fccbe193d9ece27e6d","typeString":"literal_string \"LzApp: invalid adapterParams\""},"value":"LzApp: invalid adapterParams"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6e109d210c1f1e494c2d731512d3fcc1ea597f69de36a4fccbe193d9ece27e6d","typeString":"literal_string \"LzApp: invalid adapterParams\""}],"id":671,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3577:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3577:68:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":678,"nodeType":"ExpressionStatement","src":"3577:68:2"},{"AST":{"nodeType":"YulBlock","src":"3664:66:2","statements":[{"nodeType":"YulAssignment","src":"3678:42:2","value":{"arguments":[{"arguments":[{"name":"_adapterParams","nodeType":"YulIdentifier","src":"3700:14:2"},{"kind":"number","nodeType":"YulLiteral","src":"3716:2:2","type":"","value":"34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3696:3:2"},"nodeType":"YulFunctionCall","src":"3696:23:2"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3690:5:2"},"nodeType":"YulFunctionCall","src":"3690:30:2"},"variableNames":[{"name":"gasLimit","nodeType":"YulIdentifier","src":"3678:8:2"}]}]},"evmVersion":"berlin","externalReferences":[{"declaration":666,"isOffset":false,"isSlot":false,"src":"3700:14:2","valueSize":1},{"declaration":669,"isOffset":false,"isSlot":false,"src":"3678:8:2","valueSize":1}],"id":679,"nodeType":"InlineAssembly","src":"3655:75:2"}]},"id":681,"implemented":true,"kind":"function","modifiers":[],"name":"_getGasLimit","nameLocation":"3479:12:2","nodeType":"FunctionDefinition","parameters":{"id":667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":666,"mutability":"mutable","name":"_adapterParams","nameLocation":"3505:14:2","nodeType":"VariableDeclaration","scope":681,"src":"3492:27:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":665,"name":"bytes","nodeType":"ElementaryTypeName","src":"3492:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3491:29:2"},"returnParameters":{"id":670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":669,"mutability":"mutable","name":"gasLimit","nameLocation":"3557:8:2","nodeType":"VariableDeclaration","scope":681,"src":"3552:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":668,"name":"uint","nodeType":"ElementaryTypeName","src":"3552:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3551:15:2"},"scope":971,"src":"3470:266:2","stateMutability":"pure","virtual":true,"visibility":"internal"},{"body":{"id":710,"nodeType":"Block","src":"3830:307:2","statements":[{"assignments":[689],"declarations":[{"constant":false,"id":689,"mutability":"mutable","name":"payloadSizeLimit","nameLocation":"3845:16:2","nodeType":"VariableDeclaration","scope":710,"src":"3840:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":688,"name":"uint","nodeType":"ElementaryTypeName","src":"3840:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":693,"initialValue":{"baseExpression":{"id":690,"name":"payloadSizeLimitLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":465,"src":"3864:22:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_uint256_$","typeString":"mapping(uint16 => uint256)"}},"id":692,"indexExpression":{"id":691,"name":"_dstChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":683,"src":"3887:11:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3864:35:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3840:59:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":694,"name":"payloadSizeLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":689,"src":"3913:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3933:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3913:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":702,"nodeType":"IfStatement","src":"3909:135:2","trueBody":{"id":701,"nodeType":"Block","src":"3936:108:2","statements":[{"expression":{"id":699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":697,"name":"payloadSizeLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":689,"src":"3988:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":698,"name":"DEFAULT_PAYLOAD_SIZE_LIMIT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"4007:26:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3988:45:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":700,"nodeType":"ExpressionStatement","src":"3988:45:2"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":704,"name":"_payloadSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":685,"src":"4061:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":705,"name":"payloadSizeLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":689,"src":"4077:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4061:32:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c7a4170703a207061796c6f61642073697a6520697320746f6f206c61726765","id":707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4095:34:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_fdfeef12c0e20d028b50cab1ee288ba9867f56b726ecc8cd0c9ed3048ec177dd","typeString":"literal_string \"LzApp: payload size is too large\""},"value":"LzApp: payload size is too large"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fdfeef12c0e20d028b50cab1ee288ba9867f56b726ecc8cd0c9ed3048ec177dd","typeString":"literal_string \"LzApp: payload size is too large\""}],"id":703,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4053:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4053:77:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":709,"nodeType":"ExpressionStatement","src":"4053:77:2"}]},"id":711,"implemented":true,"kind":"function","modifiers":[],"name":"_checkPayloadSize","nameLocation":"3751:17:2","nodeType":"FunctionDefinition","parameters":{"id":686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":683,"mutability":"mutable","name":"_dstChainId","nameLocation":"3776:11:2","nodeType":"VariableDeclaration","scope":711,"src":"3769:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":682,"name":"uint16","nodeType":"ElementaryTypeName","src":"3769:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":685,"mutability":"mutable","name":"_payloadSize","nameLocation":"3794:12:2","nodeType":"VariableDeclaration","scope":711,"src":"3789:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":684,"name":"uint","nodeType":"ElementaryTypeName","src":"3789:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3768:39:2"},"returnParameters":{"id":687,"nodeType":"ParameterList","parameters":[],"src":"3830:0:2"},"scope":971,"src":"3742:395:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":735,"nodeType":"Block","src":"4394:92:2","statements":[{"expression":{"arguments":[{"id":726,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":713,"src":"4432:8:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":727,"name":"_chainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":715,"src":"4442:8:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"arguments":[{"id":730,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4460:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_LzApp_$971","typeString":"contract LzApp"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_LzApp_$971","typeString":"contract LzApp"}],"id":729,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4452:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":728,"name":"address","nodeType":"ElementaryTypeName","src":"4452:7:2","typeDescriptions":{}}},"id":731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4452:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":732,"name":"_configType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":719,"src":"4467:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":724,"name":"lzEndpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":451,"src":"4411:10:2","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpoint_$1357","typeString":"contract ILayerZeroEndpoint"}},"id":725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4422:9:2","memberName":"getConfig","nodeType":"MemberAccess","referencedDeclaration":1342,"src":"4411:20:2","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint16_$_t_uint16_$_t_address_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint16,uint16,address,uint256) view external returns (bytes memory)"}},"id":733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4411:68:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":723,"id":734,"nodeType":"Return","src":"4404:75:2"}]},"functionSelector":"f5ecbdbc","id":736,"implemented":true,"kind":"function","modifiers":[],"name":"getConfig","nameLocation":"4248:9:2","nodeType":"FunctionDefinition","parameters":{"id":720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":713,"mutability":"mutable","name":"_version","nameLocation":"4274:8:2","nodeType":"VariableDeclaration","scope":736,"src":"4267:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":712,"name":"uint16","nodeType":"ElementaryTypeName","src":"4267:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":715,"mutability":"mutable","name":"_chainId","nameLocation":"4299:8:2","nodeType":"VariableDeclaration","scope":736,"src":"4292:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":714,"name":"uint16","nodeType":"ElementaryTypeName","src":"4292:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":717,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":736,"src":"4317:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":716,"name":"address","nodeType":"ElementaryTypeName","src":"4317:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":719,"mutability":"mutable","name":"_configType","nameLocation":"4339:11:2","nodeType":"VariableDeclaration","scope":736,"src":"4334:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":718,"name":"uint","nodeType":"ElementaryTypeName","src":"4334:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4257:99:2"},"returnParameters":{"id":723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":722,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":736,"src":"4380:12:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":721,"name":"bytes","nodeType":"ElementaryTypeName","src":"4380:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4379:14:2"},"scope":971,"src":"4239:247:2","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[1384],"body":{"id":759,"nodeType":"Block","src":"4706:79:2","statements":[{"expression":{"arguments":[{"id":753,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":738,"src":"4737:8:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":754,"name":"_chainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":740,"src":"4747:8:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":755,"name":"_configType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":742,"src":"4757:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":756,"name":"_config","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":744,"src":"4770:7:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":750,"name":"lzEndpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":451,"src":"4716:10:2","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpoint_$1357","typeString":"contract ILayerZeroEndpoint"}},"id":752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4727:9:2","memberName":"setConfig","nodeType":"MemberAccess","referencedDeclaration":1384,"src":"4716:20:2","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint16_$_t_uint16_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint16,uint16,uint256,bytes memory) external"}},"id":757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4716:62:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":758,"nodeType":"ExpressionStatement","src":"4716:62:2"}]},"functionSelector":"cbed8b9c","id":760,"implemented":true,"kind":"function","modifiers":[{"id":748,"kind":"modifierInvocation","modifierName":{"id":747,"name":"onlyOwner","nameLocations":["4696:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":1434,"src":"4696:9:2"},"nodeType":"ModifierInvocation","src":"4696:9:2"}],"name":"setConfig","nameLocation":"4554:9:2","nodeType":"FunctionDefinition","overrides":{"id":746,"nodeType":"OverrideSpecifier","overrides":[],"src":"4687:8:2"},"parameters":{"id":745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":738,"mutability":"mutable","name":"_version","nameLocation":"4580:8:2","nodeType":"VariableDeclaration","scope":760,"src":"4573:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":737,"name":"uint16","nodeType":"ElementaryTypeName","src":"4573:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":740,"mutability":"mutable","name":"_chainId","nameLocation":"4605:8:2","nodeType":"VariableDeclaration","scope":760,"src":"4598:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":739,"name":"uint16","nodeType":"ElementaryTypeName","src":"4598:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":742,"mutability":"mutable","name":"_configType","nameLocation":"4628:11:2","nodeType":"VariableDeclaration","scope":760,"src":"4623:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":741,"name":"uint","nodeType":"ElementaryTypeName","src":"4623:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":744,"mutability":"mutable","name":"_config","nameLocation":"4664:7:2","nodeType":"VariableDeclaration","scope":760,"src":"4649:22:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":743,"name":"bytes","nodeType":"ElementaryTypeName","src":"4649:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4563:114:2"},"returnParameters":{"id":749,"nodeType":"ParameterList","parameters":[],"src":"4706:0:2"},"scope":971,"src":"4545:240:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[1389],"body":{"id":774,"nodeType":"Block","src":"4860:52:2","statements":[{"expression":{"arguments":[{"id":771,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":762,"src":"4896:8:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"}],"expression":{"id":768,"name":"lzEndpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":451,"src":"4870:10:2","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpoint_$1357","typeString":"contract ILayerZeroEndpoint"}},"id":770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4881:14:2","memberName":"setSendVersion","nodeType":"MemberAccess","referencedDeclaration":1389,"src":"4870:25:2","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint16_$returns$__$","typeString":"function (uint16) external"}},"id":772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4870:35:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":773,"nodeType":"ExpressionStatement","src":"4870:35:2"}]},"functionSelector":"07e0db17","id":775,"implemented":true,"kind":"function","modifiers":[{"id":766,"kind":"modifierInvocation","modifierName":{"id":765,"name":"onlyOwner","nameLocations":["4850:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":1434,"src":"4850:9:2"},"nodeType":"ModifierInvocation","src":"4850:9:2"}],"name":"setSendVersion","nameLocation":"4800:14:2","nodeType":"FunctionDefinition","overrides":{"id":764,"nodeType":"OverrideSpecifier","overrides":[],"src":"4841:8:2"},"parameters":{"id":763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":762,"mutability":"mutable","name":"_version","nameLocation":"4822:8:2","nodeType":"VariableDeclaration","scope":775,"src":"4815:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":761,"name":"uint16","nodeType":"ElementaryTypeName","src":"4815:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"4814:17:2"},"returnParameters":{"id":767,"nodeType":"ParameterList","parameters":[],"src":"4860:0:2"},"scope":971,"src":"4791:121:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[1394],"body":{"id":789,"nodeType":"Block","src":"4990:55:2","statements":[{"expression":{"arguments":[{"id":786,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"5029:8:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"}],"expression":{"id":783,"name":"lzEndpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":451,"src":"5000:10:2","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpoint_$1357","typeString":"contract ILayerZeroEndpoint"}},"id":785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5011:17:2","memberName":"setReceiveVersion","nodeType":"MemberAccess","referencedDeclaration":1394,"src":"5000:28:2","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint16_$returns$__$","typeString":"function (uint16) external"}},"id":787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5000:38:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":788,"nodeType":"ExpressionStatement","src":"5000:38:2"}]},"functionSelector":"10ddb137","id":790,"implemented":true,"kind":"function","modifiers":[{"id":781,"kind":"modifierInvocation","modifierName":{"id":780,"name":"onlyOwner","nameLocations":["4980:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":1434,"src":"4980:9:2"},"nodeType":"ModifierInvocation","src":"4980:9:2"}],"name":"setReceiveVersion","nameLocation":"4927:17:2","nodeType":"FunctionDefinition","overrides":{"id":779,"nodeType":"OverrideSpecifier","overrides":[],"src":"4971:8:2"},"parameters":{"id":778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":777,"mutability":"mutable","name":"_version","nameLocation":"4952:8:2","nodeType":"VariableDeclaration","scope":790,"src":"4945:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":776,"name":"uint16","nodeType":"ElementaryTypeName","src":"4945:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"4944:17:2"},"returnParameters":{"id":782,"nodeType":"ParameterList","parameters":[],"src":"4990:0:2"},"scope":971,"src":"4918:127:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[1401],"body":{"id":807,"nodeType":"Block","src":"5155:72:2","statements":[{"expression":{"arguments":[{"id":803,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":792,"src":"5195:11:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":804,"name":"_srcAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":794,"src":"5208:11:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":800,"name":"lzEndpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":451,"src":"5165:10:2","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpoint_$1357","typeString":"contract ILayerZeroEndpoint"}},"id":802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5176:18:2","memberName":"forceResumeReceive","nodeType":"MemberAccess","referencedDeclaration":1401,"src":"5165:29:2","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint16_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint16,bytes memory) external"}},"id":805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5165:55:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":806,"nodeType":"ExpressionStatement","src":"5165:55:2"}]},"functionSelector":"42d65a8d","id":808,"implemented":true,"kind":"function","modifiers":[{"id":798,"kind":"modifierInvocation","modifierName":{"id":797,"name":"onlyOwner","nameLocations":["5145:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":1434,"src":"5145:9:2"},"nodeType":"ModifierInvocation","src":"5145:9:2"}],"name":"forceResumeReceive","nameLocation":"5060:18:2","nodeType":"FunctionDefinition","overrides":{"id":796,"nodeType":"OverrideSpecifier","overrides":[],"src":"5136:8:2"},"parameters":{"id":795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":792,"mutability":"mutable","name":"_srcChainId","nameLocation":"5086:11:2","nodeType":"VariableDeclaration","scope":808,"src":"5079:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":791,"name":"uint16","nodeType":"ElementaryTypeName","src":"5079:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":794,"mutability":"mutable","name":"_srcAddress","nameLocation":"5114:11:2","nodeType":"VariableDeclaration","scope":808,"src":"5099:26:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":793,"name":"bytes","nodeType":"ElementaryTypeName","src":"5099:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5078:48:2"},"returnParameters":{"id":799,"nodeType":"ParameterList","parameters":[],"src":"5155:0:2"},"scope":971,"src":"5051:176:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":828,"nodeType":"Block","src":"5460:114:2","statements":[{"expression":{"id":821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":817,"name":"trustedRemoteLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":455,"src":"5470:19:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_bytes_storage_$","typeString":"mapping(uint16 => bytes storage ref)"}},"id":819,"indexExpression":{"id":818,"name":"_remoteChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":810,"src":"5490:14:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5470:35:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":820,"name":"_path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"5508:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"src":"5470:43:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"id":822,"nodeType":"ExpressionStatement","src":"5470:43:2"},{"eventCall":{"arguments":[{"id":824,"name":"_remoteChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":810,"src":"5545:14:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":825,"name":"_path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"5561:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":823,"name":"SetTrustedRemote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":477,"src":"5528:16:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint16_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint16,bytes memory)"}},"id":826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5528:39:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":827,"nodeType":"EmitStatement","src":"5523:44:2"}]},"functionSelector":"eb8d72b7","id":829,"implemented":true,"kind":"function","modifiers":[{"id":815,"kind":"modifierInvocation","modifierName":{"id":814,"name":"onlyOwner","nameLocations":["5450:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":1434,"src":"5450:9:2"},"nodeType":"ModifierInvocation","src":"5450:9:2"}],"name":"setTrustedRemote","nameLocation":"5379:16:2","nodeType":"FunctionDefinition","parameters":{"id":813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":810,"mutability":"mutable","name":"_remoteChainId","nameLocation":"5403:14:2","nodeType":"VariableDeclaration","scope":829,"src":"5396:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":809,"name":"uint16","nodeType":"ElementaryTypeName","src":"5396:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":812,"mutability":"mutable","name":"_path","nameLocation":"5434:5:2","nodeType":"VariableDeclaration","scope":829,"src":"5419:20:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":811,"name":"bytes","nodeType":"ElementaryTypeName","src":"5419:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5395:45:2"},"returnParameters":{"id":816,"nodeType":"ParameterList","parameters":[],"src":"5460:0:2"},"scope":971,"src":"5370:204:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":856,"nodeType":"Block","src":"5686:172:2","statements":[{"expression":{"id":849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":838,"name":"trustedRemoteLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":455,"src":"5696:19:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_bytes_storage_$","typeString":"mapping(uint16 => bytes storage ref)"}},"id":840,"indexExpression":{"id":839,"name":"_remoteChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":831,"src":"5716:14:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5696:35:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":843,"name":"_remoteAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":833,"src":"5751:14:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"arguments":[{"id":846,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5775:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_LzApp_$971","typeString":"contract LzApp"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_LzApp_$971","typeString":"contract LzApp"}],"id":845,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5767:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":844,"name":"address","nodeType":"ElementaryTypeName","src":"5767:7:2","typeDescriptions":{}}},"id":847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5767:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":841,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5734:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":842,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5738:12:2","memberName":"encodePacked","nodeType":"MemberAccess","src":"5734:16:2","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5734:47:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"5696:85:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"id":850,"nodeType":"ExpressionStatement","src":"5696:85:2"},{"eventCall":{"arguments":[{"id":852,"name":"_remoteChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":831,"src":"5820:14:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":853,"name":"_remoteAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":833,"src":"5836:14:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":851,"name":"SetTrustedRemoteAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":483,"src":"5796:23:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint16_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint16,bytes memory)"}},"id":854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5796:55:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":855,"nodeType":"EmitStatement","src":"5791:60:2"}]},"functionSelector":"a6c3d165","id":857,"implemented":true,"kind":"function","modifiers":[{"id":836,"kind":"modifierInvocation","modifierName":{"id":835,"name":"onlyOwner","nameLocations":["5676:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":1434,"src":"5676:9:2"},"nodeType":"ModifierInvocation","src":"5676:9:2"}],"name":"setTrustedRemoteAddress","nameLocation":"5589:23:2","nodeType":"FunctionDefinition","parameters":{"id":834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":831,"mutability":"mutable","name":"_remoteChainId","nameLocation":"5620:14:2","nodeType":"VariableDeclaration","scope":857,"src":"5613:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":830,"name":"uint16","nodeType":"ElementaryTypeName","src":"5613:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":833,"mutability":"mutable","name":"_remoteAddress","nameLocation":"5651:14:2","nodeType":"VariableDeclaration","scope":857,"src":"5636:29:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":832,"name":"bytes","nodeType":"ElementaryTypeName","src":"5636:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5612:54:2"},"returnParameters":{"id":837,"nodeType":"ParameterList","parameters":[],"src":"5686:0:2"},"scope":971,"src":"5580:278:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":887,"nodeType":"Block","src":"5957:233:2","statements":[{"assignments":[865],"declarations":[{"constant":false,"id":865,"mutability":"mutable","name":"path","nameLocation":"5980:4:2","nodeType":"VariableDeclaration","scope":887,"src":"5967:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":864,"name":"bytes","nodeType":"ElementaryTypeName","src":"5967:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":869,"initialValue":{"baseExpression":{"id":866,"name":"trustedRemoteLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":455,"src":"5987:19:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_bytes_storage_$","typeString":"mapping(uint16 => bytes storage ref)"}},"id":868,"indexExpression":{"id":867,"name":"_remoteChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":859,"src":"6007:14:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5987:35:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"VariableDeclarationStatement","src":"5967:55:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":871,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"6040:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6045:6:2","memberName":"length","nodeType":"MemberAccess","src":"6040:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6055:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6040:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c7a4170703a206e6f20747275737465642070617468207265636f7264","id":875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6058:31:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_090ffd986411f3003f8dc74b3284ca36e66b7183a1b08562ef7e5313ae219552","typeString":"literal_string \"LzApp: no trusted path record\""},"value":"LzApp: no trusted path record"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_090ffd986411f3003f8dc74b3284ca36e66b7183a1b08562ef7e5313ae219552","typeString":"literal_string \"LzApp: no trusted path record\""}],"id":870,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6032:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6032:58:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":877,"nodeType":"ExpressionStatement","src":"6032:58:2"},{"expression":{"arguments":[{"hexValue":"30","id":880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6118:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":881,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"6121:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6126:6:2","memberName":"length","nodeType":"MemberAccess","src":"6121:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"3230","id":883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6135:2:2","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"src":"6121:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":878,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"6107:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6112:5:2","memberName":"slice","nodeType":"MemberAccess","referencedDeclaration":63,"src":"6107:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bytes_memory_ptr_$attached_to$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,uint256,uint256) pure returns (bytes memory)"}},"id":885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6107:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":863,"id":886,"nodeType":"Return","src":"6100:38:2"}]},"functionSelector":"9f38369a","id":888,"implemented":true,"kind":"function","modifiers":[],"name":"getTrustedRemoteAddress","nameLocation":"5873:23:2","nodeType":"FunctionDefinition","parameters":{"id":860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":859,"mutability":"mutable","name":"_remoteChainId","nameLocation":"5904:14:2","nodeType":"VariableDeclaration","scope":888,"src":"5897:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":858,"name":"uint16","nodeType":"ElementaryTypeName","src":"5897:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"5896:23:2"},"returnParameters":{"id":863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":862,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":888,"src":"5943:12:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":861,"name":"bytes","nodeType":"ElementaryTypeName","src":"5943:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5942:14:2"},"scope":971,"src":"5864:326:2","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":903,"nodeType":"Block","src":"6255:74:2","statements":[{"expression":{"id":897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":895,"name":"precrime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":467,"src":"6265:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":896,"name":"_precrime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":890,"src":"6276:9:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6265:20:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":898,"nodeType":"ExpressionStatement","src":"6265:20:2"},{"eventCall":{"arguments":[{"id":900,"name":"_precrime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":890,"src":"6312:9:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":899,"name":"SetPrecrime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":471,"src":"6300:11:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6300:22:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":902,"nodeType":"EmitStatement","src":"6295:27:2"}]},"functionSelector":"baf3292d","id":904,"implemented":true,"kind":"function","modifiers":[{"id":893,"kind":"modifierInvocation","modifierName":{"id":892,"name":"onlyOwner","nameLocations":["6245:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":1434,"src":"6245:9:2"},"nodeType":"ModifierInvocation","src":"6245:9:2"}],"name":"setPrecrime","nameLocation":"6205:11:2","nodeType":"FunctionDefinition","parameters":{"id":891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":890,"mutability":"mutable","name":"_precrime","nameLocation":"6225:9:2","nodeType":"VariableDeclaration","scope":904,"src":"6217:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":889,"name":"address","nodeType":"ElementaryTypeName","src":"6217:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6216:19:2"},"returnParameters":{"id":894,"nodeType":"ParameterList","parameters":[],"src":"6255:0:2"},"scope":971,"src":"6196:133:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":929,"nodeType":"Block","src":"6460:130:2","statements":[{"expression":{"id":921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":915,"name":"minDstGasLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"6470:15:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_mapping$_t_uint16_$_t_uint256_$_$","typeString":"mapping(uint16 => mapping(uint16 => uint256))"}},"id":918,"indexExpression":{"id":916,"name":"_dstChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":906,"src":"6486:11:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6470:28:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_uint256_$","typeString":"mapping(uint16 => uint256)"}},"id":919,"indexExpression":{"id":917,"name":"_packetType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":908,"src":"6499:11:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6470:41:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":920,"name":"_minGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":910,"src":"6514:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6470:51:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":922,"nodeType":"ExpressionStatement","src":"6470:51:2"},{"eventCall":{"arguments":[{"id":924,"name":"_dstChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":906,"src":"6549:11:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":925,"name":"_packetType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":908,"src":"6562:11:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":926,"name":"_minGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":910,"src":"6575:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":923,"name":"SetMinDstGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":491,"src":"6536:12:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint16_$_t_uint16_$_t_uint256_$returns$__$","typeString":"function (uint16,uint16,uint256)"}},"id":927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6536:47:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":928,"nodeType":"EmitStatement","src":"6531:52:2"}]},"functionSelector":"df2a5b3b","id":930,"implemented":true,"kind":"function","modifiers":[{"id":913,"kind":"modifierInvocation","modifierName":{"id":912,"name":"onlyOwner","nameLocations":["6450:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":1434,"src":"6450:9:2"},"nodeType":"ModifierInvocation","src":"6450:9:2"}],"name":"setMinDstGas","nameLocation":"6344:12:2","nodeType":"FunctionDefinition","parameters":{"id":911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":906,"mutability":"mutable","name":"_dstChainId","nameLocation":"6373:11:2","nodeType":"VariableDeclaration","scope":930,"src":"6366:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":905,"name":"uint16","nodeType":"ElementaryTypeName","src":"6366:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":908,"mutability":"mutable","name":"_packetType","nameLocation":"6401:11:2","nodeType":"VariableDeclaration","scope":930,"src":"6394:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":907,"name":"uint16","nodeType":"ElementaryTypeName","src":"6394:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":910,"mutability":"mutable","name":"_minGas","nameLocation":"6427:7:2","nodeType":"VariableDeclaration","scope":930,"src":"6422:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":909,"name":"uint","nodeType":"ElementaryTypeName","src":"6422:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6356:84:2"},"returnParameters":{"id":914,"nodeType":"ParameterList","parameters":[],"src":"6460:0:2"},"scope":971,"src":"6335:255:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":945,"nodeType":"Block","src":"6729:60:2","statements":[{"expression":{"id":943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":939,"name":"payloadSizeLimitLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":465,"src":"6739:22:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_uint256_$","typeString":"mapping(uint16 => uint256)"}},"id":941,"indexExpression":{"id":940,"name":"_dstChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":932,"src":"6762:11:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6739:35:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":942,"name":"_size","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":934,"src":"6777:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6739:43:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":944,"nodeType":"ExpressionStatement","src":"6739:43:2"}]},"functionSelector":"0df37483","id":946,"implemented":true,"kind":"function","modifiers":[{"id":937,"kind":"modifierInvocation","modifierName":{"id":936,"name":"onlyOwner","nameLocations":["6719:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":1434,"src":"6719:9:2"},"nodeType":"ModifierInvocation","src":"6719:9:2"}],"name":"setPayloadSizeLimit","nameLocation":"6658:19:2","nodeType":"FunctionDefinition","parameters":{"id":935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":932,"mutability":"mutable","name":"_dstChainId","nameLocation":"6685:11:2","nodeType":"VariableDeclaration","scope":946,"src":"6678:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":931,"name":"uint16","nodeType":"ElementaryTypeName","src":"6678:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":934,"mutability":"mutable","name":"_size","nameLocation":"6703:5:2","nodeType":"VariableDeclaration","scope":946,"src":"6698:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":933,"name":"uint","nodeType":"ElementaryTypeName","src":"6698:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6677:32:2"},"returnParameters":{"id":938,"nodeType":"ParameterList","parameters":[],"src":"6729:0:2"},"scope":971,"src":"6649:140:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":969,"nodeType":"Block","src":"6986:145:2","statements":[{"assignments":[956],"declarations":[{"constant":false,"id":956,"mutability":"mutable","name":"trustedSource","nameLocation":"7009:13:2","nodeType":"VariableDeclaration","scope":969,"src":"6996:26:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":955,"name":"bytes","nodeType":"ElementaryTypeName","src":"6996:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":960,"initialValue":{"baseExpression":{"id":957,"name":"trustedRemoteLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":455,"src":"7025:19:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_bytes_storage_$","typeString":"mapping(uint16 => bytes storage ref)"}},"id":959,"indexExpression":{"id":958,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":948,"src":"7045:11:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7025:32:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6996:61:2"},{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":962,"name":"trustedSource","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":956,"src":"7084:13:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":961,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7074:9:2","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7074:24:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":965,"name":"_srcAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":950,"src":"7112:11:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":964,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7102:9:2","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":966,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7102:22:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"7074:50:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":954,"id":968,"nodeType":"Return","src":"7067:57:2"}]},"functionSelector":"3d8b38f6","id":970,"implemented":true,"kind":"function","modifiers":[],"name":"isTrustedRemote","nameLocation":"6893:15:2","nodeType":"FunctionDefinition","parameters":{"id":951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":948,"mutability":"mutable","name":"_srcChainId","nameLocation":"6916:11:2","nodeType":"VariableDeclaration","scope":970,"src":"6909:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":947,"name":"uint16","nodeType":"ElementaryTypeName","src":"6909:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":950,"mutability":"mutable","name":"_srcAddress","nameLocation":"6944:11:2","nodeType":"VariableDeclaration","scope":970,"src":"6929:26:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":949,"name":"bytes","nodeType":"ElementaryTypeName","src":"6929:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6908:48:2"},"returnParameters":{"id":954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":953,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":970,"src":"6980:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":952,"name":"bool","nodeType":"ElementaryTypeName","src":"6980:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6979:6:2"},"scope":971,"src":"6884:247:2","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":972,"src":"345:6788:2","usedErrors":[],"usedEvents":[471,477,483,491,1416]}],"src":"33:7101:2"},"id":2},"@layerzerolabs/solidity-examples/contracts/lzApp/NonblockingLzApp.sol":{"ast":{"absolutePath":"@layerzerolabs/solidity-examples/contracts/lzApp/NonblockingLzApp.sol","exportedSymbols":{"BytesLib":[332],"Context":[1537],"ExcessivelySafeCall":[429],"ILayerZeroEndpoint":[1357],"ILayerZeroReceiver":[1371],"ILayerZeroUserApplicationConfig":[1402],"LzApp":[971],"NonblockingLzApp":[1212],"Ownable":[1515]},"id":1213,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":973,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:3"},{"absolutePath":"@layerzerolabs/solidity-examples/contracts/lzApp/LzApp.sol","file":"./LzApp.sol","id":974,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1213,"sourceUnit":972,"src":"58:21:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"@layerzerolabs/solidity-examples/contracts/libraries/ExcessivelySafeCall.sol","file":"../libraries/ExcessivelySafeCall.sol","id":975,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1213,"sourceUnit":430,"src":"80:46:3","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":976,"name":"LzApp","nameLocations":["510:5:3"],"nodeType":"IdentifierPath","referencedDeclaration":971,"src":"510:5:3"},"id":977,"nodeType":"InheritanceSpecifier","src":"510:5:3"}],"canonicalName":"NonblockingLzApp","contractDependencies":[],"contractKind":"contract","fullyImplemented":false,"id":1212,"linearizedBaseContracts":[1212,971,1402,1371,1515,1537],"name":"NonblockingLzApp","nameLocation":"490:16:3","nodeType":"ContractDefinition","nodes":[{"global":false,"id":980,"libraryName":{"id":978,"name":"ExcessivelySafeCall","nameLocations":["528:19:3"],"nodeType":"IdentifierPath","referencedDeclaration":429,"src":"528:19:3"},"nodeType":"UsingForDirective","src":"522:38:3","typeName":{"id":979,"name":"address","nodeType":"ElementaryTypeName","src":"552:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"body":{"id":988,"nodeType":"Block","src":"614:2:3","statements":[]},"id":989,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":985,"name":"_endpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":982,"src":"603:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":986,"kind":"baseConstructorSpecifier","modifierName":{"id":984,"name":"LzApp","nameLocations":["597:5:3"],"nodeType":"IdentifierPath","referencedDeclaration":971,"src":"597:5:3"},"nodeType":"ModifierInvocation","src":"597:16:3"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":982,"mutability":"mutable","name":"_endpoint","nameLocation":"586:9:3","nodeType":"VariableDeclaration","scope":989,"src":"578:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":981,"name":"address","nodeType":"ElementaryTypeName","src":"578:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"577:19:3"},"returnParameters":{"id":987,"nodeType":"ParameterList","parameters":[],"src":"614:0:3"},"scope":1212,"src":"566:50:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":false,"functionSelector":"5b8c41e6","id":997,"mutability":"mutable","name":"failedMessages","nameLocation":"693:14:3","nodeType":"VariableDeclaration","scope":1212,"src":"622:85:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_mapping$_t_bytes_memory_ptr_$_t_mapping$_t_uint64_$_t_bytes32_$_$_$","typeString":"mapping(uint16 => mapping(bytes => mapping(uint64 => bytes32)))"},"typeName":{"id":996,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":990,"name":"uint16","nodeType":"ElementaryTypeName","src":"630:6:3","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"Mapping","src":"622:63:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_mapping$_t_bytes_memory_ptr_$_t_mapping$_t_uint64_$_t_bytes32_$_$_$","typeString":"mapping(uint16 => mapping(bytes => mapping(uint64 => bytes32)))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":995,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":991,"name":"bytes","nodeType":"ElementaryTypeName","src":"648:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"nodeType":"Mapping","src":"640:44:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes_memory_ptr_$_t_mapping$_t_uint64_$_t_bytes32_$_$","typeString":"mapping(bytes => mapping(uint64 => bytes32))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":994,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":992,"name":"uint64","nodeType":"ElementaryTypeName","src":"665:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Mapping","src":"657:26:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_bytes32_$","typeString":"mapping(uint64 => bytes32)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":993,"name":"bytes32","nodeType":"ElementaryTypeName","src":"675:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}}}},"visibility":"public"},{"anonymous":false,"eventSelector":"e183f33de2837795525b4792ca4cd60535bd77c53b7e7030060bfcf5734d6b0c","id":1009,"name":"MessageFailed","nameLocation":"720:13:3","nodeType":"EventDefinition","parameters":{"id":1008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":999,"indexed":false,"mutability":"mutable","name":"_srcChainId","nameLocation":"741:11:3","nodeType":"VariableDeclaration","scope":1009,"src":"734:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":998,"name":"uint16","nodeType":"ElementaryTypeName","src":"734:6:3","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1001,"indexed":false,"mutability":"mutable","name":"_srcAddress","nameLocation":"760:11:3","nodeType":"VariableDeclaration","scope":1009,"src":"754:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1000,"name":"bytes","nodeType":"ElementaryTypeName","src":"754:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1003,"indexed":false,"mutability":"mutable","name":"_nonce","nameLocation":"780:6:3","nodeType":"VariableDeclaration","scope":1009,"src":"773:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1002,"name":"uint64","nodeType":"ElementaryTypeName","src":"773:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":1005,"indexed":false,"mutability":"mutable","name":"_payload","nameLocation":"794:8:3","nodeType":"VariableDeclaration","scope":1009,"src":"788:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1004,"name":"bytes","nodeType":"ElementaryTypeName","src":"788:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1007,"indexed":false,"mutability":"mutable","name":"_reason","nameLocation":"810:7:3","nodeType":"VariableDeclaration","scope":1009,"src":"804:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1006,"name":"bytes","nodeType":"ElementaryTypeName","src":"804:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"733:85:3"},"src":"714:105:3"},{"anonymous":false,"eventSelector":"c264d91f3adc5588250e1551f547752ca0cfa8f6b530d243b9f9f4cab10ea8e5","id":1019,"name":"RetryMessageSuccess","nameLocation":"830:19:3","nodeType":"EventDefinition","parameters":{"id":1018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1011,"indexed":false,"mutability":"mutable","name":"_srcChainId","nameLocation":"857:11:3","nodeType":"VariableDeclaration","scope":1019,"src":"850:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1010,"name":"uint16","nodeType":"ElementaryTypeName","src":"850:6:3","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1013,"indexed":false,"mutability":"mutable","name":"_srcAddress","nameLocation":"876:11:3","nodeType":"VariableDeclaration","scope":1019,"src":"870:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1012,"name":"bytes","nodeType":"ElementaryTypeName","src":"870:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1015,"indexed":false,"mutability":"mutable","name":"_nonce","nameLocation":"896:6:3","nodeType":"VariableDeclaration","scope":1019,"src":"889:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1014,"name":"uint64","nodeType":"ElementaryTypeName","src":"889:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":1017,"indexed":false,"mutability":"mutable","name":"_payloadHash","nameLocation":"912:12:3","nodeType":"VariableDeclaration","scope":1019,"src":"904:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1016,"name":"bytes32","nodeType":"ElementaryTypeName","src":"904:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"849:76:3"},"src":"824:102:3"},{"baseFunctions":[573],"body":{"id":1067,"nodeType":"Block","src":"1161:416:3","statements":[{"assignments":[1032,1034],"declarations":[{"constant":false,"id":1032,"mutability":"mutable","name":"success","nameLocation":"1177:7:3","nodeType":"VariableDeclaration","scope":1067,"src":"1172:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1031,"name":"bool","nodeType":"ElementaryTypeName","src":"1172:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1034,"mutability":"mutable","name":"reason","nameLocation":"1199:6:3","nodeType":"VariableDeclaration","scope":1067,"src":"1186:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1033,"name":"bytes","nodeType":"ElementaryTypeName","src":"1186:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1054,"initialValue":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1040,"name":"gasleft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-7,"src":"1256:7:3","typeDescriptions":{"typeIdentifier":"t_function_gasleft_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":1041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1256:9:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"313530","id":1042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1279:3:3","typeDescriptions":{"typeIdentifier":"t_rational_150_by_1","typeString":"int_const 150"},"value":"150"},{"arguments":[{"expression":{"expression":{"id":1045,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1319:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_NonblockingLzApp_$1212","typeString":"contract NonblockingLzApp"}},"id":1046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1324:20:3","memberName":"nonblockingLzReceive","nodeType":"MemberAccess","referencedDeclaration":1132,"src":"1319:25:3","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint16_$_t_bytes_memory_ptr_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint16,bytes memory,uint64,bytes memory) external"}},"id":1047,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1345:8:3","memberName":"selector","nodeType":"MemberAccess","src":"1319:34:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1048,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1021,"src":"1355:11:3","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":1049,"name":"_srcAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1023,"src":"1368:11:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1050,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1025,"src":"1381:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":1051,"name":"_payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1027,"src":"1389:8:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1043,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1296:3:3","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1044,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1300:18:3","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1296:22:3","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1296:102:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_150_by_1","typeString":"int_const 150"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1037,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1217:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_NonblockingLzApp_$1212","typeString":"contract NonblockingLzApp"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_NonblockingLzApp_$1212","typeString":"contract NonblockingLzApp"}],"id":1036,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1209:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1035,"name":"address","nodeType":"ElementaryTypeName","src":"1209:7:3","typeDescriptions":{}}},"id":1038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1209:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1223:19:3","memberName":"excessivelySafeCall","nodeType":"MemberAccess","referencedDeclaration":372,"src":"1209:33:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint16_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$attached_to$_t_address_$","typeString":"function (address,uint256,uint16,bytes memory) returns (bool,bytes memory)"}},"id":1053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1209:199:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1171:237:3"},{"condition":{"id":1056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1465:8:3","subExpression":{"id":1055,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1032,"src":"1466:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1066,"nodeType":"IfStatement","src":"1461:110:3","trueBody":{"id":1065,"nodeType":"Block","src":"1475:96:3","statements":[{"expression":{"arguments":[{"id":1058,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1021,"src":"1509:11:3","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":1059,"name":"_srcAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1023,"src":"1522:11:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1060,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1025,"src":"1535:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":1061,"name":"_payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1027,"src":"1543:8:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1062,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1034,"src":"1553:6:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1057,"name":"_storeFailedMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1102,"src":"1489:19:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint16_$_t_bytes_memory_ptr_$_t_uint64_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint16,bytes memory,uint64,bytes memory,bytes memory)"}},"id":1063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1489:71:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1064,"nodeType":"ExpressionStatement","src":"1489:71:3"}]}}]},"id":1068,"implemented":true,"kind":"function","modifiers":[],"name":"_blockingLzReceive","nameLocation":"994:18:3","nodeType":"FunctionDefinition","overrides":{"id":1029,"nodeType":"OverrideSpecifier","overrides":[],"src":"1152:8:3"},"parameters":{"id":1028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1021,"mutability":"mutable","name":"_srcChainId","nameLocation":"1029:11:3","nodeType":"VariableDeclaration","scope":1068,"src":"1022:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1020,"name":"uint16","nodeType":"ElementaryTypeName","src":"1022:6:3","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1023,"mutability":"mutable","name":"_srcAddress","nameLocation":"1063:11:3","nodeType":"VariableDeclaration","scope":1068,"src":"1050:24:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1022,"name":"bytes","nodeType":"ElementaryTypeName","src":"1050:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1025,"mutability":"mutable","name":"_nonce","nameLocation":"1091:6:3","nodeType":"VariableDeclaration","scope":1068,"src":"1084:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1024,"name":"uint64","nodeType":"ElementaryTypeName","src":"1084:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":1027,"mutability":"mutable","name":"_payload","nameLocation":"1120:8:3","nodeType":"VariableDeclaration","scope":1068,"src":"1107:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1026,"name":"bytes","nodeType":"ElementaryTypeName","src":"1107:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1012:122:3"},"returnParameters":{"id":1030,"nodeType":"ParameterList","parameters":[],"src":"1161:0:3"},"scope":1212,"src":"985:592:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1101,"nodeType":"Block","src":"1781:168:3","statements":[{"expression":{"id":1091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"baseExpression":{"id":1081,"name":"failedMessages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":997,"src":"1791:14:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_mapping$_t_bytes_memory_ptr_$_t_mapping$_t_uint64_$_t_bytes32_$_$_$","typeString":"mapping(uint16 => mapping(bytes memory => mapping(uint64 => bytes32)))"}},"id":1085,"indexExpression":{"id":1082,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"1806:11:3","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1791:27:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes_memory_ptr_$_t_mapping$_t_uint64_$_t_bytes32_$_$","typeString":"mapping(bytes memory => mapping(uint64 => bytes32))"}},"id":1086,"indexExpression":{"id":1083,"name":"_srcAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"1819:11:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1791:40:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_bytes32_$","typeString":"mapping(uint64 => bytes32)"}},"id":1087,"indexExpression":{"id":1084,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1074,"src":"1832:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1791:48:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1089,"name":"_payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"1852:8:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1088,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1842:9:3","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1842:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1791:70:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1092,"nodeType":"ExpressionStatement","src":"1791:70:3"},{"eventCall":{"arguments":[{"id":1094,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"1890:11:3","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":1095,"name":"_srcAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"1903:11:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1096,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1074,"src":"1916:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":1097,"name":"_payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"1924:8:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1098,"name":"_reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1078,"src":"1934:7:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1093,"name":"MessageFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"1876:13:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint16_$_t_bytes_memory_ptr_$_t_uint64_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint16,bytes memory,uint64,bytes memory,bytes memory)"}},"id":1099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1876:66:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1100,"nodeType":"EmitStatement","src":"1871:71:3"}]},"id":1102,"implemented":true,"kind":"function","modifiers":[],"name":"_storeFailedMessage","nameLocation":"1592:19:3","nodeType":"FunctionDefinition","parameters":{"id":1079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1070,"mutability":"mutable","name":"_srcChainId","nameLocation":"1628:11:3","nodeType":"VariableDeclaration","scope":1102,"src":"1621:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1069,"name":"uint16","nodeType":"ElementaryTypeName","src":"1621:6:3","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1072,"mutability":"mutable","name":"_srcAddress","nameLocation":"1662:11:3","nodeType":"VariableDeclaration","scope":1102,"src":"1649:24:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1071,"name":"bytes","nodeType":"ElementaryTypeName","src":"1649:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1074,"mutability":"mutable","name":"_nonce","nameLocation":"1690:6:3","nodeType":"VariableDeclaration","scope":1102,"src":"1683:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1073,"name":"uint64","nodeType":"ElementaryTypeName","src":"1683:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":1076,"mutability":"mutable","name":"_payload","nameLocation":"1719:8:3","nodeType":"VariableDeclaration","scope":1102,"src":"1706:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1075,"name":"bytes","nodeType":"ElementaryTypeName","src":"1706:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1078,"mutability":"mutable","name":"_reason","nameLocation":"1750:7:3","nodeType":"VariableDeclaration","scope":1102,"src":"1737:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1077,"name":"bytes","nodeType":"ElementaryTypeName","src":"1737:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1611:152:3"},"returnParameters":{"id":1080,"nodeType":"ParameterList","parameters":[],"src":"1781:0:3"},"scope":1212,"src":"1583:366:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1131,"nodeType":"Block","src":"2126:209:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1114,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1527,"src":"2181:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2181:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":1118,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2205:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_NonblockingLzApp_$1212","typeString":"contract NonblockingLzApp"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_NonblockingLzApp_$1212","typeString":"contract NonblockingLzApp"}],"id":1117,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2197:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1116,"name":"address","nodeType":"ElementaryTypeName","src":"2197:7:3","typeDescriptions":{}}},"id":1119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2197:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2181:29:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f6e626c6f636b696e674c7a4170703a2063616c6c6572206d757374206265204c7a417070","id":1121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2212:40:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_040dbcd22d0c850129389688c2109073ca44dde7f3a3f87432ca92b23d42a4fa","typeString":"literal_string \"NonblockingLzApp: caller must be LzApp\""},"value":"NonblockingLzApp: caller must be LzApp"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_040dbcd22d0c850129389688c2109073ca44dde7f3a3f87432ca92b23d42a4fa","typeString":"literal_string \"NonblockingLzApp: caller must be LzApp\""}],"id":1113,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2173:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2173:80:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1123,"nodeType":"ExpressionStatement","src":"2173:80:3"},{"expression":{"arguments":[{"id":1125,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1104,"src":"2285:11:3","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":1126,"name":"_srcAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1106,"src":"2298:11:3","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":1127,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1108,"src":"2311:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":1128,"name":"_payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1110,"src":"2319:8:3","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":1124,"name":"_nonblockingLzReceive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1143,"src":"2263:21:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint16_$_t_bytes_memory_ptr_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint16,bytes memory,uint64,bytes memory)"}},"id":1129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2263:65:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1130,"nodeType":"ExpressionStatement","src":"2263:65:3"}]},"functionSelector":"66ad5c8a","id":1132,"implemented":true,"kind":"function","modifiers":[],"name":"nonblockingLzReceive","nameLocation":"1964:20:3","nodeType":"FunctionDefinition","parameters":{"id":1111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1104,"mutability":"mutable","name":"_srcChainId","nameLocation":"2001:11:3","nodeType":"VariableDeclaration","scope":1132,"src":"1994:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1103,"name":"uint16","nodeType":"ElementaryTypeName","src":"1994:6:3","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1106,"mutability":"mutable","name":"_srcAddress","nameLocation":"2037:11:3","nodeType":"VariableDeclaration","scope":1132,"src":"2022:26:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1105,"name":"bytes","nodeType":"ElementaryTypeName","src":"2022:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1108,"mutability":"mutable","name":"_nonce","nameLocation":"2065:6:3","nodeType":"VariableDeclaration","scope":1132,"src":"2058:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1107,"name":"uint64","nodeType":"ElementaryTypeName","src":"2058:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":1110,"mutability":"mutable","name":"_payload","nameLocation":"2096:8:3","nodeType":"VariableDeclaration","scope":1132,"src":"2081:23:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1109,"name":"bytes","nodeType":"ElementaryTypeName","src":"2081:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1984:126:3"},"returnParameters":{"id":1112,"nodeType":"ParameterList","parameters":[],"src":"2126:0:3"},"scope":1212,"src":"1955:380:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"id":1143,"implemented":false,"kind":"function","modifiers":[],"name":"_nonblockingLzReceive","nameLocation":"2387:21:3","nodeType":"FunctionDefinition","parameters":{"id":1141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1134,"mutability":"mutable","name":"_srcChainId","nameLocation":"2425:11:3","nodeType":"VariableDeclaration","scope":1143,"src":"2418:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1133,"name":"uint16","nodeType":"ElementaryTypeName","src":"2418:6:3","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1136,"mutability":"mutable","name":"_srcAddress","nameLocation":"2459:11:3","nodeType":"VariableDeclaration","scope":1143,"src":"2446:24:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1135,"name":"bytes","nodeType":"ElementaryTypeName","src":"2446:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1138,"mutability":"mutable","name":"_nonce","nameLocation":"2487:6:3","nodeType":"VariableDeclaration","scope":1143,"src":"2480:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1137,"name":"uint64","nodeType":"ElementaryTypeName","src":"2480:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":1140,"mutability":"mutable","name":"_payload","nameLocation":"2516:8:3","nodeType":"VariableDeclaration","scope":1143,"src":"2503:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1139,"name":"bytes","nodeType":"ElementaryTypeName","src":"2503:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2408:122:3"},"returnParameters":{"id":1142,"nodeType":"ParameterList","parameters":[],"src":"2547:0:3"},"scope":1212,"src":"2378:170:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1210,"nodeType":"Block","src":"2725:624:3","statements":[{"assignments":[1155],"declarations":[{"constant":false,"id":1155,"mutability":"mutable","name":"payloadHash","nameLocation":"2787:11:3","nodeType":"VariableDeclaration","scope":1210,"src":"2779:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1154,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2779:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1163,"initialValue":{"baseExpression":{"baseExpression":{"baseExpression":{"id":1156,"name":"failedMessages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":997,"src":"2801:14:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_mapping$_t_bytes_memory_ptr_$_t_mapping$_t_uint64_$_t_bytes32_$_$_$","typeString":"mapping(uint16 => mapping(bytes memory => mapping(uint64 => bytes32)))"}},"id":1158,"indexExpression":{"id":1157,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1145,"src":"2816:11:3","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2801:27:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes_memory_ptr_$_t_mapping$_t_uint64_$_t_bytes32_$_$","typeString":"mapping(bytes memory => mapping(uint64 => bytes32))"}},"id":1160,"indexExpression":{"id":1159,"name":"_srcAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1147,"src":"2829:11:3","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2801:40:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_bytes32_$","typeString":"mapping(uint64 => bytes32)"}},"id":1162,"indexExpression":{"id":1161,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"2842:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2801:48:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2779:70:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1165,"name":"payloadHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1155,"src":"2867:11:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2890:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1167,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2882:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1166,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2882:7:3","typeDescriptions":{}}},"id":1169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2882:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2867:25:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f6e626c6f636b696e674c7a4170703a206e6f2073746f726564206d657373616765","id":1171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2894:37:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_2f696afe693778252c14fa484dbc5c908ccf2058495ef32014aba88a3b963894","typeString":"literal_string \"NonblockingLzApp: no stored message\""},"value":"NonblockingLzApp: no stored message"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2f696afe693778252c14fa484dbc5c908ccf2058495ef32014aba88a3b963894","typeString":"literal_string \"NonblockingLzApp: no stored message\""}],"id":1164,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2859:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2859:73:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1173,"nodeType":"ExpressionStatement","src":"2859:73:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1176,"name":"_payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"2960:8:3","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":1175,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2950:9:3","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2950:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1178,"name":"payloadHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1155,"src":"2973:11:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2950:34:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f6e626c6f636b696e674c7a4170703a20696e76616c6964207061796c6f6164","id":1180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2986:35:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_e38e13663a917dea0c771faed9aebf77b2adba5435a5cc4f7207d4f2c63ce6a3","typeString":"literal_string \"NonblockingLzApp: invalid payload\""},"value":"NonblockingLzApp: invalid payload"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e38e13663a917dea0c771faed9aebf77b2adba5435a5cc4f7207d4f2c63ce6a3","typeString":"literal_string \"NonblockingLzApp: invalid payload\""}],"id":1174,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2942:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2942:80:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1182,"nodeType":"ExpressionStatement","src":"2942:80:3"},{"expression":{"id":1194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"baseExpression":{"id":1183,"name":"failedMessages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":997,"src":"3068:14:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_mapping$_t_bytes_memory_ptr_$_t_mapping$_t_uint64_$_t_bytes32_$_$_$","typeString":"mapping(uint16 => mapping(bytes memory => mapping(uint64 => bytes32)))"}},"id":1187,"indexExpression":{"id":1184,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1145,"src":"3083:11:3","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3068:27:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes_memory_ptr_$_t_mapping$_t_uint64_$_t_bytes32_$_$","typeString":"mapping(bytes memory => mapping(uint64 => bytes32))"}},"id":1188,"indexExpression":{"id":1185,"name":"_srcAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1147,"src":"3096:11:3","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3068:40:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_bytes32_$","typeString":"mapping(uint64 => bytes32)"}},"id":1189,"indexExpression":{"id":1186,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"3109:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3068:48:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":1192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3127:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1191,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3119:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1190,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3119:7:3","typeDescriptions":{}}},"id":1193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3119:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3068:61:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1195,"nodeType":"ExpressionStatement","src":"3068:61:3"},{"expression":{"arguments":[{"id":1197,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1145,"src":"3218:11:3","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":1198,"name":"_srcAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1147,"src":"3231:11:3","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":1199,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"3244:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":1200,"name":"_payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"3252:8:3","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":1196,"name":"_nonblockingLzReceive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1143,"src":"3196:21:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint16_$_t_bytes_memory_ptr_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint16,bytes memory,uint64,bytes memory)"}},"id":1201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3196:65:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1202,"nodeType":"ExpressionStatement","src":"3196:65:3"},{"eventCall":{"arguments":[{"id":1204,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1145,"src":"3296:11:3","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":1205,"name":"_srcAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1147,"src":"3309:11:3","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":1206,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"3322:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":1207,"name":"payloadHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1155,"src":"3330:11:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1203,"name":"RetryMessageSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"3276:19:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint16_$_t_bytes_memory_ptr_$_t_uint64_$_t_bytes32_$returns$__$","typeString":"function (uint16,bytes memory,uint64,bytes32)"}},"id":1208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3276:66:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1209,"nodeType":"EmitStatement","src":"3271:71:3"}]},"functionSelector":"d1deba1f","id":1211,"implemented":true,"kind":"function","modifiers":[],"name":"retryMessage","nameLocation":"2563:12:3","nodeType":"FunctionDefinition","parameters":{"id":1152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1145,"mutability":"mutable","name":"_srcChainId","nameLocation":"2592:11:3","nodeType":"VariableDeclaration","scope":1211,"src":"2585:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1144,"name":"uint16","nodeType":"ElementaryTypeName","src":"2585:6:3","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1147,"mutability":"mutable","name":"_srcAddress","nameLocation":"2628:11:3","nodeType":"VariableDeclaration","scope":1211,"src":"2613:26:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1146,"name":"bytes","nodeType":"ElementaryTypeName","src":"2613:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1149,"mutability":"mutable","name":"_nonce","nameLocation":"2656:6:3","nodeType":"VariableDeclaration","scope":1211,"src":"2649:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1148,"name":"uint64","nodeType":"ElementaryTypeName","src":"2649:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":1151,"mutability":"mutable","name":"_payload","nameLocation":"2687:8:3","nodeType":"VariableDeclaration","scope":1211,"src":"2672:23:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1150,"name":"bytes","nodeType":"ElementaryTypeName","src":"2672:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2575:126:3"},"returnParameters":{"id":1153,"nodeType":"ParameterList","parameters":[],"src":"2725:0:3"},"scope":1212,"src":"2554:795:3","stateMutability":"payable","virtual":true,"visibility":"public"}],"scope":1213,"src":"472:2879:3","usedErrors":[],"usedEvents":[471,477,483,491,1009,1019,1416]}],"src":"33:3319:3"},"id":3},"@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroEndpoint.sol":{"ast":{"absolutePath":"@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroEndpoint.sol","exportedSymbols":{"ILayerZeroEndpoint":[1357],"ILayerZeroUserApplicationConfig":[1402]},"id":1358,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1214,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"33:24:4"},{"absolutePath":"@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroUserApplicationConfig.sol","file":"./ILayerZeroUserApplicationConfig.sol","id":1215,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1358,"sourceUnit":1403,"src":"59:47:4","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1216,"name":"ILayerZeroUserApplicationConfig","nameLocations":["140:31:4"],"nodeType":"IdentifierPath","referencedDeclaration":1402,"src":"140:31:4"},"id":1217,"nodeType":"InheritanceSpecifier","src":"140:31:4"}],"canonicalName":"ILayerZeroEndpoint","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1357,"linearizedBaseContracts":[1357,1402],"name":"ILayerZeroEndpoint","nameLocation":"118:18:4","nodeType":"ContractDefinition","nodes":[{"functionSelector":"c5803100","id":1232,"implemented":false,"kind":"function","modifiers":[],"name":"send","nameLocation":"923:4:4","nodeType":"FunctionDefinition","parameters":{"id":1230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1219,"mutability":"mutable","name":"_dstChainId","nameLocation":"944:11:4","nodeType":"VariableDeclaration","scope":1232,"src":"937:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1218,"name":"uint16","nodeType":"ElementaryTypeName","src":"937:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1221,"mutability":"mutable","name":"_destination","nameLocation":"980:12:4","nodeType":"VariableDeclaration","scope":1232,"src":"965:27:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1220,"name":"bytes","nodeType":"ElementaryTypeName","src":"965:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1223,"mutability":"mutable","name":"_payload","nameLocation":"1017:8:4","nodeType":"VariableDeclaration","scope":1232,"src":"1002:23:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1222,"name":"bytes","nodeType":"ElementaryTypeName","src":"1002:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1225,"mutability":"mutable","name":"_refundAddress","nameLocation":"1051:14:4","nodeType":"VariableDeclaration","scope":1232,"src":"1035:30:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1224,"name":"address","nodeType":"ElementaryTypeName","src":"1035:15:4","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1227,"mutability":"mutable","name":"_zroPaymentAddress","nameLocation":"1083:18:4","nodeType":"VariableDeclaration","scope":1232,"src":"1075:26:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1226,"name":"address","nodeType":"ElementaryTypeName","src":"1075:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1229,"mutability":"mutable","name":"_adapterParams","nameLocation":"1126:14:4","nodeType":"VariableDeclaration","scope":1232,"src":"1111:29:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1228,"name":"bytes","nodeType":"ElementaryTypeName","src":"1111:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"927:219:4"},"returnParameters":{"id":1231,"nodeType":"ParameterList","parameters":[],"src":"1163:0:4"},"scope":1357,"src":"914:250:4","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"c2fa4813","id":1247,"implemented":false,"kind":"function","modifiers":[],"name":"receivePayload","nameLocation":"1656:14:4","nodeType":"FunctionDefinition","parameters":{"id":1245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1234,"mutability":"mutable","name":"_srcChainId","nameLocation":"1687:11:4","nodeType":"VariableDeclaration","scope":1247,"src":"1680:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1233,"name":"uint16","nodeType":"ElementaryTypeName","src":"1680:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1236,"mutability":"mutable","name":"_srcAddress","nameLocation":"1723:11:4","nodeType":"VariableDeclaration","scope":1247,"src":"1708:26:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1235,"name":"bytes","nodeType":"ElementaryTypeName","src":"1708:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1238,"mutability":"mutable","name":"_dstAddress","nameLocation":"1752:11:4","nodeType":"VariableDeclaration","scope":1247,"src":"1744:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1237,"name":"address","nodeType":"ElementaryTypeName","src":"1744:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1240,"mutability":"mutable","name":"_nonce","nameLocation":"1780:6:4","nodeType":"VariableDeclaration","scope":1247,"src":"1773:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1239,"name":"uint64","nodeType":"ElementaryTypeName","src":"1773:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":1242,"mutability":"mutable","name":"_gasLimit","nameLocation":"1801:9:4","nodeType":"VariableDeclaration","scope":1247,"src":"1796:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1241,"name":"uint","nodeType":"ElementaryTypeName","src":"1796:4:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1244,"mutability":"mutable","name":"_payload","nameLocation":"1835:8:4","nodeType":"VariableDeclaration","scope":1247,"src":"1820:23:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1243,"name":"bytes","nodeType":"ElementaryTypeName","src":"1820:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1670:179:4"},"returnParameters":{"id":1246,"nodeType":"ParameterList","parameters":[],"src":"1858:0:4"},"scope":1357,"src":"1647:212:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"fdc07c70","id":1256,"implemented":false,"kind":"function","modifiers":[],"name":"getInboundNonce","nameLocation":"2095:15:4","nodeType":"FunctionDefinition","parameters":{"id":1252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1249,"mutability":"mutable","name":"_srcChainId","nameLocation":"2118:11:4","nodeType":"VariableDeclaration","scope":1256,"src":"2111:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1248,"name":"uint16","nodeType":"ElementaryTypeName","src":"2111:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1251,"mutability":"mutable","name":"_srcAddress","nameLocation":"2146:11:4","nodeType":"VariableDeclaration","scope":1256,"src":"2131:26:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1250,"name":"bytes","nodeType":"ElementaryTypeName","src":"2131:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2110:48:4"},"returnParameters":{"id":1255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1254,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1256,"src":"2182:6:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1253,"name":"uint64","nodeType":"ElementaryTypeName","src":"2182:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"2181:8:4"},"scope":1357,"src":"2086:104:4","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"7a145748","id":1265,"implemented":false,"kind":"function","modifiers":[],"name":"getOutboundNonce","nameLocation":"2365:16:4","nodeType":"FunctionDefinition","parameters":{"id":1261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1258,"mutability":"mutable","name":"_dstChainId","nameLocation":"2389:11:4","nodeType":"VariableDeclaration","scope":1265,"src":"2382:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1257,"name":"uint16","nodeType":"ElementaryTypeName","src":"2382:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1260,"mutability":"mutable","name":"_srcAddress","nameLocation":"2410:11:4","nodeType":"VariableDeclaration","scope":1265,"src":"2402:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1259,"name":"address","nodeType":"ElementaryTypeName","src":"2402:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2381:41:4"},"returnParameters":{"id":1264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1263,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1265,"src":"2446:6:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1262,"name":"uint64","nodeType":"ElementaryTypeName","src":"2446:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"2445:8:4"},"scope":1357,"src":"2356:98:4","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"40a7bb10","id":1282,"implemented":false,"kind":"function","modifiers":[],"name":"estimateFees","nameLocation":"2977:12:4","nodeType":"FunctionDefinition","parameters":{"id":1276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1267,"mutability":"mutable","name":"_dstChainId","nameLocation":"3006:11:4","nodeType":"VariableDeclaration","scope":1282,"src":"2999:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1266,"name":"uint16","nodeType":"ElementaryTypeName","src":"2999:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1269,"mutability":"mutable","name":"_userApplication","nameLocation":"3035:16:4","nodeType":"VariableDeclaration","scope":1282,"src":"3027:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1268,"name":"address","nodeType":"ElementaryTypeName","src":"3027:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1271,"mutability":"mutable","name":"_payload","nameLocation":"3076:8:4","nodeType":"VariableDeclaration","scope":1282,"src":"3061:23:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1270,"name":"bytes","nodeType":"ElementaryTypeName","src":"3061:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1273,"mutability":"mutable","name":"_payInZRO","nameLocation":"3099:9:4","nodeType":"VariableDeclaration","scope":1282,"src":"3094:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1272,"name":"bool","nodeType":"ElementaryTypeName","src":"3094:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1275,"mutability":"mutable","name":"_adapterParam","nameLocation":"3133:13:4","nodeType":"VariableDeclaration","scope":1282,"src":"3118:28:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1274,"name":"bytes","nodeType":"ElementaryTypeName","src":"3118:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2989:163:4"},"returnParameters":{"id":1281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1278,"mutability":"mutable","name":"nativeFee","nameLocation":"3181:9:4","nodeType":"VariableDeclaration","scope":1282,"src":"3176:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1277,"name":"uint","nodeType":"ElementaryTypeName","src":"3176:4:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1280,"mutability":"mutable","name":"zroFee","nameLocation":"3197:6:4","nodeType":"VariableDeclaration","scope":1282,"src":"3192:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1279,"name":"uint","nodeType":"ElementaryTypeName","src":"3192:4:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3175:29:4"},"scope":1357,"src":"2968:237:4","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"3408e470","id":1287,"implemented":false,"kind":"function","modifiers":[],"name":"getChainId","nameLocation":"3283:10:4","nodeType":"FunctionDefinition","parameters":{"id":1283,"nodeType":"ParameterList","parameters":[],"src":"3293:2:4"},"returnParameters":{"id":1286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1285,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1287,"src":"3319:6:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1284,"name":"uint16","nodeType":"ElementaryTypeName","src":"3319:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"3318:8:4"},"scope":1357,"src":"3274:53:4","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"aaff5f16","id":1296,"implemented":false,"kind":"function","modifiers":[],"name":"retryPayload","nameLocation":"3593:12:4","nodeType":"FunctionDefinition","parameters":{"id":1294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1289,"mutability":"mutable","name":"_srcChainId","nameLocation":"3622:11:4","nodeType":"VariableDeclaration","scope":1296,"src":"3615:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1288,"name":"uint16","nodeType":"ElementaryTypeName","src":"3615:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1291,"mutability":"mutable","name":"_srcAddress","nameLocation":"3658:11:4","nodeType":"VariableDeclaration","scope":1296,"src":"3643:26:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1290,"name":"bytes","nodeType":"ElementaryTypeName","src":"3643:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1293,"mutability":"mutable","name":"_payload","nameLocation":"3694:8:4","nodeType":"VariableDeclaration","scope":1296,"src":"3679:23:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1292,"name":"bytes","nodeType":"ElementaryTypeName","src":"3679:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3605:103:4"},"returnParameters":{"id":1295,"nodeType":"ParameterList","parameters":[],"src":"3717:0:4"},"scope":1357,"src":"3584:134:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"0eaf6ea6","id":1305,"implemented":false,"kind":"function","modifiers":[],"name":"hasStoredPayload","nameLocation":"3930:16:4","nodeType":"FunctionDefinition","parameters":{"id":1301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1298,"mutability":"mutable","name":"_srcChainId","nameLocation":"3954:11:4","nodeType":"VariableDeclaration","scope":1305,"src":"3947:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1297,"name":"uint16","nodeType":"ElementaryTypeName","src":"3947:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1300,"mutability":"mutable","name":"_srcAddress","nameLocation":"3982:11:4","nodeType":"VariableDeclaration","scope":1305,"src":"3967:26:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1299,"name":"bytes","nodeType":"ElementaryTypeName","src":"3967:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3946:48:4"},"returnParameters":{"id":1304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1303,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1305,"src":"4018:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1302,"name":"bool","nodeType":"ElementaryTypeName","src":"4018:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4017:6:4"},"scope":1357,"src":"3921:103:4","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"9c729da1","id":1312,"implemented":false,"kind":"function","modifiers":[],"name":"getSendLibraryAddress","nameLocation":"4182:21:4","nodeType":"FunctionDefinition","parameters":{"id":1308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1307,"mutability":"mutable","name":"_userApplication","nameLocation":"4212:16:4","nodeType":"VariableDeclaration","scope":1312,"src":"4204:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1306,"name":"address","nodeType":"ElementaryTypeName","src":"4204:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4203:26:4"},"returnParameters":{"id":1311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1310,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1312,"src":"4253:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1309,"name":"address","nodeType":"ElementaryTypeName","src":"4253:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4252:9:4"},"scope":1357,"src":"4173:89:4","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"71ba2fd6","id":1319,"implemented":false,"kind":"function","modifiers":[],"name":"getReceiveLibraryAddress","nameLocation":"4422:24:4","nodeType":"FunctionDefinition","parameters":{"id":1315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1314,"mutability":"mutable","name":"_userApplication","nameLocation":"4455:16:4","nodeType":"VariableDeclaration","scope":1319,"src":"4447:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1313,"name":"address","nodeType":"ElementaryTypeName","src":"4447:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4446:26:4"},"returnParameters":{"id":1318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1317,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1319,"src":"4496:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1316,"name":"address","nodeType":"ElementaryTypeName","src":"4496:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4495:9:4"},"scope":1357,"src":"4413:92:4","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"e97a448a","id":1324,"implemented":false,"kind":"function","modifiers":[],"name":"isSendingPayload","nameLocation":"4642:16:4","nodeType":"FunctionDefinition","parameters":{"id":1320,"nodeType":"ParameterList","parameters":[],"src":"4658:2:4"},"returnParameters":{"id":1323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1322,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1324,"src":"4684:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1321,"name":"bool","nodeType":"ElementaryTypeName","src":"4684:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4683:6:4"},"scope":1357,"src":"4633:57:4","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"ca066b35","id":1329,"implemented":false,"kind":"function","modifiers":[],"name":"isReceivingPayload","nameLocation":"4830:18:4","nodeType":"FunctionDefinition","parameters":{"id":1325,"nodeType":"ParameterList","parameters":[],"src":"4848:2:4"},"returnParameters":{"id":1328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1327,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1329,"src":"4874:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1326,"name":"bool","nodeType":"ElementaryTypeName","src":"4874:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4873:6:4"},"scope":1357,"src":"4821:59:4","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"f5ecbdbc","id":1342,"implemented":false,"kind":"function","modifiers":[],"name":"getConfig","nameLocation":"5287:9:4","nodeType":"FunctionDefinition","parameters":{"id":1338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1331,"mutability":"mutable","name":"_version","nameLocation":"5313:8:4","nodeType":"VariableDeclaration","scope":1342,"src":"5306:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1330,"name":"uint16","nodeType":"ElementaryTypeName","src":"5306:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1333,"mutability":"mutable","name":"_chainId","nameLocation":"5338:8:4","nodeType":"VariableDeclaration","scope":1342,"src":"5331:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1332,"name":"uint16","nodeType":"ElementaryTypeName","src":"5331:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1335,"mutability":"mutable","name":"_userApplication","nameLocation":"5364:16:4","nodeType":"VariableDeclaration","scope":1342,"src":"5356:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1334,"name":"address","nodeType":"ElementaryTypeName","src":"5356:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1337,"mutability":"mutable","name":"_configType","nameLocation":"5395:11:4","nodeType":"VariableDeclaration","scope":1342,"src":"5390:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1336,"name":"uint","nodeType":"ElementaryTypeName","src":"5390:4:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5296:116:4"},"returnParameters":{"id":1341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1340,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1342,"src":"5436:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1339,"name":"bytes","nodeType":"ElementaryTypeName","src":"5436:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5435:14:4"},"scope":1357,"src":"5278:172:4","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"096568f6","id":1349,"implemented":false,"kind":"function","modifiers":[],"name":"getSendVersion","nameLocation":"5609:14:4","nodeType":"FunctionDefinition","parameters":{"id":1345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1344,"mutability":"mutable","name":"_userApplication","nameLocation":"5632:16:4","nodeType":"VariableDeclaration","scope":1349,"src":"5624:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1343,"name":"address","nodeType":"ElementaryTypeName","src":"5624:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5623:26:4"},"returnParameters":{"id":1348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1347,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1349,"src":"5673:6:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1346,"name":"uint16","nodeType":"ElementaryTypeName","src":"5673:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"5672:8:4"},"scope":1357,"src":"5600:81:4","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"da1a7c9a","id":1356,"implemented":false,"kind":"function","modifiers":[],"name":"getReceiveVersion","nameLocation":"5845:17:4","nodeType":"FunctionDefinition","parameters":{"id":1352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1351,"mutability":"mutable","name":"_userApplication","nameLocation":"5871:16:4","nodeType":"VariableDeclaration","scope":1356,"src":"5863:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1350,"name":"address","nodeType":"ElementaryTypeName","src":"5863:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5862:26:4"},"returnParameters":{"id":1355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1354,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1356,"src":"5912:6:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1353,"name":"uint16","nodeType":"ElementaryTypeName","src":"5912:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"5911:8:4"},"scope":1357,"src":"5836:84:4","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1358,"src":"108:5814:4","usedErrors":[],"usedEvents":[]}],"src":"33:5890:4"},"id":4},"@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroReceiver.sol":{"ast":{"absolutePath":"@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroReceiver.sol","exportedSymbols":{"ILayerZeroReceiver":[1371]},"id":1372,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1359,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"33:24:5"},{"abstract":false,"baseContracts":[],"canonicalName":"ILayerZeroReceiver","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1371,"linearizedBaseContracts":[1371],"name":"ILayerZeroReceiver","nameLocation":"69:18:5","nodeType":"ContractDefinition","nodes":[{"functionSelector":"001d3567","id":1370,"implemented":false,"kind":"function","modifiers":[],"name":"lzReceive","nameLocation":"482:9:5","nodeType":"FunctionDefinition","parameters":{"id":1368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1361,"mutability":"mutable","name":"_srcChainId","nameLocation":"508:11:5","nodeType":"VariableDeclaration","scope":1370,"src":"501:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1360,"name":"uint16","nodeType":"ElementaryTypeName","src":"501:6:5","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1363,"mutability":"mutable","name":"_srcAddress","nameLocation":"544:11:5","nodeType":"VariableDeclaration","scope":1370,"src":"529:26:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1362,"name":"bytes","nodeType":"ElementaryTypeName","src":"529:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1365,"mutability":"mutable","name":"_nonce","nameLocation":"572:6:5","nodeType":"VariableDeclaration","scope":1370,"src":"565:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1364,"name":"uint64","nodeType":"ElementaryTypeName","src":"565:6:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":1367,"mutability":"mutable","name":"_payload","nameLocation":"603:8:5","nodeType":"VariableDeclaration","scope":1370,"src":"588:23:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1366,"name":"bytes","nodeType":"ElementaryTypeName","src":"588:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"491:126:5"},"returnParameters":{"id":1369,"nodeType":"ParameterList","parameters":[],"src":"626:0:5"},"scope":1371,"src":"473:154:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1372,"src":"59:570:5","usedErrors":[],"usedEvents":[]}],"src":"33:597:5"},"id":5},"@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroUserApplicationConfig.sol":{"ast":{"absolutePath":"@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroUserApplicationConfig.sol","exportedSymbols":{"ILayerZeroUserApplicationConfig":[1402]},"id":1403,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1373,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"33:24:6"},{"abstract":false,"baseContracts":[],"canonicalName":"ILayerZeroUserApplicationConfig","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1402,"linearizedBaseContracts":[1402],"name":"ILayerZeroUserApplicationConfig","nameLocation":"69:31:6","nodeType":"ContractDefinition","nodes":[{"functionSelector":"cbed8b9c","id":1384,"implemented":false,"kind":"function","modifiers":[],"name":"setConfig","nameLocation":"512:9:6","nodeType":"FunctionDefinition","parameters":{"id":1382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1375,"mutability":"mutable","name":"_version","nameLocation":"538:8:6","nodeType":"VariableDeclaration","scope":1384,"src":"531:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1374,"name":"uint16","nodeType":"ElementaryTypeName","src":"531:6:6","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1377,"mutability":"mutable","name":"_chainId","nameLocation":"563:8:6","nodeType":"VariableDeclaration","scope":1384,"src":"556:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1376,"name":"uint16","nodeType":"ElementaryTypeName","src":"556:6:6","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1379,"mutability":"mutable","name":"_configType","nameLocation":"586:11:6","nodeType":"VariableDeclaration","scope":1384,"src":"581:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1378,"name":"uint","nodeType":"ElementaryTypeName","src":"581:4:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1381,"mutability":"mutable","name":"_config","nameLocation":"622:7:6","nodeType":"VariableDeclaration","scope":1384,"src":"607:22:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1380,"name":"bytes","nodeType":"ElementaryTypeName","src":"607:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"521:114:6"},"returnParameters":{"id":1383,"nodeType":"ParameterList","parameters":[],"src":"644:0:6"},"scope":1402,"src":"503:142:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"07e0db17","id":1389,"implemented":false,"kind":"function","modifiers":[],"name":"setSendVersion","nameLocation":"793:14:6","nodeType":"FunctionDefinition","parameters":{"id":1387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1386,"mutability":"mutable","name":"_version","nameLocation":"815:8:6","nodeType":"VariableDeclaration","scope":1389,"src":"808:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1385,"name":"uint16","nodeType":"ElementaryTypeName","src":"808:6:6","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"807:17:6"},"returnParameters":{"id":1388,"nodeType":"ParameterList","parameters":[],"src":"833:0:6"},"scope":1402,"src":"784:50:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"10ddb137","id":1394,"implemented":false,"kind":"function","modifiers":[],"name":"setReceiveVersion","nameLocation":"987:17:6","nodeType":"FunctionDefinition","parameters":{"id":1392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1391,"mutability":"mutable","name":"_version","nameLocation":"1012:8:6","nodeType":"VariableDeclaration","scope":1394,"src":"1005:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1390,"name":"uint16","nodeType":"ElementaryTypeName","src":"1005:6:6","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"1004:17:6"},"returnParameters":{"id":1393,"nodeType":"ParameterList","parameters":[],"src":"1030:0:6"},"scope":1402,"src":"978:53:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"42d65a8d","id":1401,"implemented":false,"kind":"function","modifiers":[],"name":"forceResumeReceive","nameLocation":"1309:18:6","nodeType":"FunctionDefinition","parameters":{"id":1399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1396,"mutability":"mutable","name":"_srcChainId","nameLocation":"1335:11:6","nodeType":"VariableDeclaration","scope":1401,"src":"1328:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1395,"name":"uint16","nodeType":"ElementaryTypeName","src":"1328:6:6","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1398,"mutability":"mutable","name":"_srcAddress","nameLocation":"1363:11:6","nodeType":"VariableDeclaration","scope":1401,"src":"1348:26:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1397,"name":"bytes","nodeType":"ElementaryTypeName","src":"1348:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1327:48:6"},"returnParameters":{"id":1400,"nodeType":"ParameterList","parameters":[],"src":"1384:0:6"},"scope":1402,"src":"1300:85:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1403,"src":"59:1328:6","usedErrors":[],"usedEvents":[]}],"src":"33:1355:6"},"id":6},"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[1537],"Ownable":[1515]},"id":1516,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1404,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:7"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":1405,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1516,"sourceUnit":1538,"src":"127:30:7","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1407,"name":"Context","nameLocations":["683:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":1537,"src":"683:7:7"},"id":1408,"nodeType":"InheritanceSpecifier","src":"683:7:7"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1406,"nodeType":"StructuredDocumentation","src":"159:494:7","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":1515,"linearizedBaseContracts":[1515,1537],"name":"Ownable","nameLocation":"672:7:7","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1410,"mutability":"mutable","name":"_owner","nameLocation":"713:6:7","nodeType":"VariableDeclaration","scope":1515,"src":"697:22:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1409,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":1416,"name":"OwnershipTransferred","nameLocation":"732:20:7","nodeType":"EventDefinition","parameters":{"id":1415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1412,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"769:13:7","nodeType":"VariableDeclaration","scope":1416,"src":"753:29:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1411,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1414,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"800:8:7","nodeType":"VariableDeclaration","scope":1416,"src":"784:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1413,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:57:7"},"src":"726:84:7"},{"body":{"id":1425,"nodeType":"Block","src":"926:49:7","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1421,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1527,"src":"955:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"955:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1420,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1514,"src":"936:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"936:32:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1424,"nodeType":"ExpressionStatement","src":"936:32:7"}]},"documentation":{"id":1417,"nodeType":"StructuredDocumentation","src":"816:91:7","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":1426,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1418,"nodeType":"ParameterList","parameters":[],"src":"923:2:7"},"returnParameters":{"id":1419,"nodeType":"ParameterList","parameters":[],"src":"926:0:7"},"scope":1515,"src":"912:63:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1433,"nodeType":"Block","src":"1084:41:7","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1429,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1457,"src":"1094:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":1430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1094:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1431,"nodeType":"ExpressionStatement","src":"1094:13:7"},{"id":1432,"nodeType":"PlaceholderStatement","src":"1117:1:7"}]},"documentation":{"id":1427,"nodeType":"StructuredDocumentation","src":"981:77:7","text":" @dev Throws if called by any account other than the owner."},"id":1434,"name":"onlyOwner","nameLocation":"1072:9:7","nodeType":"ModifierDefinition","parameters":{"id":1428,"nodeType":"ParameterList","parameters":[],"src":"1081:2:7"},"src":"1063:62:7","virtual":false,"visibility":"internal"},{"body":{"id":1442,"nodeType":"Block","src":"1256:30:7","statements":[{"expression":{"id":1440,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1410,"src":"1273:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1439,"id":1441,"nodeType":"Return","src":"1266:13:7"}]},"documentation":{"id":1435,"nodeType":"StructuredDocumentation","src":"1131:65:7","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":1443,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1210:5:7","nodeType":"FunctionDefinition","parameters":{"id":1436,"nodeType":"ParameterList","parameters":[],"src":"1215:2:7"},"returnParameters":{"id":1439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1438,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1443,"src":"1247:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1437,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1246:9:7"},"scope":1515,"src":"1201:85:7","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1456,"nodeType":"Block","src":"1404:85:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1448,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1443,"src":"1422:5:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1422:7:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1450,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1527,"src":"1433:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1433:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1422:23:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":1453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1447:34:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":1447,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1414:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1414:68:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1455,"nodeType":"ExpressionStatement","src":"1414:68:7"}]},"documentation":{"id":1444,"nodeType":"StructuredDocumentation","src":"1292:62:7","text":" @dev Throws if the sender is not the owner."},"id":1457,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1368:11:7","nodeType":"FunctionDefinition","parameters":{"id":1445,"nodeType":"ParameterList","parameters":[],"src":"1379:2:7"},"returnParameters":{"id":1446,"nodeType":"ParameterList","parameters":[],"src":"1404:0:7"},"scope":1515,"src":"1359:130:7","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1470,"nodeType":"Block","src":"1878:47:7","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1915:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1465,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1907:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1464,"name":"address","nodeType":"ElementaryTypeName","src":"1907:7:7","typeDescriptions":{}}},"id":1467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1907:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1463,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1514,"src":"1888:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1888:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1469,"nodeType":"ExpressionStatement","src":"1888:30:7"}]},"documentation":{"id":1458,"nodeType":"StructuredDocumentation","src":"1495:324:7","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":1471,"implemented":true,"kind":"function","modifiers":[{"id":1461,"kind":"modifierInvocation","modifierName":{"id":1460,"name":"onlyOwner","nameLocations":["1868:9:7"],"nodeType":"IdentifierPath","referencedDeclaration":1434,"src":"1868:9:7"},"nodeType":"ModifierInvocation","src":"1868:9:7"}],"name":"renounceOwnership","nameLocation":"1833:17:7","nodeType":"FunctionDefinition","parameters":{"id":1459,"nodeType":"ParameterList","parameters":[],"src":"1850:2:7"},"returnParameters":{"id":1462,"nodeType":"ParameterList","parameters":[],"src":"1878:0:7"},"scope":1515,"src":"1824:101:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1493,"nodeType":"Block","src":"2144:128:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1480,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1474,"src":"2162:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2182:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1482,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2174:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1481,"name":"address","nodeType":"ElementaryTypeName","src":"2174:7:7","typeDescriptions":{}}},"id":1484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2174:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2162:22:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":1486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2186:40:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":1479,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2154:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2154:73:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1488,"nodeType":"ExpressionStatement","src":"2154:73:7"},{"expression":{"arguments":[{"id":1490,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1474,"src":"2256:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1489,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1514,"src":"2237:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2237:28:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1492,"nodeType":"ExpressionStatement","src":"2237:28:7"}]},"documentation":{"id":1472,"nodeType":"StructuredDocumentation","src":"1931:138:7","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":1494,"implemented":true,"kind":"function","modifiers":[{"id":1477,"kind":"modifierInvocation","modifierName":{"id":1476,"name":"onlyOwner","nameLocations":["2134:9:7"],"nodeType":"IdentifierPath","referencedDeclaration":1434,"src":"2134:9:7"},"nodeType":"ModifierInvocation","src":"2134:9:7"}],"name":"transferOwnership","nameLocation":"2083:17:7","nodeType":"FunctionDefinition","parameters":{"id":1475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1474,"mutability":"mutable","name":"newOwner","nameLocation":"2109:8:7","nodeType":"VariableDeclaration","scope":1494,"src":"2101:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1473,"name":"address","nodeType":"ElementaryTypeName","src":"2101:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2100:18:7"},"returnParameters":{"id":1478,"nodeType":"ParameterList","parameters":[],"src":"2144:0:7"},"scope":1515,"src":"2074:198:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1513,"nodeType":"Block","src":"2489:124:7","statements":[{"assignments":[1501],"declarations":[{"constant":false,"id":1501,"mutability":"mutable","name":"oldOwner","nameLocation":"2507:8:7","nodeType":"VariableDeclaration","scope":1513,"src":"2499:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1500,"name":"address","nodeType":"ElementaryTypeName","src":"2499:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1503,"initialValue":{"id":1502,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1410,"src":"2518:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2499:25:7"},{"expression":{"id":1506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1504,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1410,"src":"2534:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1505,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1497,"src":"2543:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2534:17:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1507,"nodeType":"ExpressionStatement","src":"2534:17:7"},{"eventCall":{"arguments":[{"id":1509,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1501,"src":"2587:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1510,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1497,"src":"2597:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1508,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1416,"src":"2566:20:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":1511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2566:40:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1512,"nodeType":"EmitStatement","src":"2561:45:7"}]},"documentation":{"id":1495,"nodeType":"StructuredDocumentation","src":"2278:143:7","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":1514,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2435:18:7","nodeType":"FunctionDefinition","parameters":{"id":1498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1497,"mutability":"mutable","name":"newOwner","nameLocation":"2462:8:7","nodeType":"VariableDeclaration","scope":1514,"src":"2454:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1496,"name":"address","nodeType":"ElementaryTypeName","src":"2454:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2453:18:7"},"returnParameters":{"id":1499,"nodeType":"ParameterList","parameters":[],"src":"2489:0:7"},"scope":1515,"src":"2426:187:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1516,"src":"654:1961:7","usedErrors":[],"usedEvents":[1416]}],"src":"102:2514:7"},"id":7},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1537]},"id":1538,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1517,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:8"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":1518,"nodeType":"StructuredDocumentation","src":"111:496:8","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1537,"linearizedBaseContracts":[1537],"name":"Context","nameLocation":"626:7:8","nodeType":"ContractDefinition","nodes":[{"body":{"id":1526,"nodeType":"Block","src":"702:34:8","statements":[{"expression":{"expression":{"id":1523,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"723:6:8","memberName":"sender","nodeType":"MemberAccess","src":"719:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1522,"id":1525,"nodeType":"Return","src":"712:17:8"}]},"id":1527,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:8","nodeType":"FunctionDefinition","parameters":{"id":1519,"nodeType":"ParameterList","parameters":[],"src":"659:2:8"},"returnParameters":{"id":1522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1521,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1527,"src":"693:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1520,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:8"},"scope":1537,"src":"640:96:8","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1535,"nodeType":"Block","src":"809:32:8","statements":[{"expression":{"expression":{"id":1532,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"830:4:8","memberName":"data","nodeType":"MemberAccess","src":"826:8:8","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1531,"id":1534,"nodeType":"Return","src":"819:15:8"}]},"id":1536,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:8","nodeType":"FunctionDefinition","parameters":{"id":1528,"nodeType":"ParameterList","parameters":[],"src":"759:2:8"},"returnParameters":{"id":1531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1530,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1536,"src":"793:14:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1529,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:8"},"scope":1537,"src":"742:99:8","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1538,"src":"608:235:8","usedErrors":[],"usedEvents":[]}],"src":"86:758:8"},"id":8},"contracts/LayerZeroTest.sol":{"ast":{"absolutePath":"contracts/LayerZeroTest.sol","exportedSymbols":{"BytesLib":[332],"Context":[1537],"ExcessivelySafeCall":[429],"ILayerZeroEndpoint":[1357],"ILayerZeroReceiver":[1371],"ILayerZeroUserApplicationConfig":[1402],"LayerZeroTest":[1650],"LzApp":[971],"NonblockingLzApp":[1212],"Ownable":[1515]},"id":1651,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1539,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"33:24:9"},{"absolutePath":"@layerzerolabs/solidity-examples/contracts/lzApp/NonblockingLzApp.sol","file":"@layerzerolabs/solidity-examples/contracts/lzApp/NonblockingLzApp.sol","id":1540,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1651,"sourceUnit":1213,"src":"61:79:9","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1541,"name":"NonblockingLzApp","nameLocations":["433:16:9"],"nodeType":"IdentifierPath","referencedDeclaration":1212,"src":"433:16:9"},"id":1542,"nodeType":"InheritanceSpecifier","src":"433:16:9"}],"canonicalName":"LayerZeroTest","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1650,"linearizedBaseContracts":[1650,1212,971,1402,1371,1515,1537],"name":"LayerZeroTest","nameLocation":"416:13:9","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"73d4a13a","id":1545,"mutability":"mutable","name":"data","nameLocation":"471:4:9","nodeType":"VariableDeclaration","scope":1650,"src":"457:43:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1543,"name":"string","nodeType":"ElementaryTypeName","src":"457:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"4e6f7468696e6720726563656976656420796574","id":1544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"478:22:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_f324ae8c96aaabd8b3d916f154deafc34f8dfa978a3f72051c324727f0a37915","typeString":"literal_string \"Nothing received yet\""},"value":"Nothing received yet"},"visibility":"public"},{"constant":false,"id":1547,"mutability":"mutable","name":"destChainId","nameLocation":"514:11:9","nodeType":"VariableDeclaration","scope":1650,"src":"507:18:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1546,"name":"uint16","nodeType":"ElementaryTypeName","src":"507:6:9","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"body":{"id":1571,"nodeType":"Block","src":"601:386:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1555,"name":"_lzEndpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"616:11:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"307836466362393735353344343135313643623232386163303346644338423961306139646630344131","id":1556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"631:42:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x6Fcb97553D41516Cb228ac03FdC8B9a0a9df04A1"},"src":"616:57:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1562,"nodeType":"IfStatement","src":"612:82:9","trueBody":{"expression":{"id":1560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1558,"name":"destChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1547,"src":"675:11:9","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"3130313132","id":1559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"689:5:9","typeDescriptions":{"typeIdentifier":"t_rational_10112_by_1","typeString":"int_const 10112"},"value":"10112"},"src":"675:19:9","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"id":1561,"nodeType":"ExpressionStatement","src":"675:19:9"}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1563,"name":"_lzEndpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"709:11:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"307837646341443732363430463833354230464133364546443344366433656339303243374535616366","id":1564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"724:42:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x7dcAD72640F835B0FA36EFD3D6d3ec902C7E5acf"},"src":"709:57:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1570,"nodeType":"IfStatement","src":"705:82:9","trueBody":{"expression":{"id":1568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1566,"name":"destChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1547,"src":"768:11:9","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"3130313032","id":1567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"782:5:9","typeDescriptions":{"typeIdentifier":"t_rational_10102_by_1","typeString":"int_const 10102"},"value":"10102"},"src":"768:19:9","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"id":1569,"nodeType":"ExpressionStatement","src":"768:19:9"}}]},"id":1572,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":1552,"name":"_lzEndpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"588:11:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1553,"kind":"baseConstructorSpecifier","modifierName":{"id":1551,"name":"NonblockingLzApp","nameLocations":["571:16:9"],"nodeType":"IdentifierPath","referencedDeclaration":1212,"src":"571:16:9"},"nodeType":"ModifierInvocation","src":"571:29:9"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1549,"mutability":"mutable","name":"_lzEndpoint","nameLocation":"558:11:9","nodeType":"VariableDeclaration","scope":1572,"src":"550:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1548,"name":"address","nodeType":"ElementaryTypeName","src":"550:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"549:21:9"},"returnParameters":{"id":1554,"nodeType":"ParameterList","parameters":[],"src":"601:0:9"},"scope":1650,"src":"538:449:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1143],"body":{"id":1594,"nodeType":"Block","src":"1097:55:9","statements":[{"expression":{"id":1592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1584,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1545,"src":"1107:4:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1587,"name":"_payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1580,"src":"1125:8:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":1589,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1136:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1588,"name":"string","nodeType":"ElementaryTypeName","src":"1136:6:9","typeDescriptions":{}}}],"id":1590,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1135:8:9","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"}],"expression":{"id":1585,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1114:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1586,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1118:6:9","memberName":"decode","nodeType":"MemberAccess","src":"1114:10:9","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":1591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1114:30:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1107:37:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1593,"nodeType":"ExpressionStatement","src":"1107:37:9"}]},"id":1595,"implemented":true,"kind":"function","modifiers":[],"name":"_nonblockingLzReceive","nameLocation":"1004:21:9","nodeType":"FunctionDefinition","overrides":{"id":1582,"nodeType":"OverrideSpecifier","overrides":[],"src":"1088:8:9"},"parameters":{"id":1581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1574,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1595,"src":"1026:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1573,"name":"uint16","nodeType":"ElementaryTypeName","src":"1026:6:9","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1576,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1595,"src":"1034:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1575,"name":"bytes","nodeType":"ElementaryTypeName","src":"1034:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1578,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1595,"src":"1048:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1577,"name":"uint64","nodeType":"ElementaryTypeName","src":"1048:6:9","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":1580,"mutability":"mutable","name":"_payload","nameLocation":"1069:8:9","nodeType":"VariableDeclaration","scope":1595,"src":"1056:21:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1579,"name":"bytes","nodeType":"ElementaryTypeName","src":"1056:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1025:53:9"},"returnParameters":{"id":1583,"nodeType":"ParameterList","parameters":[],"src":"1097:0:9"},"scope":1650,"src":"995:157:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1627,"nodeType":"Block","src":"1213:159:9","statements":[{"assignments":[1601],"declarations":[{"constant":false,"id":1601,"mutability":"mutable","name":"payload","nameLocation":"1237:7:9","nodeType":"VariableDeclaration","scope":1627,"src":"1224:20:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1600,"name":"bytes","nodeType":"ElementaryTypeName","src":"1224:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1606,"initialValue":{"arguments":[{"id":1604,"name":"_message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1597,"src":"1258:8:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1602,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1247:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1603,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1251:6:9","memberName":"encode","nodeType":"MemberAccess","src":"1247:10:9","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1247:20:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1224:43:9"},{"expression":{"arguments":[{"id":1608,"name":"destChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1547,"src":"1286:11:9","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":1609,"name":"payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1601,"src":"1299:7:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"arguments":[{"expression":{"id":1612,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1316:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1320:6:9","memberName":"sender","nodeType":"MemberAccess","src":"1316:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1611,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1308:8:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":1610,"name":"address","nodeType":"ElementaryTypeName","src":"1308:8:9","stateMutability":"payable","typeDescriptions":{}}},"id":1614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1308:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"arguments":[{"hexValue":"307830","id":1617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1337:3:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1616,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1329:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1615,"name":"address","nodeType":"ElementaryTypeName","src":"1329:7:9","typeDescriptions":{}}},"id":1618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1329:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"","id":1621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1349:2:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1620,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1343:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1619,"name":"bytes","nodeType":"ElementaryTypeName","src":"1343:5:9","typeDescriptions":{}}},"id":1622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1343:9:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"expression":{"id":1623,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1354:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1358:5:9","memberName":"value","nodeType":"MemberAccess","src":"1354:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1607,"name":"_lzSend","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":622,"src":"1278:7:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint16_$_t_bytes_memory_ptr_$_t_address_payable_$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (uint16,bytes memory,address payable,address,bytes memory,uint256)"}},"id":1625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1278:86:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1626,"nodeType":"ExpressionStatement","src":"1278:86:9"}]},"functionSelector":"66792ba1","id":1628,"implemented":true,"kind":"function","modifiers":[],"name":"send","nameLocation":"1169:4:9","nodeType":"FunctionDefinition","parameters":{"id":1598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1597,"mutability":"mutable","name":"_message","nameLocation":"1188:8:9","nodeType":"VariableDeclaration","scope":1628,"src":"1174:22:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1596,"name":"string","nodeType":"ElementaryTypeName","src":"1174:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1173:24:9"},"returnParameters":{"id":1599,"nodeType":"ParameterList","parameters":[],"src":"1213:0:9"},"scope":1650,"src":"1160:212:9","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":1648,"nodeType":"Block","src":"1443:104:9","statements":[{"expression":{"id":1646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1635,"name":"trustedRemoteLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":455,"src":"1454:19:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_bytes_storage_$","typeString":"mapping(uint16 => bytes storage ref)"}},"id":1637,"indexExpression":{"id":1636,"name":"destChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1547,"src":"1474:11:9","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1454:32:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1640,"name":"_otherContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1630,"src":"1506:14:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":1643,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1530:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_LayerZeroTest_$1650","typeString":"contract LayerZeroTest"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_LayerZeroTest_$1650","typeString":"contract LayerZeroTest"}],"id":1642,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1522:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1641,"name":"address","nodeType":"ElementaryTypeName","src":"1522:7:9","typeDescriptions":{}}},"id":1644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1522:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1638,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1489:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1639,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1493:12:9","memberName":"encodePacked","nodeType":"MemberAccess","src":"1489:16:9","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1489:47:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"1454:82:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"id":1647,"nodeType":"ExpressionStatement","src":"1454:82:9"}]},"functionSelector":"5cdf1649","id":1649,"implemented":true,"kind":"function","modifiers":[{"id":1633,"kind":"modifierInvocation","modifierName":{"id":1632,"name":"onlyOwner","nameLocations":["1433:9:9"],"nodeType":"IdentifierPath","referencedDeclaration":1434,"src":"1433:9:9"},"nodeType":"ModifierInvocation","src":"1433:9:9"}],"name":"trustAddress","nameLocation":"1389:12:9","nodeType":"FunctionDefinition","parameters":{"id":1631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1630,"mutability":"mutable","name":"_otherContract","nameLocation":"1410:14:9","nodeType":"VariableDeclaration","scope":1649,"src":"1402:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1629,"name":"address","nodeType":"ElementaryTypeName","src":"1402:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1401:24:9"},"returnParameters":{"id":1634,"nodeType":"ParameterList","parameters":[],"src":"1443:0:9"},"scope":1650,"src":"1380:167:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":1651,"src":"407:1143:9","usedErrors":[],"usedEvents":[471,477,483,491,1009,1019,1416]}],"src":"33:1517:9"},"id":9}},"contracts":{"@layerzerolabs/solidity-examples/contracts/libraries/BytesLib.sol":{"BytesLib":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122056c201d6e7c64f58cb892cff748f9c882ccbe4ae7a340084608d8b9b383247a664736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMP 0xC2 ADD 0xD6 0xE7 0xC6 0x4F PC 0xCB DUP10 0x2C SELFDESTRUCT PUSH21 0x8F9C882CCBE4AE7A340084608D8B9B383247A66473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"369:18622:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;369:18622:0;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122056c201d6e7c64f58cb892cff748f9c882ccbe4ae7a340084608d8b9b383247a664736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMP 0xC2 ADD 0xD6 0xE7 0xC6 0x4F PC 0xCB DUP10 0x2C SELFDESTRUCT PUSH21 0x8F9C882CCBE4AE7A340084608D8B9B383247A66473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"369:18622:0:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"concat(bytes memory,bytes memory)":"infinite","concatStorage(bytes storage pointer,bytes memory)":"infinite","equal(bytes memory,bytes memory)":"infinite","equalStorage(bytes storage pointer,bytes memory)":"infinite","slice(bytes memory,uint256,uint256)":"infinite","toAddress(bytes memory,uint256)":"infinite","toBytes32(bytes memory,uint256)":"infinite","toUint128(bytes memory,uint256)":"infinite","toUint16(bytes memory,uint256)":"infinite","toUint256(bytes memory,uint256)":"infinite","toUint32(bytes memory,uint256)":"infinite","toUint64(bytes memory,uint256)":"infinite","toUint8(bytes memory,uint256)":"infinite","toUint96(bytes memory,uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@layerzerolabs/solidity-examples/contracts/libraries/BytesLib.sol\":\"BytesLib\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@layerzerolabs/solidity-examples/contracts/libraries/BytesLib.sol\":{\"content\":\"// SPDX-License-Identifier: Unlicense\\n/*\\n * @title Solidity Bytes Arrays Utils\\n * @author Gon\\u00e7alo S\\u00e1 <goncalo.sa@consensys.net>\\n *\\n * @dev Bytes tightly packed arrays utility library for ethereum contracts written in Solidity.\\n *      The library lets you concatenate, slice and type cast bytes arrays both in memory and storage.\\n */\\npragma solidity >=0.8.0 <0.9.0;\\n\\nlibrary BytesLib {\\n    function concat(bytes memory _preBytes, bytes memory _postBytes) internal pure returns (bytes memory) {\\n        bytes memory tempBytes;\\n\\n        assembly {\\n            // Get a location of some free memory and store it in tempBytes as\\n            // Solidity does for memory variables.\\n            tempBytes := mload(0x40)\\n\\n            // Store the length of the first bytes array at the beginning of\\n            // the memory for tempBytes.\\n            let length := mload(_preBytes)\\n            mstore(tempBytes, length)\\n\\n            // Maintain a memory counter for the current write location in the\\n            // temp bytes array by adding the 32 bytes for the array length to\\n            // the starting location.\\n            let mc := add(tempBytes, 0x20)\\n            // Stop copying when the memory counter reaches the length of the\\n            // first bytes array.\\n            let end := add(mc, length)\\n\\n            for {\\n                // Initialize a copy counter to the start of the _preBytes data,\\n                // 32 bytes into its memory.\\n                let cc := add(_preBytes, 0x20)\\n            } lt(mc, end) {\\n                // Increase both counters by 32 bytes each iteration.\\n                mc := add(mc, 0x20)\\n                cc := add(cc, 0x20)\\n            } {\\n                // Write the _preBytes data into the tempBytes memory 32 bytes\\n                // at a time.\\n                mstore(mc, mload(cc))\\n            }\\n\\n            // Add the length of _postBytes to the current length of tempBytes\\n            // and store it as the new length in the first 32 bytes of the\\n            // tempBytes memory.\\n            length := mload(_postBytes)\\n            mstore(tempBytes, add(length, mload(tempBytes)))\\n\\n            // Move the memory counter back from a multiple of 0x20 to the\\n            // actual end of the _preBytes data.\\n            mc := end\\n            // Stop copying when the memory counter reaches the new combined\\n            // length of the arrays.\\n            end := add(mc, length)\\n\\n            for {\\n                let cc := add(_postBytes, 0x20)\\n            } lt(mc, end) {\\n                mc := add(mc, 0x20)\\n                cc := add(cc, 0x20)\\n            } {\\n                mstore(mc, mload(cc))\\n            }\\n\\n            // Update the free-memory pointer by padding our last write location\\n            // to 32 bytes: add 31 bytes to the end of tempBytes to move to the\\n            // next 32 byte block, then round down to the nearest multiple of\\n            // 32. If the sum of the length of the two arrays is zero then add\\n            // one before rounding down to leave a blank 32 bytes (the length block with 0).\\n            mstore(\\n                0x40,\\n                and(\\n                    add(add(end, iszero(add(length, mload(_preBytes)))), 31),\\n                    not(31) // Round down to the nearest 32 bytes.\\n                )\\n            )\\n        }\\n\\n        return tempBytes;\\n    }\\n\\n    function concatStorage(bytes storage _preBytes, bytes memory _postBytes) internal {\\n        assembly {\\n            // Read the first 32 bytes of _preBytes storage, which is the length\\n            // of the array. (We don't need to use the offset into the slot\\n            // because arrays use the entire slot.)\\n            let fslot := sload(_preBytes.slot)\\n            // Arrays of 31 bytes or less have an even value in their slot,\\n            // while longer arrays have an odd value. The actual length is\\n            // the slot divided by two for odd values, and the lowest order\\n            // byte divided by two for even values.\\n            // If the slot is even, bitwise and the slot with 255 and divide by\\n            // two to get the length. If the slot is odd, bitwise and the slot\\n            // with -1 and divide by two.\\n            let slength := div(and(fslot, sub(mul(0x100, iszero(and(fslot, 1))), 1)), 2)\\n            let mlength := mload(_postBytes)\\n            let newlength := add(slength, mlength)\\n            // slength can contain both the length and contents of the array\\n            // if length < 32 bytes so let's prepare for that\\n            // v. http://solidity.readthedocs.io/en/latest/miscellaneous.html#layout-of-state-variables-in-storage\\n            switch add(lt(slength, 32), lt(newlength, 32))\\n            case 2 {\\n                // Since the new array still fits in the slot, we just need to\\n                // update the contents of the slot.\\n                // uint256(bytes_storage) = uint256(bytes_storage) + uint256(bytes_memory) + new_length\\n                sstore(\\n                    _preBytes.slot,\\n                    // all the modifications to the slot are inside this\\n                    // next block\\n                    add(\\n                        // we can just add to the slot contents because the\\n                        // bytes we want to change are the LSBs\\n                        fslot,\\n                        add(\\n                            mul(\\n                                div(\\n                                    // load the bytes from memory\\n                                    mload(add(_postBytes, 0x20)),\\n                                    // zero all bytes to the right\\n                                    exp(0x100, sub(32, mlength))\\n                                ),\\n                                // and now shift left the number of bytes to\\n                                // leave space for the length in the slot\\n                                exp(0x100, sub(32, newlength))\\n                            ),\\n                            // increase length by the double of the memory\\n                            // bytes length\\n                            mul(mlength, 2)\\n                        )\\n                    )\\n                )\\n            }\\n            case 1 {\\n                // The stored value fits in the slot, but the combined value\\n                // will exceed it.\\n                // get the keccak hash to get the contents of the array\\n                mstore(0x0, _preBytes.slot)\\n                let sc := add(keccak256(0x0, 0x20), div(slength, 32))\\n\\n                // save new length\\n                sstore(_preBytes.slot, add(mul(newlength, 2), 1))\\n\\n                // The contents of the _postBytes array start 32 bytes into\\n                // the structure. Our first read should obtain the `submod`\\n                // bytes that can fit into the unused space in the last word\\n                // of the stored array. To get this, we read 32 bytes starting\\n                // from `submod`, so the data we read overlaps with the array\\n                // contents by `submod` bytes. Masking the lowest-order\\n                // `submod` bytes allows us to add that value directly to the\\n                // stored value.\\n\\n                let submod := sub(32, slength)\\n                let mc := add(_postBytes, submod)\\n                let end := add(_postBytes, mlength)\\n                let mask := sub(exp(0x100, submod), 1)\\n\\n                sstore(sc, add(and(fslot, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00), and(mload(mc), mask)))\\n\\n                for {\\n                    mc := add(mc, 0x20)\\n                    sc := add(sc, 1)\\n                } lt(mc, end) {\\n                    sc := add(sc, 1)\\n                    mc := add(mc, 0x20)\\n                } {\\n                    sstore(sc, mload(mc))\\n                }\\n\\n                mask := exp(0x100, sub(mc, end))\\n\\n                sstore(sc, mul(div(mload(mc), mask), mask))\\n            }\\n            default {\\n                // get the keccak hash to get the contents of the array\\n                mstore(0x0, _preBytes.slot)\\n                // Start copying to the last used word of the stored array.\\n                let sc := add(keccak256(0x0, 0x20), div(slength, 32))\\n\\n                // save new length\\n                sstore(_preBytes.slot, add(mul(newlength, 2), 1))\\n\\n                // Copy over the first `submod` bytes of the new data as in\\n                // case 1 above.\\n                let slengthmod := mod(slength, 32)\\n                let mlengthmod := mod(mlength, 32)\\n                let submod := sub(32, slengthmod)\\n                let mc := add(_postBytes, submod)\\n                let end := add(_postBytes, mlength)\\n                let mask := sub(exp(0x100, submod), 1)\\n\\n                sstore(sc, add(sload(sc), and(mload(mc), mask)))\\n\\n                for {\\n                    sc := add(sc, 1)\\n                    mc := add(mc, 0x20)\\n                } lt(mc, end) {\\n                    sc := add(sc, 1)\\n                    mc := add(mc, 0x20)\\n                } {\\n                    sstore(sc, mload(mc))\\n                }\\n\\n                mask := exp(0x100, sub(mc, end))\\n\\n                sstore(sc, mul(div(mload(mc), mask), mask))\\n            }\\n        }\\n    }\\n\\n    function slice(\\n        bytes memory _bytes,\\n        uint _start,\\n        uint _length\\n    ) internal pure returns (bytes memory) {\\n        require(_length + 31 >= _length, \\\"slice_overflow\\\");\\n        require(_bytes.length >= _start + _length, \\\"slice_outOfBounds\\\");\\n\\n        bytes memory tempBytes;\\n\\n        assembly {\\n            switch iszero(_length)\\n            case 0 {\\n                // Get a location of some free memory and store it in tempBytes as\\n                // Solidity does for memory variables.\\n                tempBytes := mload(0x40)\\n\\n                // The first word of the slice result is potentially a partial\\n                // word read from the original array. To read it, we calculate\\n                // the length of that partial word and start copying that many\\n                // bytes into the array. The first word we copy will start with\\n                // data we don't care about, but the last `lengthmod` bytes will\\n                // land at the beginning of the contents of the new array. When\\n                // we're done copying, we overwrite the full first word with\\n                // the actual length of the slice.\\n                let lengthmod := and(_length, 31)\\n\\n                // The multiplication in the next line is necessary\\n                // because when slicing multiples of 32 bytes (lengthmod == 0)\\n                // the following copy loop was copying the origin's length\\n                // and then ending prematurely not copying everything it should.\\n                let mc := add(add(tempBytes, lengthmod), mul(0x20, iszero(lengthmod)))\\n                let end := add(mc, _length)\\n\\n                for {\\n                    // The multiplication in the next line has the same exact purpose\\n                    // as the one above.\\n                    let cc := add(add(add(_bytes, lengthmod), mul(0x20, iszero(lengthmod))), _start)\\n                } lt(mc, end) {\\n                    mc := add(mc, 0x20)\\n                    cc := add(cc, 0x20)\\n                } {\\n                    mstore(mc, mload(cc))\\n                }\\n\\n                mstore(tempBytes, _length)\\n\\n                //update free-memory pointer\\n                //allocating the array padded to 32 bytes like the compiler does now\\n                mstore(0x40, and(add(mc, 31), not(31)))\\n            }\\n            //if we want a zero-length slice let's just return a zero-length array\\n            default {\\n                tempBytes := mload(0x40)\\n                //zero out the 32 bytes slice we are about to return\\n                //we need to do it because Solidity does not garbage collect\\n                mstore(tempBytes, 0)\\n\\n                mstore(0x40, add(tempBytes, 0x20))\\n            }\\n        }\\n\\n        return tempBytes;\\n    }\\n\\n    function toAddress(bytes memory _bytes, uint _start) internal pure returns (address) {\\n        require(_bytes.length >= _start + 20, \\\"toAddress_outOfBounds\\\");\\n        address tempAddress;\\n\\n        assembly {\\n            tempAddress := div(mload(add(add(_bytes, 0x20), _start)), 0x1000000000000000000000000)\\n        }\\n\\n        return tempAddress;\\n    }\\n\\n    function toUint8(bytes memory _bytes, uint _start) internal pure returns (uint8) {\\n        require(_bytes.length >= _start + 1, \\\"toUint8_outOfBounds\\\");\\n        uint8 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x1), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint16(bytes memory _bytes, uint _start) internal pure returns (uint16) {\\n        require(_bytes.length >= _start + 2, \\\"toUint16_outOfBounds\\\");\\n        uint16 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x2), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint32(bytes memory _bytes, uint _start) internal pure returns (uint32) {\\n        require(_bytes.length >= _start + 4, \\\"toUint32_outOfBounds\\\");\\n        uint32 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x4), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint64(bytes memory _bytes, uint _start) internal pure returns (uint64) {\\n        require(_bytes.length >= _start + 8, \\\"toUint64_outOfBounds\\\");\\n        uint64 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x8), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint96(bytes memory _bytes, uint _start) internal pure returns (uint96) {\\n        require(_bytes.length >= _start + 12, \\\"toUint96_outOfBounds\\\");\\n        uint96 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0xc), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint128(bytes memory _bytes, uint _start) internal pure returns (uint128) {\\n        require(_bytes.length >= _start + 16, \\\"toUint128_outOfBounds\\\");\\n        uint128 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x10), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint256(bytes memory _bytes, uint _start) internal pure returns (uint) {\\n        require(_bytes.length >= _start + 32, \\\"toUint256_outOfBounds\\\");\\n        uint tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x20), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toBytes32(bytes memory _bytes, uint _start) internal pure returns (bytes32) {\\n        require(_bytes.length >= _start + 32, \\\"toBytes32_outOfBounds\\\");\\n        bytes32 tempBytes32;\\n\\n        assembly {\\n            tempBytes32 := mload(add(add(_bytes, 0x20), _start))\\n        }\\n\\n        return tempBytes32;\\n    }\\n\\n    function equal(bytes memory _preBytes, bytes memory _postBytes) internal pure returns (bool) {\\n        bool success = true;\\n\\n        assembly {\\n            let length := mload(_preBytes)\\n\\n            // if lengths don't match the arrays are not equal\\n            switch eq(length, mload(_postBytes))\\n            case 1 {\\n                // cb is a circuit breaker in the for loop since there's\\n                //  no said feature for inline assembly loops\\n                // cb = 1 - don't breaker\\n                // cb = 0 - break\\n                let cb := 1\\n\\n                let mc := add(_preBytes, 0x20)\\n                let end := add(mc, length)\\n\\n                for {\\n                    let cc := add(_postBytes, 0x20)\\n                    // the next line is the loop condition:\\n                    // while(uint256(mc < end) + cb == 2)\\n                } eq(add(lt(mc, end), cb), 2) {\\n                    mc := add(mc, 0x20)\\n                    cc := add(cc, 0x20)\\n                } {\\n                    // if any of these checks fails then arrays are not equal\\n                    if iszero(eq(mload(mc), mload(cc))) {\\n                        // unsuccess:\\n                        success := 0\\n                        cb := 0\\n                    }\\n                }\\n            }\\n            default {\\n                // unsuccess:\\n                success := 0\\n            }\\n        }\\n\\n        return success;\\n    }\\n\\n    function equalStorage(bytes storage _preBytes, bytes memory _postBytes) internal view returns (bool) {\\n        bool success = true;\\n\\n        assembly {\\n            // we know _preBytes_offset is 0\\n            let fslot := sload(_preBytes.slot)\\n            // Decode the length of the stored array like in concatStorage().\\n            let slength := div(and(fslot, sub(mul(0x100, iszero(and(fslot, 1))), 1)), 2)\\n            let mlength := mload(_postBytes)\\n\\n            // if lengths don't match the arrays are not equal\\n            switch eq(slength, mlength)\\n            case 1 {\\n                // slength can contain both the length and contents of the array\\n                // if length < 32 bytes so let's prepare for that\\n                // v. http://solidity.readthedocs.io/en/latest/miscellaneous.html#layout-of-state-variables-in-storage\\n                if iszero(iszero(slength)) {\\n                    switch lt(slength, 32)\\n                    case 1 {\\n                        // blank the last byte which is the length\\n                        fslot := mul(div(fslot, 0x100), 0x100)\\n\\n                        if iszero(eq(fslot, mload(add(_postBytes, 0x20)))) {\\n                            // unsuccess:\\n                            success := 0\\n                        }\\n                    }\\n                    default {\\n                        // cb is a circuit breaker in the for loop since there's\\n                        //  no said feature for inline assembly loops\\n                        // cb = 1 - don't breaker\\n                        // cb = 0 - break\\n                        let cb := 1\\n\\n                        // get the keccak hash to get the contents of the array\\n                        mstore(0x0, _preBytes.slot)\\n                        let sc := keccak256(0x0, 0x20)\\n\\n                        let mc := add(_postBytes, 0x20)\\n                        let end := add(mc, mlength)\\n\\n                        // the next line is the loop condition:\\n                        // while(uint256(mc < end) + cb == 2)\\n                        for {\\n\\n                        } eq(add(lt(mc, end), cb), 2) {\\n                            sc := add(sc, 1)\\n                            mc := add(mc, 0x20)\\n                        } {\\n                            if iszero(eq(sload(sc), mload(mc))) {\\n                                // unsuccess:\\n                                success := 0\\n                                cb := 0\\n                            }\\n                        }\\n                    }\\n                }\\n            }\\n            default {\\n                // unsuccess:\\n                success := 0\\n            }\\n        }\\n\\n        return success;\\n    }\\n}\\n\",\"keccak256\":\"0x7e64cccdf22a03f513d94960f2145dd801fb5ec88d971de079b5186a9f5e93c4\",\"license\":\"Unlicense\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@layerzerolabs/solidity-examples/contracts/libraries/ExcessivelySafeCall.sol":{"ExcessivelySafeCall":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202e0ab3faf0df83634bd2d1284c4ecb7378fe5071efb30d7e49968525146f6c3b64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2E EXP 0xB3 STATICCALL CREATE 0xDF DUP4 PUSH4 0x4BD2D128 0x4C 0x4E 0xCB PUSH20 0x78FE5071EFB30D7E49968525146F6C3B64736F6C PUSH4 0x43000814 STOP CALLER ","sourceMap":"72:5387:1:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;72:5387:1;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202e0ab3faf0df83634bd2d1284c4ecb7378fe5071efb30d7e49968525146f6c3b64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2E EXP 0xB3 STATICCALL CREATE 0xDF DUP4 PUSH4 0x4BD2D128 0x4C 0x4E 0xCB PUSH20 0x78FE5071EFB30D7E49968525146F6C3B64736F6C PUSH4 0x43000814 STOP CALLER ","sourceMap":"72:5387:1:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"excessivelySafeCall(address,uint256,uint16,bytes memory)":"infinite","excessivelySafeStaticCall(address,uint256,uint16,bytes memory)":"infinite","swapSelector(bytes4,bytes memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@layerzerolabs/solidity-examples/contracts/libraries/ExcessivelySafeCall.sol\":\"ExcessivelySafeCall\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@layerzerolabs/solidity-examples/contracts/libraries/ExcessivelySafeCall.sol\":{\"content\":\"// SPDX-License-Identifier: MIT OR Apache-2.0\\npragma solidity >=0.7.6;\\n\\nlibrary ExcessivelySafeCall {\\n    uint constant LOW_28_MASK = 0x00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff;\\n\\n    /// @notice Use when you _really_ really _really_ don't trust the called\\n    /// contract. This prevents the called contract from causing reversion of\\n    /// the caller in as many ways as we can.\\n    /// @dev The main difference between this and a solidity low-level call is\\n    /// that we limit the number of bytes that the callee can cause to be\\n    /// copied to caller memory. This prevents stupid things like malicious\\n    /// contracts returning 10,000,000 bytes causing a local OOG when copying\\n    /// to memory.\\n    /// @param _target The address to call\\n    /// @param _gas The amount of gas to forward to the remote contract\\n    /// @param _maxCopy The maximum number of bytes of returndata to copy\\n    /// to memory.\\n    /// @param _calldata The data to send to the remote contract\\n    /// @return success and returndata, as `.call()`. Returndata is capped to\\n    /// `_maxCopy` bytes.\\n    function excessivelySafeCall(\\n        address _target,\\n        uint _gas,\\n        uint16 _maxCopy,\\n        bytes memory _calldata\\n    ) internal returns (bool, bytes memory) {\\n        // set up for assembly call\\n        uint _toCopy;\\n        bool _success;\\n        bytes memory _returnData = new bytes(_maxCopy);\\n        // dispatch message to recipient\\n        // by assembly calling \\\"handle\\\" function\\n        // we call via assembly to avoid memcopying a very large returndata\\n        // returned by a malicious contract\\n        assembly {\\n            _success := call(\\n                _gas, // gas\\n                _target, // recipient\\n                0, // ether value\\n                add(_calldata, 0x20), // inloc\\n                mload(_calldata), // inlen\\n                0, // outloc\\n                0 // outlen\\n            )\\n            // limit our copy to 256 bytes\\n            _toCopy := returndatasize()\\n            if gt(_toCopy, _maxCopy) {\\n                _toCopy := _maxCopy\\n            }\\n            // Store the length of the copied bytes\\n            mstore(_returnData, _toCopy)\\n            // copy the bytes from returndata[0:_toCopy]\\n            returndatacopy(add(_returnData, 0x20), 0, _toCopy)\\n        }\\n        return (_success, _returnData);\\n    }\\n\\n    /// @notice Use when you _really_ really _really_ don't trust the called\\n    /// contract. This prevents the called contract from causing reversion of\\n    /// the caller in as many ways as we can.\\n    /// @dev The main difference between this and a solidity low-level call is\\n    /// that we limit the number of bytes that the callee can cause to be\\n    /// copied to caller memory. This prevents stupid things like malicious\\n    /// contracts returning 10,000,000 bytes causing a local OOG when copying\\n    /// to memory.\\n    /// @param _target The address to call\\n    /// @param _gas The amount of gas to forward to the remote contract\\n    /// @param _maxCopy The maximum number of bytes of returndata to copy\\n    /// to memory.\\n    /// @param _calldata The data to send to the remote contract\\n    /// @return success and returndata, as `.call()`. Returndata is capped to\\n    /// `_maxCopy` bytes.\\n    function excessivelySafeStaticCall(\\n        address _target,\\n        uint _gas,\\n        uint16 _maxCopy,\\n        bytes memory _calldata\\n    ) internal view returns (bool, bytes memory) {\\n        // set up for assembly call\\n        uint _toCopy;\\n        bool _success;\\n        bytes memory _returnData = new bytes(_maxCopy);\\n        // dispatch message to recipient\\n        // by assembly calling \\\"handle\\\" function\\n        // we call via assembly to avoid memcopying a very large returndata\\n        // returned by a malicious contract\\n        assembly {\\n            _success := staticcall(\\n                _gas, // gas\\n                _target, // recipient\\n                add(_calldata, 0x20), // inloc\\n                mload(_calldata), // inlen\\n                0, // outloc\\n                0 // outlen\\n            )\\n            // limit our copy to 256 bytes\\n            _toCopy := returndatasize()\\n            if gt(_toCopy, _maxCopy) {\\n                _toCopy := _maxCopy\\n            }\\n            // Store the length of the copied bytes\\n            mstore(_returnData, _toCopy)\\n            // copy the bytes from returndata[0:_toCopy]\\n            returndatacopy(add(_returnData, 0x20), 0, _toCopy)\\n        }\\n        return (_success, _returnData);\\n    }\\n\\n    /**\\n     * @notice Swaps function selectors in encoded contract calls\\n     * @dev Allows reuse of encoded calldata for functions with identical\\n     * argument types but different names. It simply swaps out the first 4 bytes\\n     * for the new selector. This function modifies memory in place, and should\\n     * only be used with caution.\\n     * @param _newSelector The new 4-byte selector\\n     * @param _buf The encoded contract args\\n     */\\n    function swapSelector(bytes4 _newSelector, bytes memory _buf) internal pure {\\n        require(_buf.length >= 4);\\n        uint _mask = LOW_28_MASK;\\n        assembly {\\n            // load the first word of\\n            let _word := mload(add(_buf, 0x20))\\n            // mask out the top 4 bytes\\n            // /x\\n            _word := and(_word, _mask)\\n            _word := or(_newSelector, _word)\\n            mstore(add(_buf, 0x20), _word)\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd4e52af409b5ec80432292d86fb01906785eb78ac31da3bab4565aabcd6e3e56\",\"license\":\"MIT OR Apache-2.0\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@layerzerolabs/solidity-examples/contracts/lzApp/LzApp.sol":{"LzApp":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"_dstChainId","type":"uint16"},{"indexed":false,"internalType":"uint16","name":"_type","type":"uint16"},{"indexed":false,"internalType":"uint256","name":"_minDstGas","type":"uint256"}],"name":"SetMinDstGas","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"precrime","type":"address"}],"name":"SetPrecrime","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"_remoteChainId","type":"uint16"},{"indexed":false,"internalType":"bytes","name":"_path","type":"bytes"}],"name":"SetTrustedRemote","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"_remoteChainId","type":"uint16"},{"indexed":false,"internalType":"bytes","name":"_remoteAddress","type":"bytes"}],"name":"SetTrustedRemoteAddress","type":"event"},{"inputs":[],"name":"DEFAULT_PAYLOAD_SIZE_LIMIT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"}],"name":"forceResumeReceive","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_version","type":"uint16"},{"internalType":"uint16","name":"_chainId","type":"uint16"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"_configType","type":"uint256"}],"name":"getConfig","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_remoteChainId","type":"uint16"}],"name":"getTrustedRemoteAddress","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"}],"name":"isTrustedRemote","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lzEndpoint","outputs":[{"internalType":"contract ILayerZeroEndpoint","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"},{"internalType":"uint64","name":"_nonce","type":"uint64"},{"internalType":"bytes","name":"_payload","type":"bytes"}],"name":"lzReceive","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"","type":"uint16"},{"internalType":"uint16","name":"","type":"uint16"}],"name":"minDstGasLookup","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"","type":"uint16"}],"name":"payloadSizeLimitLookup","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"precrime","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_version","type":"uint16"},{"internalType":"uint16","name":"_chainId","type":"uint16"},{"internalType":"uint256","name":"_configType","type":"uint256"},{"internalType":"bytes","name":"_config","type":"bytes"}],"name":"setConfig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_dstChainId","type":"uint16"},{"internalType":"uint16","name":"_packetType","type":"uint16"},{"internalType":"uint256","name":"_minGas","type":"uint256"}],"name":"setMinDstGas","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_dstChainId","type":"uint16"},{"internalType":"uint256","name":"_size","type":"uint256"}],"name":"setPayloadSizeLimit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_precrime","type":"address"}],"name":"setPrecrime","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_version","type":"uint16"}],"name":"setReceiveVersion","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_version","type":"uint16"}],"name":"setSendVersion","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_remoteChainId","type":"uint16"},{"internalType":"bytes","name":"_path","type":"bytes"}],"name":"setTrustedRemote","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_remoteChainId","type":"uint16"},{"internalType":"bytes","name":"_remoteAddress","type":"bytes"}],"name":"setTrustedRemoteAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"","type":"uint16"}],"name":"trustedRemoteLookup","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"DEFAULT_PAYLOAD_SIZE_LIMIT()":"c4461834","forceResumeReceive(uint16,bytes)":"42d65a8d","getConfig(uint16,uint16,address,uint256)":"f5ecbdbc","getTrustedRemoteAddress(uint16)":"9f38369a","isTrustedRemote(uint16,bytes)":"3d8b38f6","lzEndpoint()":"b353aaa7","lzReceive(uint16,bytes,uint64,bytes)":"001d3567","minDstGasLookup(uint16,uint16)":"8cfd8f5c","owner()":"8da5cb5b","payloadSizeLimitLookup(uint16)":"3f1f4fa4","precrime()":"950c8a74","renounceOwnership()":"715018a6","setConfig(uint16,uint16,uint256,bytes)":"cbed8b9c","setMinDstGas(uint16,uint16,uint256)":"df2a5b3b","setPayloadSizeLimit(uint16,uint256)":"0df37483","setPrecrime(address)":"baf3292d","setReceiveVersion(uint16)":"10ddb137","setSendVersion(uint16)":"07e0db17","setTrustedRemote(uint16,bytes)":"eb8d72b7","setTrustedRemoteAddress(uint16,bytes)":"a6c3d165","transferOwnership(address)":"f2fde38b","trustedRemoteLookup(uint16)":"7533d788"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_type\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_minDstGas\",\"type\":\"uint256\"}],\"name\":\"SetMinDstGas\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"precrime\",\"type\":\"address\"}],\"name\":\"SetPrecrime\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_remoteChainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_path\",\"type\":\"bytes\"}],\"name\":\"SetTrustedRemote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_remoteChainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_remoteAddress\",\"type\":\"bytes\"}],\"name\":\"SetTrustedRemoteAddress\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_PAYLOAD_SIZE_LIMIT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"}],\"name\":\"forceResumeReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_chainId\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_configType\",\"type\":\"uint256\"}],\"name\":\"getConfig\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_remoteChainId\",\"type\":\"uint16\"}],\"name\":\"getTrustedRemoteAddress\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"}],\"name\":\"isTrustedRemote\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lzEndpoint\",\"outputs\":[{\"internalType\":\"contract ILayerZeroEndpoint\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"}],\"name\":\"lzReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"minDstGasLookup\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"payloadSizeLimitLookup\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"precrime\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_chainId\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"_configType\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_config\",\"type\":\"bytes\"}],\"name\":\"setConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_packetType\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"_minGas\",\"type\":\"uint256\"}],\"name\":\"setMinDstGas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"_size\",\"type\":\"uint256\"}],\"name\":\"setPayloadSizeLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_precrime\",\"type\":\"address\"}],\"name\":\"setPrecrime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"}],\"name\":\"setReceiveVersion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"}],\"name\":\"setSendVersion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_remoteChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_path\",\"type\":\"bytes\"}],\"name\":\"setTrustedRemote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_remoteChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_remoteAddress\",\"type\":\"bytes\"}],\"name\":\"setTrustedRemoteAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"trustedRemoteLookup\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@layerzerolabs/solidity-examples/contracts/lzApp/LzApp.sol\":\"LzApp\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@layerzerolabs/solidity-examples/contracts/libraries/BytesLib.sol\":{\"content\":\"// SPDX-License-Identifier: Unlicense\\n/*\\n * @title Solidity Bytes Arrays Utils\\n * @author Gon\\u00e7alo S\\u00e1 <goncalo.sa@consensys.net>\\n *\\n * @dev Bytes tightly packed arrays utility library for ethereum contracts written in Solidity.\\n *      The library lets you concatenate, slice and type cast bytes arrays both in memory and storage.\\n */\\npragma solidity >=0.8.0 <0.9.0;\\n\\nlibrary BytesLib {\\n    function concat(bytes memory _preBytes, bytes memory _postBytes) internal pure returns (bytes memory) {\\n        bytes memory tempBytes;\\n\\n        assembly {\\n            // Get a location of some free memory and store it in tempBytes as\\n            // Solidity does for memory variables.\\n            tempBytes := mload(0x40)\\n\\n            // Store the length of the first bytes array at the beginning of\\n            // the memory for tempBytes.\\n            let length := mload(_preBytes)\\n            mstore(tempBytes, length)\\n\\n            // Maintain a memory counter for the current write location in the\\n            // temp bytes array by adding the 32 bytes for the array length to\\n            // the starting location.\\n            let mc := add(tempBytes, 0x20)\\n            // Stop copying when the memory counter reaches the length of the\\n            // first bytes array.\\n            let end := add(mc, length)\\n\\n            for {\\n                // Initialize a copy counter to the start of the _preBytes data,\\n                // 32 bytes into its memory.\\n                let cc := add(_preBytes, 0x20)\\n            } lt(mc, end) {\\n                // Increase both counters by 32 bytes each iteration.\\n                mc := add(mc, 0x20)\\n                cc := add(cc, 0x20)\\n            } {\\n                // Write the _preBytes data into the tempBytes memory 32 bytes\\n                // at a time.\\n                mstore(mc, mload(cc))\\n            }\\n\\n            // Add the length of _postBytes to the current length of tempBytes\\n            // and store it as the new length in the first 32 bytes of the\\n            // tempBytes memory.\\n            length := mload(_postBytes)\\n            mstore(tempBytes, add(length, mload(tempBytes)))\\n\\n            // Move the memory counter back from a multiple of 0x20 to the\\n            // actual end of the _preBytes data.\\n            mc := end\\n            // Stop copying when the memory counter reaches the new combined\\n            // length of the arrays.\\n            end := add(mc, length)\\n\\n            for {\\n                let cc := add(_postBytes, 0x20)\\n            } lt(mc, end) {\\n                mc := add(mc, 0x20)\\n                cc := add(cc, 0x20)\\n            } {\\n                mstore(mc, mload(cc))\\n            }\\n\\n            // Update the free-memory pointer by padding our last write location\\n            // to 32 bytes: add 31 bytes to the end of tempBytes to move to the\\n            // next 32 byte block, then round down to the nearest multiple of\\n            // 32. If the sum of the length of the two arrays is zero then add\\n            // one before rounding down to leave a blank 32 bytes (the length block with 0).\\n            mstore(\\n                0x40,\\n                and(\\n                    add(add(end, iszero(add(length, mload(_preBytes)))), 31),\\n                    not(31) // Round down to the nearest 32 bytes.\\n                )\\n            )\\n        }\\n\\n        return tempBytes;\\n    }\\n\\n    function concatStorage(bytes storage _preBytes, bytes memory _postBytes) internal {\\n        assembly {\\n            // Read the first 32 bytes of _preBytes storage, which is the length\\n            // of the array. (We don't need to use the offset into the slot\\n            // because arrays use the entire slot.)\\n            let fslot := sload(_preBytes.slot)\\n            // Arrays of 31 bytes or less have an even value in their slot,\\n            // while longer arrays have an odd value. The actual length is\\n            // the slot divided by two for odd values, and the lowest order\\n            // byte divided by two for even values.\\n            // If the slot is even, bitwise and the slot with 255 and divide by\\n            // two to get the length. If the slot is odd, bitwise and the slot\\n            // with -1 and divide by two.\\n            let slength := div(and(fslot, sub(mul(0x100, iszero(and(fslot, 1))), 1)), 2)\\n            let mlength := mload(_postBytes)\\n            let newlength := add(slength, mlength)\\n            // slength can contain both the length and contents of the array\\n            // if length < 32 bytes so let's prepare for that\\n            // v. http://solidity.readthedocs.io/en/latest/miscellaneous.html#layout-of-state-variables-in-storage\\n            switch add(lt(slength, 32), lt(newlength, 32))\\n            case 2 {\\n                // Since the new array still fits in the slot, we just need to\\n                // update the contents of the slot.\\n                // uint256(bytes_storage) = uint256(bytes_storage) + uint256(bytes_memory) + new_length\\n                sstore(\\n                    _preBytes.slot,\\n                    // all the modifications to the slot are inside this\\n                    // next block\\n                    add(\\n                        // we can just add to the slot contents because the\\n                        // bytes we want to change are the LSBs\\n                        fslot,\\n                        add(\\n                            mul(\\n                                div(\\n                                    // load the bytes from memory\\n                                    mload(add(_postBytes, 0x20)),\\n                                    // zero all bytes to the right\\n                                    exp(0x100, sub(32, mlength))\\n                                ),\\n                                // and now shift left the number of bytes to\\n                                // leave space for the length in the slot\\n                                exp(0x100, sub(32, newlength))\\n                            ),\\n                            // increase length by the double of the memory\\n                            // bytes length\\n                            mul(mlength, 2)\\n                        )\\n                    )\\n                )\\n            }\\n            case 1 {\\n                // The stored value fits in the slot, but the combined value\\n                // will exceed it.\\n                // get the keccak hash to get the contents of the array\\n                mstore(0x0, _preBytes.slot)\\n                let sc := add(keccak256(0x0, 0x20), div(slength, 32))\\n\\n                // save new length\\n                sstore(_preBytes.slot, add(mul(newlength, 2), 1))\\n\\n                // The contents of the _postBytes array start 32 bytes into\\n                // the structure. Our first read should obtain the `submod`\\n                // bytes that can fit into the unused space in the last word\\n                // of the stored array. To get this, we read 32 bytes starting\\n                // from `submod`, so the data we read overlaps with the array\\n                // contents by `submod` bytes. Masking the lowest-order\\n                // `submod` bytes allows us to add that value directly to the\\n                // stored value.\\n\\n                let submod := sub(32, slength)\\n                let mc := add(_postBytes, submod)\\n                let end := add(_postBytes, mlength)\\n                let mask := sub(exp(0x100, submod), 1)\\n\\n                sstore(sc, add(and(fslot, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00), and(mload(mc), mask)))\\n\\n                for {\\n                    mc := add(mc, 0x20)\\n                    sc := add(sc, 1)\\n                } lt(mc, end) {\\n                    sc := add(sc, 1)\\n                    mc := add(mc, 0x20)\\n                } {\\n                    sstore(sc, mload(mc))\\n                }\\n\\n                mask := exp(0x100, sub(mc, end))\\n\\n                sstore(sc, mul(div(mload(mc), mask), mask))\\n            }\\n            default {\\n                // get the keccak hash to get the contents of the array\\n                mstore(0x0, _preBytes.slot)\\n                // Start copying to the last used word of the stored array.\\n                let sc := add(keccak256(0x0, 0x20), div(slength, 32))\\n\\n                // save new length\\n                sstore(_preBytes.slot, add(mul(newlength, 2), 1))\\n\\n                // Copy over the first `submod` bytes of the new data as in\\n                // case 1 above.\\n                let slengthmod := mod(slength, 32)\\n                let mlengthmod := mod(mlength, 32)\\n                let submod := sub(32, slengthmod)\\n                let mc := add(_postBytes, submod)\\n                let end := add(_postBytes, mlength)\\n                let mask := sub(exp(0x100, submod), 1)\\n\\n                sstore(sc, add(sload(sc), and(mload(mc), mask)))\\n\\n                for {\\n                    sc := add(sc, 1)\\n                    mc := add(mc, 0x20)\\n                } lt(mc, end) {\\n                    sc := add(sc, 1)\\n                    mc := add(mc, 0x20)\\n                } {\\n                    sstore(sc, mload(mc))\\n                }\\n\\n                mask := exp(0x100, sub(mc, end))\\n\\n                sstore(sc, mul(div(mload(mc), mask), mask))\\n            }\\n        }\\n    }\\n\\n    function slice(\\n        bytes memory _bytes,\\n        uint _start,\\n        uint _length\\n    ) internal pure returns (bytes memory) {\\n        require(_length + 31 >= _length, \\\"slice_overflow\\\");\\n        require(_bytes.length >= _start + _length, \\\"slice_outOfBounds\\\");\\n\\n        bytes memory tempBytes;\\n\\n        assembly {\\n            switch iszero(_length)\\n            case 0 {\\n                // Get a location of some free memory and store it in tempBytes as\\n                // Solidity does for memory variables.\\n                tempBytes := mload(0x40)\\n\\n                // The first word of the slice result is potentially a partial\\n                // word read from the original array. To read it, we calculate\\n                // the length of that partial word and start copying that many\\n                // bytes into the array. The first word we copy will start with\\n                // data we don't care about, but the last `lengthmod` bytes will\\n                // land at the beginning of the contents of the new array. When\\n                // we're done copying, we overwrite the full first word with\\n                // the actual length of the slice.\\n                let lengthmod := and(_length, 31)\\n\\n                // The multiplication in the next line is necessary\\n                // because when slicing multiples of 32 bytes (lengthmod == 0)\\n                // the following copy loop was copying the origin's length\\n                // and then ending prematurely not copying everything it should.\\n                let mc := add(add(tempBytes, lengthmod), mul(0x20, iszero(lengthmod)))\\n                let end := add(mc, _length)\\n\\n                for {\\n                    // The multiplication in the next line has the same exact purpose\\n                    // as the one above.\\n                    let cc := add(add(add(_bytes, lengthmod), mul(0x20, iszero(lengthmod))), _start)\\n                } lt(mc, end) {\\n                    mc := add(mc, 0x20)\\n                    cc := add(cc, 0x20)\\n                } {\\n                    mstore(mc, mload(cc))\\n                }\\n\\n                mstore(tempBytes, _length)\\n\\n                //update free-memory pointer\\n                //allocating the array padded to 32 bytes like the compiler does now\\n                mstore(0x40, and(add(mc, 31), not(31)))\\n            }\\n            //if we want a zero-length slice let's just return a zero-length array\\n            default {\\n                tempBytes := mload(0x40)\\n                //zero out the 32 bytes slice we are about to return\\n                //we need to do it because Solidity does not garbage collect\\n                mstore(tempBytes, 0)\\n\\n                mstore(0x40, add(tempBytes, 0x20))\\n            }\\n        }\\n\\n        return tempBytes;\\n    }\\n\\n    function toAddress(bytes memory _bytes, uint _start) internal pure returns (address) {\\n        require(_bytes.length >= _start + 20, \\\"toAddress_outOfBounds\\\");\\n        address tempAddress;\\n\\n        assembly {\\n            tempAddress := div(mload(add(add(_bytes, 0x20), _start)), 0x1000000000000000000000000)\\n        }\\n\\n        return tempAddress;\\n    }\\n\\n    function toUint8(bytes memory _bytes, uint _start) internal pure returns (uint8) {\\n        require(_bytes.length >= _start + 1, \\\"toUint8_outOfBounds\\\");\\n        uint8 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x1), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint16(bytes memory _bytes, uint _start) internal pure returns (uint16) {\\n        require(_bytes.length >= _start + 2, \\\"toUint16_outOfBounds\\\");\\n        uint16 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x2), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint32(bytes memory _bytes, uint _start) internal pure returns (uint32) {\\n        require(_bytes.length >= _start + 4, \\\"toUint32_outOfBounds\\\");\\n        uint32 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x4), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint64(bytes memory _bytes, uint _start) internal pure returns (uint64) {\\n        require(_bytes.length >= _start + 8, \\\"toUint64_outOfBounds\\\");\\n        uint64 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x8), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint96(bytes memory _bytes, uint _start) internal pure returns (uint96) {\\n        require(_bytes.length >= _start + 12, \\\"toUint96_outOfBounds\\\");\\n        uint96 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0xc), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint128(bytes memory _bytes, uint _start) internal pure returns (uint128) {\\n        require(_bytes.length >= _start + 16, \\\"toUint128_outOfBounds\\\");\\n        uint128 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x10), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint256(bytes memory _bytes, uint _start) internal pure returns (uint) {\\n        require(_bytes.length >= _start + 32, \\\"toUint256_outOfBounds\\\");\\n        uint tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x20), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toBytes32(bytes memory _bytes, uint _start) internal pure returns (bytes32) {\\n        require(_bytes.length >= _start + 32, \\\"toBytes32_outOfBounds\\\");\\n        bytes32 tempBytes32;\\n\\n        assembly {\\n            tempBytes32 := mload(add(add(_bytes, 0x20), _start))\\n        }\\n\\n        return tempBytes32;\\n    }\\n\\n    function equal(bytes memory _preBytes, bytes memory _postBytes) internal pure returns (bool) {\\n        bool success = true;\\n\\n        assembly {\\n            let length := mload(_preBytes)\\n\\n            // if lengths don't match the arrays are not equal\\n            switch eq(length, mload(_postBytes))\\n            case 1 {\\n                // cb is a circuit breaker in the for loop since there's\\n                //  no said feature for inline assembly loops\\n                // cb = 1 - don't breaker\\n                // cb = 0 - break\\n                let cb := 1\\n\\n                let mc := add(_preBytes, 0x20)\\n                let end := add(mc, length)\\n\\n                for {\\n                    let cc := add(_postBytes, 0x20)\\n                    // the next line is the loop condition:\\n                    // while(uint256(mc < end) + cb == 2)\\n                } eq(add(lt(mc, end), cb), 2) {\\n                    mc := add(mc, 0x20)\\n                    cc := add(cc, 0x20)\\n                } {\\n                    // if any of these checks fails then arrays are not equal\\n                    if iszero(eq(mload(mc), mload(cc))) {\\n                        // unsuccess:\\n                        success := 0\\n                        cb := 0\\n                    }\\n                }\\n            }\\n            default {\\n                // unsuccess:\\n                success := 0\\n            }\\n        }\\n\\n        return success;\\n    }\\n\\n    function equalStorage(bytes storage _preBytes, bytes memory _postBytes) internal view returns (bool) {\\n        bool success = true;\\n\\n        assembly {\\n            // we know _preBytes_offset is 0\\n            let fslot := sload(_preBytes.slot)\\n            // Decode the length of the stored array like in concatStorage().\\n            let slength := div(and(fslot, sub(mul(0x100, iszero(and(fslot, 1))), 1)), 2)\\n            let mlength := mload(_postBytes)\\n\\n            // if lengths don't match the arrays are not equal\\n            switch eq(slength, mlength)\\n            case 1 {\\n                // slength can contain both the length and contents of the array\\n                // if length < 32 bytes so let's prepare for that\\n                // v. http://solidity.readthedocs.io/en/latest/miscellaneous.html#layout-of-state-variables-in-storage\\n                if iszero(iszero(slength)) {\\n                    switch lt(slength, 32)\\n                    case 1 {\\n                        // blank the last byte which is the length\\n                        fslot := mul(div(fslot, 0x100), 0x100)\\n\\n                        if iszero(eq(fslot, mload(add(_postBytes, 0x20)))) {\\n                            // unsuccess:\\n                            success := 0\\n                        }\\n                    }\\n                    default {\\n                        // cb is a circuit breaker in the for loop since there's\\n                        //  no said feature for inline assembly loops\\n                        // cb = 1 - don't breaker\\n                        // cb = 0 - break\\n                        let cb := 1\\n\\n                        // get the keccak hash to get the contents of the array\\n                        mstore(0x0, _preBytes.slot)\\n                        let sc := keccak256(0x0, 0x20)\\n\\n                        let mc := add(_postBytes, 0x20)\\n                        let end := add(mc, mlength)\\n\\n                        // the next line is the loop condition:\\n                        // while(uint256(mc < end) + cb == 2)\\n                        for {\\n\\n                        } eq(add(lt(mc, end), cb), 2) {\\n                            sc := add(sc, 1)\\n                            mc := add(mc, 0x20)\\n                        } {\\n                            if iszero(eq(sload(sc), mload(mc))) {\\n                                // unsuccess:\\n                                success := 0\\n                                cb := 0\\n                            }\\n                        }\\n                    }\\n                }\\n            }\\n            default {\\n                // unsuccess:\\n                success := 0\\n            }\\n        }\\n\\n        return success;\\n    }\\n}\\n\",\"keccak256\":\"0x7e64cccdf22a03f513d94960f2145dd801fb5ec88d971de079b5186a9f5e93c4\",\"license\":\"Unlicense\"},\"@layerzerolabs/solidity-examples/contracts/lzApp/LzApp.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"./interfaces/ILayerZeroReceiver.sol\\\";\\nimport \\\"./interfaces/ILayerZeroUserApplicationConfig.sol\\\";\\nimport \\\"./interfaces/ILayerZeroEndpoint.sol\\\";\\nimport \\\"../libraries/BytesLib.sol\\\";\\n\\n/*\\n * a generic LzReceiver implementation\\n */\\nabstract contract LzApp is Ownable, ILayerZeroReceiver, ILayerZeroUserApplicationConfig {\\n    using BytesLib for bytes;\\n\\n    // ua can not send payload larger than this by default, but it can be changed by the ua owner\\n    uint public constant DEFAULT_PAYLOAD_SIZE_LIMIT = 10000;\\n\\n    ILayerZeroEndpoint public immutable lzEndpoint;\\n    mapping(uint16 => bytes) public trustedRemoteLookup;\\n    mapping(uint16 => mapping(uint16 => uint)) public minDstGasLookup;\\n    mapping(uint16 => uint) public payloadSizeLimitLookup;\\n    address public precrime;\\n\\n    event SetPrecrime(address precrime);\\n    event SetTrustedRemote(uint16 _remoteChainId, bytes _path);\\n    event SetTrustedRemoteAddress(uint16 _remoteChainId, bytes _remoteAddress);\\n    event SetMinDstGas(uint16 _dstChainId, uint16 _type, uint _minDstGas);\\n\\n    constructor(address _endpoint) {\\n        lzEndpoint = ILayerZeroEndpoint(_endpoint);\\n    }\\n\\n    function lzReceive(\\n        uint16 _srcChainId,\\n        bytes calldata _srcAddress,\\n        uint64 _nonce,\\n        bytes calldata _payload\\n    ) public virtual override {\\n        // lzReceive must be called by the endpoint for security\\n        require(_msgSender() == address(lzEndpoint), \\\"LzApp: invalid endpoint caller\\\");\\n\\n        bytes memory trustedRemote = trustedRemoteLookup[_srcChainId];\\n        // if will still block the message pathway from (srcChainId, srcAddress). should not receive message from untrusted remote.\\n        require(\\n            _srcAddress.length == trustedRemote.length && trustedRemote.length > 0 && keccak256(_srcAddress) == keccak256(trustedRemote),\\n            \\\"LzApp: invalid source sending contract\\\"\\n        );\\n\\n        _blockingLzReceive(_srcChainId, _srcAddress, _nonce, _payload);\\n    }\\n\\n    // abstract function - the default behaviour of LayerZero is blocking. See: NonblockingLzApp if you dont need to enforce ordered messaging\\n    function _blockingLzReceive(\\n        uint16 _srcChainId,\\n        bytes memory _srcAddress,\\n        uint64 _nonce,\\n        bytes memory _payload\\n    ) internal virtual;\\n\\n    function _lzSend(\\n        uint16 _dstChainId,\\n        bytes memory _payload,\\n        address payable _refundAddress,\\n        address _zroPaymentAddress,\\n        bytes memory _adapterParams,\\n        uint _nativeFee\\n    ) internal virtual {\\n        bytes memory trustedRemote = trustedRemoteLookup[_dstChainId];\\n        require(trustedRemote.length != 0, \\\"LzApp: destination chain is not a trusted source\\\");\\n        _checkPayloadSize(_dstChainId, _payload.length);\\n        lzEndpoint.send{value: _nativeFee}(_dstChainId, trustedRemote, _payload, _refundAddress, _zroPaymentAddress, _adapterParams);\\n    }\\n\\n    function _checkGasLimit(\\n        uint16 _dstChainId,\\n        uint16 _type,\\n        bytes memory _adapterParams,\\n        uint _extraGas\\n    ) internal view virtual {\\n        uint providedGasLimit = _getGasLimit(_adapterParams);\\n        uint minGasLimit = minDstGasLookup[_dstChainId][_type];\\n        require(minGasLimit > 0, \\\"LzApp: minGasLimit not set\\\");\\n        require(providedGasLimit >= minGasLimit + _extraGas, \\\"LzApp: gas limit is too low\\\");\\n    }\\n\\n    function _getGasLimit(bytes memory _adapterParams) internal pure virtual returns (uint gasLimit) {\\n        require(_adapterParams.length >= 34, \\\"LzApp: invalid adapterParams\\\");\\n        assembly {\\n            gasLimit := mload(add(_adapterParams, 34))\\n        }\\n    }\\n\\n    function _checkPayloadSize(uint16 _dstChainId, uint _payloadSize) internal view virtual {\\n        uint payloadSizeLimit = payloadSizeLimitLookup[_dstChainId];\\n        if (payloadSizeLimit == 0) {\\n            // use default if not set\\n            payloadSizeLimit = DEFAULT_PAYLOAD_SIZE_LIMIT;\\n        }\\n        require(_payloadSize <= payloadSizeLimit, \\\"LzApp: payload size is too large\\\");\\n    }\\n\\n    //---------------------------UserApplication config----------------------------------------\\n    function getConfig(\\n        uint16 _version,\\n        uint16 _chainId,\\n        address,\\n        uint _configType\\n    ) external view returns (bytes memory) {\\n        return lzEndpoint.getConfig(_version, _chainId, address(this), _configType);\\n    }\\n\\n    // generic config for LayerZero user Application\\n    function setConfig(\\n        uint16 _version,\\n        uint16 _chainId,\\n        uint _configType,\\n        bytes calldata _config\\n    ) external override onlyOwner {\\n        lzEndpoint.setConfig(_version, _chainId, _configType, _config);\\n    }\\n\\n    function setSendVersion(uint16 _version) external override onlyOwner {\\n        lzEndpoint.setSendVersion(_version);\\n    }\\n\\n    function setReceiveVersion(uint16 _version) external override onlyOwner {\\n        lzEndpoint.setReceiveVersion(_version);\\n    }\\n\\n    function forceResumeReceive(uint16 _srcChainId, bytes calldata _srcAddress) external override onlyOwner {\\n        lzEndpoint.forceResumeReceive(_srcChainId, _srcAddress);\\n    }\\n\\n    // _path = abi.encodePacked(remoteAddress, localAddress)\\n    // this function set the trusted path for the cross-chain communication\\n    function setTrustedRemote(uint16 _remoteChainId, bytes calldata _path) external onlyOwner {\\n        trustedRemoteLookup[_remoteChainId] = _path;\\n        emit SetTrustedRemote(_remoteChainId, _path);\\n    }\\n\\n    function setTrustedRemoteAddress(uint16 _remoteChainId, bytes calldata _remoteAddress) external onlyOwner {\\n        trustedRemoteLookup[_remoteChainId] = abi.encodePacked(_remoteAddress, address(this));\\n        emit SetTrustedRemoteAddress(_remoteChainId, _remoteAddress);\\n    }\\n\\n    function getTrustedRemoteAddress(uint16 _remoteChainId) external view returns (bytes memory) {\\n        bytes memory path = trustedRemoteLookup[_remoteChainId];\\n        require(path.length != 0, \\\"LzApp: no trusted path record\\\");\\n        return path.slice(0, path.length - 20); // the last 20 bytes should be address(this)\\n    }\\n\\n    function setPrecrime(address _precrime) external onlyOwner {\\n        precrime = _precrime;\\n        emit SetPrecrime(_precrime);\\n    }\\n\\n    function setMinDstGas(\\n        uint16 _dstChainId,\\n        uint16 _packetType,\\n        uint _minGas\\n    ) external onlyOwner {\\n        minDstGasLookup[_dstChainId][_packetType] = _minGas;\\n        emit SetMinDstGas(_dstChainId, _packetType, _minGas);\\n    }\\n\\n    // if the size is 0, it means default size limit\\n    function setPayloadSizeLimit(uint16 _dstChainId, uint _size) external onlyOwner {\\n        payloadSizeLimitLookup[_dstChainId] = _size;\\n    }\\n\\n    //--------------------------- VIEW FUNCTION ----------------------------------------\\n    function isTrustedRemote(uint16 _srcChainId, bytes calldata _srcAddress) external view returns (bool) {\\n        bytes memory trustedSource = trustedRemoteLookup[_srcChainId];\\n        return keccak256(trustedSource) == keccak256(_srcAddress);\\n    }\\n}\\n\",\"keccak256\":\"0x309c994bdcf69ad63c6789694a28eb72a773e2d9db58fe572ab2b34a475972ce\",\"license\":\"MIT\"},\"@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroEndpoint.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.5.0;\\n\\nimport \\\"./ILayerZeroUserApplicationConfig.sol\\\";\\n\\ninterface ILayerZeroEndpoint is ILayerZeroUserApplicationConfig {\\n    // @notice send a LayerZero message to the specified address at a LayerZero endpoint.\\n    // @param _dstChainId - the destination chain identifier\\n    // @param _destination - the address on destination chain (in bytes). address length/format may vary by chains\\n    // @param _payload - a custom bytes payload to send to the destination contract\\n    // @param _refundAddress - if the source transaction is cheaper than the amount of value passed, refund the additional amount to this address\\n    // @param _zroPaymentAddress - the address of the ZRO token holder who would pay for the transaction\\n    // @param _adapterParams - parameters for custom functionality. e.g. receive airdropped native gas from the relayer on destination\\n    function send(\\n        uint16 _dstChainId,\\n        bytes calldata _destination,\\n        bytes calldata _payload,\\n        address payable _refundAddress,\\n        address _zroPaymentAddress,\\n        bytes calldata _adapterParams\\n    ) external payable;\\n\\n    // @notice used by the messaging library to publish verified payload\\n    // @param _srcChainId - the source chain identifier\\n    // @param _srcAddress - the source contract (as bytes) at the source chain\\n    // @param _dstAddress - the address on destination chain\\n    // @param _nonce - the unbound message ordering nonce\\n    // @param _gasLimit - the gas limit for external contract execution\\n    // @param _payload - verified payload to send to the destination contract\\n    function receivePayload(\\n        uint16 _srcChainId,\\n        bytes calldata _srcAddress,\\n        address _dstAddress,\\n        uint64 _nonce,\\n        uint _gasLimit,\\n        bytes calldata _payload\\n    ) external;\\n\\n    // @notice get the inboundNonce of a lzApp from a source chain which could be EVM or non-EVM chain\\n    // @param _srcChainId - the source chain identifier\\n    // @param _srcAddress - the source chain contract address\\n    function getInboundNonce(uint16 _srcChainId, bytes calldata _srcAddress) external view returns (uint64);\\n\\n    // @notice get the outboundNonce from this source chain which, consequently, is always an EVM\\n    // @param _srcAddress - the source chain contract address\\n    function getOutboundNonce(uint16 _dstChainId, address _srcAddress) external view returns (uint64);\\n\\n    // @notice gets a quote in source native gas, for the amount that send() requires to pay for message delivery\\n    // @param _dstChainId - the destination chain identifier\\n    // @param _userApplication - the user app address on this EVM chain\\n    // @param _payload - the custom message to send over LayerZero\\n    // @param _payInZRO - if false, user app pays the protocol fee in native token\\n    // @param _adapterParam - parameters for the adapter service, e.g. send some dust native token to dstChain\\n    function estimateFees(\\n        uint16 _dstChainId,\\n        address _userApplication,\\n        bytes calldata _payload,\\n        bool _payInZRO,\\n        bytes calldata _adapterParam\\n    ) external view returns (uint nativeFee, uint zroFee);\\n\\n    // @notice get this Endpoint's immutable source identifier\\n    function getChainId() external view returns (uint16);\\n\\n    // @notice the interface to retry failed message on this Endpoint destination\\n    // @param _srcChainId - the source chain identifier\\n    // @param _srcAddress - the source chain contract address\\n    // @param _payload - the payload to be retried\\n    function retryPayload(\\n        uint16 _srcChainId,\\n        bytes calldata _srcAddress,\\n        bytes calldata _payload\\n    ) external;\\n\\n    // @notice query if any STORED payload (message blocking) at the endpoint.\\n    // @param _srcChainId - the source chain identifier\\n    // @param _srcAddress - the source chain contract address\\n    function hasStoredPayload(uint16 _srcChainId, bytes calldata _srcAddress) external view returns (bool);\\n\\n    // @notice query if the _libraryAddress is valid for sending msgs.\\n    // @param _userApplication - the user app address on this EVM chain\\n    function getSendLibraryAddress(address _userApplication) external view returns (address);\\n\\n    // @notice query if the _libraryAddress is valid for receiving msgs.\\n    // @param _userApplication - the user app address on this EVM chain\\n    function getReceiveLibraryAddress(address _userApplication) external view returns (address);\\n\\n    // @notice query if the non-reentrancy guard for send() is on\\n    // @return true if the guard is on. false otherwise\\n    function isSendingPayload() external view returns (bool);\\n\\n    // @notice query if the non-reentrancy guard for receive() is on\\n    // @return true if the guard is on. false otherwise\\n    function isReceivingPayload() external view returns (bool);\\n\\n    // @notice get the configuration of the LayerZero messaging library of the specified version\\n    // @param _version - messaging library version\\n    // @param _chainId - the chainId for the pending config change\\n    // @param _userApplication - the contract address of the user application\\n    // @param _configType - type of configuration. every messaging library has its own convention.\\n    function getConfig(\\n        uint16 _version,\\n        uint16 _chainId,\\n        address _userApplication,\\n        uint _configType\\n    ) external view returns (bytes memory);\\n\\n    // @notice get the send() LayerZero messaging library version\\n    // @param _userApplication - the contract address of the user application\\n    function getSendVersion(address _userApplication) external view returns (uint16);\\n\\n    // @notice get the lzReceive() LayerZero messaging library version\\n    // @param _userApplication - the contract address of the user application\\n    function getReceiveVersion(address _userApplication) external view returns (uint16);\\n}\\n\",\"keccak256\":\"0xab7fcacc672251c850f00c0abd4100df9afcc4ad70b8d331a2fd4cb07acab9f4\",\"license\":\"MIT\"},\"@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroReceiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.5.0;\\n\\ninterface ILayerZeroReceiver {\\n    // @notice LayerZero endpoint will invoke this function to deliver the message on the destination\\n    // @param _srcChainId - the source endpoint identifier\\n    // @param _srcAddress - the source sending contract address from the source chain\\n    // @param _nonce - the ordered message nonce\\n    // @param _payload - the signed payload is the UA bytes has encoded to be sent\\n    function lzReceive(\\n        uint16 _srcChainId,\\n        bytes calldata _srcAddress,\\n        uint64 _nonce,\\n        bytes calldata _payload\\n    ) external;\\n}\\n\",\"keccak256\":\"0xac1966c1229bd4dc36b6c69eeb94a537bd9aa2198d7623b9ba7f8f7dbe79bb4c\",\"license\":\"MIT\"},\"@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroUserApplicationConfig.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.5.0;\\n\\ninterface ILayerZeroUserApplicationConfig {\\n    // @notice set the configuration of the LayerZero messaging library of the specified version\\n    // @param _version - messaging library version\\n    // @param _chainId - the chainId for the pending config change\\n    // @param _configType - type of configuration. every messaging library has its own convention.\\n    // @param _config - configuration in the bytes. can encode arbitrary content.\\n    function setConfig(\\n        uint16 _version,\\n        uint16 _chainId,\\n        uint _configType,\\n        bytes calldata _config\\n    ) external;\\n\\n    // @notice set the send() LayerZero messaging library version to _version\\n    // @param _version - new messaging library version\\n    function setSendVersion(uint16 _version) external;\\n\\n    // @notice set the lzReceive() LayerZero messaging library version to _version\\n    // @param _version - new messaging library version\\n    function setReceiveVersion(uint16 _version) external;\\n\\n    // @notice Only when the UA needs to resume the message flow in blocking mode and clear the stored payload\\n    // @param _srcChainId - the chainId of the source chain\\n    // @param _srcAddress - the contract address of the source contract at the source chain\\n    function forceResumeReceive(uint16 _srcChainId, bytes calldata _srcAddress) external;\\n}\\n\",\"keccak256\":\"0xb4df93aeb0fb46373a4fb728ad2603edc8b9a1577eee8d801768dc115bf96498\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1410,"contract":"@layerzerolabs/solidity-examples/contracts/lzApp/LzApp.sol:LzApp","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":455,"contract":"@layerzerolabs/solidity-examples/contracts/lzApp/LzApp.sol:LzApp","label":"trustedRemoteLookup","offset":0,"slot":"1","type":"t_mapping(t_uint16,t_bytes_storage)"},{"astId":461,"contract":"@layerzerolabs/solidity-examples/contracts/lzApp/LzApp.sol:LzApp","label":"minDstGasLookup","offset":0,"slot":"2","type":"t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))"},{"astId":465,"contract":"@layerzerolabs/solidity-examples/contracts/lzApp/LzApp.sol:LzApp","label":"payloadSizeLimitLookup","offset":0,"slot":"3","type":"t_mapping(t_uint16,t_uint256)"},{"astId":467,"contract":"@layerzerolabs/solidity-examples/contracts/lzApp/LzApp.sol:LzApp","label":"precrime","offset":0,"slot":"4","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bytes_storage":{"encoding":"bytes","label":"bytes","numberOfBytes":"32"},"t_mapping(t_uint16,t_bytes_storage)":{"encoding":"mapping","key":"t_uint16","label":"mapping(uint16 => bytes)","numberOfBytes":"32","value":"t_bytes_storage"},"t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))":{"encoding":"mapping","key":"t_uint16","label":"mapping(uint16 => mapping(uint16 => uint256))","numberOfBytes":"32","value":"t_mapping(t_uint16,t_uint256)"},"t_mapping(t_uint16,t_uint256)":{"encoding":"mapping","key":"t_uint16","label":"mapping(uint16 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_uint16":{"encoding":"inplace","label":"uint16","numberOfBytes":"2"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@layerzerolabs/solidity-examples/contracts/lzApp/NonblockingLzApp.sol":{"NonblockingLzApp":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"indexed":false,"internalType":"bytes","name":"_srcAddress","type":"bytes"},{"indexed":false,"internalType":"uint64","name":"_nonce","type":"uint64"},{"indexed":false,"internalType":"bytes","name":"_payload","type":"bytes"},{"indexed":false,"internalType":"bytes","name":"_reason","type":"bytes"}],"name":"MessageFailed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"indexed":false,"internalType":"bytes","name":"_srcAddress","type":"bytes"},{"indexed":false,"internalType":"uint64","name":"_nonce","type":"uint64"},{"indexed":false,"internalType":"bytes32","name":"_payloadHash","type":"bytes32"}],"name":"RetryMessageSuccess","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"_dstChainId","type":"uint16"},{"indexed":false,"internalType":"uint16","name":"_type","type":"uint16"},{"indexed":false,"internalType":"uint256","name":"_minDstGas","type":"uint256"}],"name":"SetMinDstGas","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"precrime","type":"address"}],"name":"SetPrecrime","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"_remoteChainId","type":"uint16"},{"indexed":false,"internalType":"bytes","name":"_path","type":"bytes"}],"name":"SetTrustedRemote","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"_remoteChainId","type":"uint16"},{"indexed":false,"internalType":"bytes","name":"_remoteAddress","type":"bytes"}],"name":"SetTrustedRemoteAddress","type":"event"},{"inputs":[],"name":"DEFAULT_PAYLOAD_SIZE_LIMIT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"","type":"uint16"},{"internalType":"bytes","name":"","type":"bytes"},{"internalType":"uint64","name":"","type":"uint64"}],"name":"failedMessages","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"}],"name":"forceResumeReceive","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_version","type":"uint16"},{"internalType":"uint16","name":"_chainId","type":"uint16"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"_configType","type":"uint256"}],"name":"getConfig","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_remoteChainId","type":"uint16"}],"name":"getTrustedRemoteAddress","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"}],"name":"isTrustedRemote","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lzEndpoint","outputs":[{"internalType":"contract ILayerZeroEndpoint","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"},{"internalType":"uint64","name":"_nonce","type":"uint64"},{"internalType":"bytes","name":"_payload","type":"bytes"}],"name":"lzReceive","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"","type":"uint16"},{"internalType":"uint16","name":"","type":"uint16"}],"name":"minDstGasLookup","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"},{"internalType":"uint64","name":"_nonce","type":"uint64"},{"internalType":"bytes","name":"_payload","type":"bytes"}],"name":"nonblockingLzReceive","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"","type":"uint16"}],"name":"payloadSizeLimitLookup","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"precrime","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"},{"internalType":"uint64","name":"_nonce","type":"uint64"},{"internalType":"bytes","name":"_payload","type":"bytes"}],"name":"retryMessage","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_version","type":"uint16"},{"internalType":"uint16","name":"_chainId","type":"uint16"},{"internalType":"uint256","name":"_configType","type":"uint256"},{"internalType":"bytes","name":"_config","type":"bytes"}],"name":"setConfig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_dstChainId","type":"uint16"},{"internalType":"uint16","name":"_packetType","type":"uint16"},{"internalType":"uint256","name":"_minGas","type":"uint256"}],"name":"setMinDstGas","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_dstChainId","type":"uint16"},{"internalType":"uint256","name":"_size","type":"uint256"}],"name":"setPayloadSizeLimit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_precrime","type":"address"}],"name":"setPrecrime","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_version","type":"uint16"}],"name":"setReceiveVersion","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_version","type":"uint16"}],"name":"setSendVersion","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_remoteChainId","type":"uint16"},{"internalType":"bytes","name":"_path","type":"bytes"}],"name":"setTrustedRemote","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_remoteChainId","type":"uint16"},{"internalType":"bytes","name":"_remoteAddress","type":"bytes"}],"name":"setTrustedRemoteAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"","type":"uint16"}],"name":"trustedRemoteLookup","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"DEFAULT_PAYLOAD_SIZE_LIMIT()":"c4461834","failedMessages(uint16,bytes,uint64)":"5b8c41e6","forceResumeReceive(uint16,bytes)":"42d65a8d","getConfig(uint16,uint16,address,uint256)":"f5ecbdbc","getTrustedRemoteAddress(uint16)":"9f38369a","isTrustedRemote(uint16,bytes)":"3d8b38f6","lzEndpoint()":"b353aaa7","lzReceive(uint16,bytes,uint64,bytes)":"001d3567","minDstGasLookup(uint16,uint16)":"8cfd8f5c","nonblockingLzReceive(uint16,bytes,uint64,bytes)":"66ad5c8a","owner()":"8da5cb5b","payloadSizeLimitLookup(uint16)":"3f1f4fa4","precrime()":"950c8a74","renounceOwnership()":"715018a6","retryMessage(uint16,bytes,uint64,bytes)":"d1deba1f","setConfig(uint16,uint16,uint256,bytes)":"cbed8b9c","setMinDstGas(uint16,uint16,uint256)":"df2a5b3b","setPayloadSizeLimit(uint16,uint256)":"0df37483","setPrecrime(address)":"baf3292d","setReceiveVersion(uint16)":"10ddb137","setSendVersion(uint16)":"07e0db17","setTrustedRemote(uint16,bytes)":"eb8d72b7","setTrustedRemoteAddress(uint16,bytes)":"a6c3d165","transferOwnership(address)":"f2fde38b","trustedRemoteLookup(uint16)":"7533d788"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_reason\",\"type\":\"bytes\"}],\"name\":\"MessageFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"_payloadHash\",\"type\":\"bytes32\"}],\"name\":\"RetryMessageSuccess\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_type\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_minDstGas\",\"type\":\"uint256\"}],\"name\":\"SetMinDstGas\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"precrime\",\"type\":\"address\"}],\"name\":\"SetPrecrime\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_remoteChainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_path\",\"type\":\"bytes\"}],\"name\":\"SetTrustedRemote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_remoteChainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_remoteAddress\",\"type\":\"bytes\"}],\"name\":\"SetTrustedRemoteAddress\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_PAYLOAD_SIZE_LIMIT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"name\":\"failedMessages\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"}],\"name\":\"forceResumeReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_chainId\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_configType\",\"type\":\"uint256\"}],\"name\":\"getConfig\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_remoteChainId\",\"type\":\"uint16\"}],\"name\":\"getTrustedRemoteAddress\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"}],\"name\":\"isTrustedRemote\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lzEndpoint\",\"outputs\":[{\"internalType\":\"contract ILayerZeroEndpoint\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"}],\"name\":\"lzReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"minDstGasLookup\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"}],\"name\":\"nonblockingLzReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"payloadSizeLimitLookup\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"precrime\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"}],\"name\":\"retryMessage\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_chainId\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"_configType\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_config\",\"type\":\"bytes\"}],\"name\":\"setConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_packetType\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"_minGas\",\"type\":\"uint256\"}],\"name\":\"setMinDstGas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"_size\",\"type\":\"uint256\"}],\"name\":\"setPayloadSizeLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_precrime\",\"type\":\"address\"}],\"name\":\"setPrecrime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"}],\"name\":\"setReceiveVersion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"}],\"name\":\"setSendVersion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_remoteChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_path\",\"type\":\"bytes\"}],\"name\":\"setTrustedRemote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_remoteChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_remoteAddress\",\"type\":\"bytes\"}],\"name\":\"setTrustedRemoteAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"trustedRemoteLookup\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@layerzerolabs/solidity-examples/contracts/lzApp/NonblockingLzApp.sol\":\"NonblockingLzApp\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@layerzerolabs/solidity-examples/contracts/libraries/BytesLib.sol\":{\"content\":\"// SPDX-License-Identifier: Unlicense\\n/*\\n * @title Solidity Bytes Arrays Utils\\n * @author Gon\\u00e7alo S\\u00e1 <goncalo.sa@consensys.net>\\n *\\n * @dev Bytes tightly packed arrays utility library for ethereum contracts written in Solidity.\\n *      The library lets you concatenate, slice and type cast bytes arrays both in memory and storage.\\n */\\npragma solidity >=0.8.0 <0.9.0;\\n\\nlibrary BytesLib {\\n    function concat(bytes memory _preBytes, bytes memory _postBytes) internal pure returns (bytes memory) {\\n        bytes memory tempBytes;\\n\\n        assembly {\\n            // Get a location of some free memory and store it in tempBytes as\\n            // Solidity does for memory variables.\\n            tempBytes := mload(0x40)\\n\\n            // Store the length of the first bytes array at the beginning of\\n            // the memory for tempBytes.\\n            let length := mload(_preBytes)\\n            mstore(tempBytes, length)\\n\\n            // Maintain a memory counter for the current write location in the\\n            // temp bytes array by adding the 32 bytes for the array length to\\n            // the starting location.\\n            let mc := add(tempBytes, 0x20)\\n            // Stop copying when the memory counter reaches the length of the\\n            // first bytes array.\\n            let end := add(mc, length)\\n\\n            for {\\n                // Initialize a copy counter to the start of the _preBytes data,\\n                // 32 bytes into its memory.\\n                let cc := add(_preBytes, 0x20)\\n            } lt(mc, end) {\\n                // Increase both counters by 32 bytes each iteration.\\n                mc := add(mc, 0x20)\\n                cc := add(cc, 0x20)\\n            } {\\n                // Write the _preBytes data into the tempBytes memory 32 bytes\\n                // at a time.\\n                mstore(mc, mload(cc))\\n            }\\n\\n            // Add the length of _postBytes to the current length of tempBytes\\n            // and store it as the new length in the first 32 bytes of the\\n            // tempBytes memory.\\n            length := mload(_postBytes)\\n            mstore(tempBytes, add(length, mload(tempBytes)))\\n\\n            // Move the memory counter back from a multiple of 0x20 to the\\n            // actual end of the _preBytes data.\\n            mc := end\\n            // Stop copying when the memory counter reaches the new combined\\n            // length of the arrays.\\n            end := add(mc, length)\\n\\n            for {\\n                let cc := add(_postBytes, 0x20)\\n            } lt(mc, end) {\\n                mc := add(mc, 0x20)\\n                cc := add(cc, 0x20)\\n            } {\\n                mstore(mc, mload(cc))\\n            }\\n\\n            // Update the free-memory pointer by padding our last write location\\n            // to 32 bytes: add 31 bytes to the end of tempBytes to move to the\\n            // next 32 byte block, then round down to the nearest multiple of\\n            // 32. If the sum of the length of the two arrays is zero then add\\n            // one before rounding down to leave a blank 32 bytes (the length block with 0).\\n            mstore(\\n                0x40,\\n                and(\\n                    add(add(end, iszero(add(length, mload(_preBytes)))), 31),\\n                    not(31) // Round down to the nearest 32 bytes.\\n                )\\n            )\\n        }\\n\\n        return tempBytes;\\n    }\\n\\n    function concatStorage(bytes storage _preBytes, bytes memory _postBytes) internal {\\n        assembly {\\n            // Read the first 32 bytes of _preBytes storage, which is the length\\n            // of the array. (We don't need to use the offset into the slot\\n            // because arrays use the entire slot.)\\n            let fslot := sload(_preBytes.slot)\\n            // Arrays of 31 bytes or less have an even value in their slot,\\n            // while longer arrays have an odd value. The actual length is\\n            // the slot divided by two for odd values, and the lowest order\\n            // byte divided by two for even values.\\n            // If the slot is even, bitwise and the slot with 255 and divide by\\n            // two to get the length. If the slot is odd, bitwise and the slot\\n            // with -1 and divide by two.\\n            let slength := div(and(fslot, sub(mul(0x100, iszero(and(fslot, 1))), 1)), 2)\\n            let mlength := mload(_postBytes)\\n            let newlength := add(slength, mlength)\\n            // slength can contain both the length and contents of the array\\n            // if length < 32 bytes so let's prepare for that\\n            // v. http://solidity.readthedocs.io/en/latest/miscellaneous.html#layout-of-state-variables-in-storage\\n            switch add(lt(slength, 32), lt(newlength, 32))\\n            case 2 {\\n                // Since the new array still fits in the slot, we just need to\\n                // update the contents of the slot.\\n                // uint256(bytes_storage) = uint256(bytes_storage) + uint256(bytes_memory) + new_length\\n                sstore(\\n                    _preBytes.slot,\\n                    // all the modifications to the slot are inside this\\n                    // next block\\n                    add(\\n                        // we can just add to the slot contents because the\\n                        // bytes we want to change are the LSBs\\n                        fslot,\\n                        add(\\n                            mul(\\n                                div(\\n                                    // load the bytes from memory\\n                                    mload(add(_postBytes, 0x20)),\\n                                    // zero all bytes to the right\\n                                    exp(0x100, sub(32, mlength))\\n                                ),\\n                                // and now shift left the number of bytes to\\n                                // leave space for the length in the slot\\n                                exp(0x100, sub(32, newlength))\\n                            ),\\n                            // increase length by the double of the memory\\n                            // bytes length\\n                            mul(mlength, 2)\\n                        )\\n                    )\\n                )\\n            }\\n            case 1 {\\n                // The stored value fits in the slot, but the combined value\\n                // will exceed it.\\n                // get the keccak hash to get the contents of the array\\n                mstore(0x0, _preBytes.slot)\\n                let sc := add(keccak256(0x0, 0x20), div(slength, 32))\\n\\n                // save new length\\n                sstore(_preBytes.slot, add(mul(newlength, 2), 1))\\n\\n                // The contents of the _postBytes array start 32 bytes into\\n                // the structure. Our first read should obtain the `submod`\\n                // bytes that can fit into the unused space in the last word\\n                // of the stored array. To get this, we read 32 bytes starting\\n                // from `submod`, so the data we read overlaps with the array\\n                // contents by `submod` bytes. Masking the lowest-order\\n                // `submod` bytes allows us to add that value directly to the\\n                // stored value.\\n\\n                let submod := sub(32, slength)\\n                let mc := add(_postBytes, submod)\\n                let end := add(_postBytes, mlength)\\n                let mask := sub(exp(0x100, submod), 1)\\n\\n                sstore(sc, add(and(fslot, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00), and(mload(mc), mask)))\\n\\n                for {\\n                    mc := add(mc, 0x20)\\n                    sc := add(sc, 1)\\n                } lt(mc, end) {\\n                    sc := add(sc, 1)\\n                    mc := add(mc, 0x20)\\n                } {\\n                    sstore(sc, mload(mc))\\n                }\\n\\n                mask := exp(0x100, sub(mc, end))\\n\\n                sstore(sc, mul(div(mload(mc), mask), mask))\\n            }\\n            default {\\n                // get the keccak hash to get the contents of the array\\n                mstore(0x0, _preBytes.slot)\\n                // Start copying to the last used word of the stored array.\\n                let sc := add(keccak256(0x0, 0x20), div(slength, 32))\\n\\n                // save new length\\n                sstore(_preBytes.slot, add(mul(newlength, 2), 1))\\n\\n                // Copy over the first `submod` bytes of the new data as in\\n                // case 1 above.\\n                let slengthmod := mod(slength, 32)\\n                let mlengthmod := mod(mlength, 32)\\n                let submod := sub(32, slengthmod)\\n                let mc := add(_postBytes, submod)\\n                let end := add(_postBytes, mlength)\\n                let mask := sub(exp(0x100, submod), 1)\\n\\n                sstore(sc, add(sload(sc), and(mload(mc), mask)))\\n\\n                for {\\n                    sc := add(sc, 1)\\n                    mc := add(mc, 0x20)\\n                } lt(mc, end) {\\n                    sc := add(sc, 1)\\n                    mc := add(mc, 0x20)\\n                } {\\n                    sstore(sc, mload(mc))\\n                }\\n\\n                mask := exp(0x100, sub(mc, end))\\n\\n                sstore(sc, mul(div(mload(mc), mask), mask))\\n            }\\n        }\\n    }\\n\\n    function slice(\\n        bytes memory _bytes,\\n        uint _start,\\n        uint _length\\n    ) internal pure returns (bytes memory) {\\n        require(_length + 31 >= _length, \\\"slice_overflow\\\");\\n        require(_bytes.length >= _start + _length, \\\"slice_outOfBounds\\\");\\n\\n        bytes memory tempBytes;\\n\\n        assembly {\\n            switch iszero(_length)\\n            case 0 {\\n                // Get a location of some free memory and store it in tempBytes as\\n                // Solidity does for memory variables.\\n                tempBytes := mload(0x40)\\n\\n                // The first word of the slice result is potentially a partial\\n                // word read from the original array. To read it, we calculate\\n                // the length of that partial word and start copying that many\\n                // bytes into the array. The first word we copy will start with\\n                // data we don't care about, but the last `lengthmod` bytes will\\n                // land at the beginning of the contents of the new array. When\\n                // we're done copying, we overwrite the full first word with\\n                // the actual length of the slice.\\n                let lengthmod := and(_length, 31)\\n\\n                // The multiplication in the next line is necessary\\n                // because when slicing multiples of 32 bytes (lengthmod == 0)\\n                // the following copy loop was copying the origin's length\\n                // and then ending prematurely not copying everything it should.\\n                let mc := add(add(tempBytes, lengthmod), mul(0x20, iszero(lengthmod)))\\n                let end := add(mc, _length)\\n\\n                for {\\n                    // The multiplication in the next line has the same exact purpose\\n                    // as the one above.\\n                    let cc := add(add(add(_bytes, lengthmod), mul(0x20, iszero(lengthmod))), _start)\\n                } lt(mc, end) {\\n                    mc := add(mc, 0x20)\\n                    cc := add(cc, 0x20)\\n                } {\\n                    mstore(mc, mload(cc))\\n                }\\n\\n                mstore(tempBytes, _length)\\n\\n                //update free-memory pointer\\n                //allocating the array padded to 32 bytes like the compiler does now\\n                mstore(0x40, and(add(mc, 31), not(31)))\\n            }\\n            //if we want a zero-length slice let's just return a zero-length array\\n            default {\\n                tempBytes := mload(0x40)\\n                //zero out the 32 bytes slice we are about to return\\n                //we need to do it because Solidity does not garbage collect\\n                mstore(tempBytes, 0)\\n\\n                mstore(0x40, add(tempBytes, 0x20))\\n            }\\n        }\\n\\n        return tempBytes;\\n    }\\n\\n    function toAddress(bytes memory _bytes, uint _start) internal pure returns (address) {\\n        require(_bytes.length >= _start + 20, \\\"toAddress_outOfBounds\\\");\\n        address tempAddress;\\n\\n        assembly {\\n            tempAddress := div(mload(add(add(_bytes, 0x20), _start)), 0x1000000000000000000000000)\\n        }\\n\\n        return tempAddress;\\n    }\\n\\n    function toUint8(bytes memory _bytes, uint _start) internal pure returns (uint8) {\\n        require(_bytes.length >= _start + 1, \\\"toUint8_outOfBounds\\\");\\n        uint8 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x1), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint16(bytes memory _bytes, uint _start) internal pure returns (uint16) {\\n        require(_bytes.length >= _start + 2, \\\"toUint16_outOfBounds\\\");\\n        uint16 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x2), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint32(bytes memory _bytes, uint _start) internal pure returns (uint32) {\\n        require(_bytes.length >= _start + 4, \\\"toUint32_outOfBounds\\\");\\n        uint32 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x4), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint64(bytes memory _bytes, uint _start) internal pure returns (uint64) {\\n        require(_bytes.length >= _start + 8, \\\"toUint64_outOfBounds\\\");\\n        uint64 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x8), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint96(bytes memory _bytes, uint _start) internal pure returns (uint96) {\\n        require(_bytes.length >= _start + 12, \\\"toUint96_outOfBounds\\\");\\n        uint96 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0xc), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint128(bytes memory _bytes, uint _start) internal pure returns (uint128) {\\n        require(_bytes.length >= _start + 16, \\\"toUint128_outOfBounds\\\");\\n        uint128 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x10), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint256(bytes memory _bytes, uint _start) internal pure returns (uint) {\\n        require(_bytes.length >= _start + 32, \\\"toUint256_outOfBounds\\\");\\n        uint tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x20), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toBytes32(bytes memory _bytes, uint _start) internal pure returns (bytes32) {\\n        require(_bytes.length >= _start + 32, \\\"toBytes32_outOfBounds\\\");\\n        bytes32 tempBytes32;\\n\\n        assembly {\\n            tempBytes32 := mload(add(add(_bytes, 0x20), _start))\\n        }\\n\\n        return tempBytes32;\\n    }\\n\\n    function equal(bytes memory _preBytes, bytes memory _postBytes) internal pure returns (bool) {\\n        bool success = true;\\n\\n        assembly {\\n            let length := mload(_preBytes)\\n\\n            // if lengths don't match the arrays are not equal\\n            switch eq(length, mload(_postBytes))\\n            case 1 {\\n                // cb is a circuit breaker in the for loop since there's\\n                //  no said feature for inline assembly loops\\n                // cb = 1 - don't breaker\\n                // cb = 0 - break\\n                let cb := 1\\n\\n                let mc := add(_preBytes, 0x20)\\n                let end := add(mc, length)\\n\\n                for {\\n                    let cc := add(_postBytes, 0x20)\\n                    // the next line is the loop condition:\\n                    // while(uint256(mc < end) + cb == 2)\\n                } eq(add(lt(mc, end), cb), 2) {\\n                    mc := add(mc, 0x20)\\n                    cc := add(cc, 0x20)\\n                } {\\n                    // if any of these checks fails then arrays are not equal\\n                    if iszero(eq(mload(mc), mload(cc))) {\\n                        // unsuccess:\\n                        success := 0\\n                        cb := 0\\n                    }\\n                }\\n            }\\n            default {\\n                // unsuccess:\\n                success := 0\\n            }\\n        }\\n\\n        return success;\\n    }\\n\\n    function equalStorage(bytes storage _preBytes, bytes memory _postBytes) internal view returns (bool) {\\n        bool success = true;\\n\\n        assembly {\\n            // we know _preBytes_offset is 0\\n            let fslot := sload(_preBytes.slot)\\n            // Decode the length of the stored array like in concatStorage().\\n            let slength := div(and(fslot, sub(mul(0x100, iszero(and(fslot, 1))), 1)), 2)\\n            let mlength := mload(_postBytes)\\n\\n            // if lengths don't match the arrays are not equal\\n            switch eq(slength, mlength)\\n            case 1 {\\n                // slength can contain both the length and contents of the array\\n                // if length < 32 bytes so let's prepare for that\\n                // v. http://solidity.readthedocs.io/en/latest/miscellaneous.html#layout-of-state-variables-in-storage\\n                if iszero(iszero(slength)) {\\n                    switch lt(slength, 32)\\n                    case 1 {\\n                        // blank the last byte which is the length\\n                        fslot := mul(div(fslot, 0x100), 0x100)\\n\\n                        if iszero(eq(fslot, mload(add(_postBytes, 0x20)))) {\\n                            // unsuccess:\\n                            success := 0\\n                        }\\n                    }\\n                    default {\\n                        // cb is a circuit breaker in the for loop since there's\\n                        //  no said feature for inline assembly loops\\n                        // cb = 1 - don't breaker\\n                        // cb = 0 - break\\n                        let cb := 1\\n\\n                        // get the keccak hash to get the contents of the array\\n                        mstore(0x0, _preBytes.slot)\\n                        let sc := keccak256(0x0, 0x20)\\n\\n                        let mc := add(_postBytes, 0x20)\\n                        let end := add(mc, mlength)\\n\\n                        // the next line is the loop condition:\\n                        // while(uint256(mc < end) + cb == 2)\\n                        for {\\n\\n                        } eq(add(lt(mc, end), cb), 2) {\\n                            sc := add(sc, 1)\\n                            mc := add(mc, 0x20)\\n                        } {\\n                            if iszero(eq(sload(sc), mload(mc))) {\\n                                // unsuccess:\\n                                success := 0\\n                                cb := 0\\n                            }\\n                        }\\n                    }\\n                }\\n            }\\n            default {\\n                // unsuccess:\\n                success := 0\\n            }\\n        }\\n\\n        return success;\\n    }\\n}\\n\",\"keccak256\":\"0x7e64cccdf22a03f513d94960f2145dd801fb5ec88d971de079b5186a9f5e93c4\",\"license\":\"Unlicense\"},\"@layerzerolabs/solidity-examples/contracts/libraries/ExcessivelySafeCall.sol\":{\"content\":\"// SPDX-License-Identifier: MIT OR Apache-2.0\\npragma solidity >=0.7.6;\\n\\nlibrary ExcessivelySafeCall {\\n    uint constant LOW_28_MASK = 0x00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff;\\n\\n    /// @notice Use when you _really_ really _really_ don't trust the called\\n    /// contract. This prevents the called contract from causing reversion of\\n    /// the caller in as many ways as we can.\\n    /// @dev The main difference between this and a solidity low-level call is\\n    /// that we limit the number of bytes that the callee can cause to be\\n    /// copied to caller memory. This prevents stupid things like malicious\\n    /// contracts returning 10,000,000 bytes causing a local OOG when copying\\n    /// to memory.\\n    /// @param _target The address to call\\n    /// @param _gas The amount of gas to forward to the remote contract\\n    /// @param _maxCopy The maximum number of bytes of returndata to copy\\n    /// to memory.\\n    /// @param _calldata The data to send to the remote contract\\n    /// @return success and returndata, as `.call()`. Returndata is capped to\\n    /// `_maxCopy` bytes.\\n    function excessivelySafeCall(\\n        address _target,\\n        uint _gas,\\n        uint16 _maxCopy,\\n        bytes memory _calldata\\n    ) internal returns (bool, bytes memory) {\\n        // set up for assembly call\\n        uint _toCopy;\\n        bool _success;\\n        bytes memory _returnData = new bytes(_maxCopy);\\n        // dispatch message to recipient\\n        // by assembly calling \\\"handle\\\" function\\n        // we call via assembly to avoid memcopying a very large returndata\\n        // returned by a malicious contract\\n        assembly {\\n            _success := call(\\n                _gas, // gas\\n                _target, // recipient\\n                0, // ether value\\n                add(_calldata, 0x20), // inloc\\n                mload(_calldata), // inlen\\n                0, // outloc\\n                0 // outlen\\n            )\\n            // limit our copy to 256 bytes\\n            _toCopy := returndatasize()\\n            if gt(_toCopy, _maxCopy) {\\n                _toCopy := _maxCopy\\n            }\\n            // Store the length of the copied bytes\\n            mstore(_returnData, _toCopy)\\n            // copy the bytes from returndata[0:_toCopy]\\n            returndatacopy(add(_returnData, 0x20), 0, _toCopy)\\n        }\\n        return (_success, _returnData);\\n    }\\n\\n    /// @notice Use when you _really_ really _really_ don't trust the called\\n    /// contract. This prevents the called contract from causing reversion of\\n    /// the caller in as many ways as we can.\\n    /// @dev The main difference between this and a solidity low-level call is\\n    /// that we limit the number of bytes that the callee can cause to be\\n    /// copied to caller memory. This prevents stupid things like malicious\\n    /// contracts returning 10,000,000 bytes causing a local OOG when copying\\n    /// to memory.\\n    /// @param _target The address to call\\n    /// @param _gas The amount of gas to forward to the remote contract\\n    /// @param _maxCopy The maximum number of bytes of returndata to copy\\n    /// to memory.\\n    /// @param _calldata The data to send to the remote contract\\n    /// @return success and returndata, as `.call()`. Returndata is capped to\\n    /// `_maxCopy` bytes.\\n    function excessivelySafeStaticCall(\\n        address _target,\\n        uint _gas,\\n        uint16 _maxCopy,\\n        bytes memory _calldata\\n    ) internal view returns (bool, bytes memory) {\\n        // set up for assembly call\\n        uint _toCopy;\\n        bool _success;\\n        bytes memory _returnData = new bytes(_maxCopy);\\n        // dispatch message to recipient\\n        // by assembly calling \\\"handle\\\" function\\n        // we call via assembly to avoid memcopying a very large returndata\\n        // returned by a malicious contract\\n        assembly {\\n            _success := staticcall(\\n                _gas, // gas\\n                _target, // recipient\\n                add(_calldata, 0x20), // inloc\\n                mload(_calldata), // inlen\\n                0, // outloc\\n                0 // outlen\\n            )\\n            // limit our copy to 256 bytes\\n            _toCopy := returndatasize()\\n            if gt(_toCopy, _maxCopy) {\\n                _toCopy := _maxCopy\\n            }\\n            // Store the length of the copied bytes\\n            mstore(_returnData, _toCopy)\\n            // copy the bytes from returndata[0:_toCopy]\\n            returndatacopy(add(_returnData, 0x20), 0, _toCopy)\\n        }\\n        return (_success, _returnData);\\n    }\\n\\n    /**\\n     * @notice Swaps function selectors in encoded contract calls\\n     * @dev Allows reuse of encoded calldata for functions with identical\\n     * argument types but different names. It simply swaps out the first 4 bytes\\n     * for the new selector. This function modifies memory in place, and should\\n     * only be used with caution.\\n     * @param _newSelector The new 4-byte selector\\n     * @param _buf The encoded contract args\\n     */\\n    function swapSelector(bytes4 _newSelector, bytes memory _buf) internal pure {\\n        require(_buf.length >= 4);\\n        uint _mask = LOW_28_MASK;\\n        assembly {\\n            // load the first word of\\n            let _word := mload(add(_buf, 0x20))\\n            // mask out the top 4 bytes\\n            // /x\\n            _word := and(_word, _mask)\\n            _word := or(_newSelector, _word)\\n            mstore(add(_buf, 0x20), _word)\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd4e52af409b5ec80432292d86fb01906785eb78ac31da3bab4565aabcd6e3e56\",\"license\":\"MIT OR Apache-2.0\"},\"@layerzerolabs/solidity-examples/contracts/lzApp/LzApp.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"./interfaces/ILayerZeroReceiver.sol\\\";\\nimport \\\"./interfaces/ILayerZeroUserApplicationConfig.sol\\\";\\nimport \\\"./interfaces/ILayerZeroEndpoint.sol\\\";\\nimport \\\"../libraries/BytesLib.sol\\\";\\n\\n/*\\n * a generic LzReceiver implementation\\n */\\nabstract contract LzApp is Ownable, ILayerZeroReceiver, ILayerZeroUserApplicationConfig {\\n    using BytesLib for bytes;\\n\\n    // ua can not send payload larger than this by default, but it can be changed by the ua owner\\n    uint public constant DEFAULT_PAYLOAD_SIZE_LIMIT = 10000;\\n\\n    ILayerZeroEndpoint public immutable lzEndpoint;\\n    mapping(uint16 => bytes) public trustedRemoteLookup;\\n    mapping(uint16 => mapping(uint16 => uint)) public minDstGasLookup;\\n    mapping(uint16 => uint) public payloadSizeLimitLookup;\\n    address public precrime;\\n\\n    event SetPrecrime(address precrime);\\n    event SetTrustedRemote(uint16 _remoteChainId, bytes _path);\\n    event SetTrustedRemoteAddress(uint16 _remoteChainId, bytes _remoteAddress);\\n    event SetMinDstGas(uint16 _dstChainId, uint16 _type, uint _minDstGas);\\n\\n    constructor(address _endpoint) {\\n        lzEndpoint = ILayerZeroEndpoint(_endpoint);\\n    }\\n\\n    function lzReceive(\\n        uint16 _srcChainId,\\n        bytes calldata _srcAddress,\\n        uint64 _nonce,\\n        bytes calldata _payload\\n    ) public virtual override {\\n        // lzReceive must be called by the endpoint for security\\n        require(_msgSender() == address(lzEndpoint), \\\"LzApp: invalid endpoint caller\\\");\\n\\n        bytes memory trustedRemote = trustedRemoteLookup[_srcChainId];\\n        // if will still block the message pathway from (srcChainId, srcAddress). should not receive message from untrusted remote.\\n        require(\\n            _srcAddress.length == trustedRemote.length && trustedRemote.length > 0 && keccak256(_srcAddress) == keccak256(trustedRemote),\\n            \\\"LzApp: invalid source sending contract\\\"\\n        );\\n\\n        _blockingLzReceive(_srcChainId, _srcAddress, _nonce, _payload);\\n    }\\n\\n    // abstract function - the default behaviour of LayerZero is blocking. See: NonblockingLzApp if you dont need to enforce ordered messaging\\n    function _blockingLzReceive(\\n        uint16 _srcChainId,\\n        bytes memory _srcAddress,\\n        uint64 _nonce,\\n        bytes memory _payload\\n    ) internal virtual;\\n\\n    function _lzSend(\\n        uint16 _dstChainId,\\n        bytes memory _payload,\\n        address payable _refundAddress,\\n        address _zroPaymentAddress,\\n        bytes memory _adapterParams,\\n        uint _nativeFee\\n    ) internal virtual {\\n        bytes memory trustedRemote = trustedRemoteLookup[_dstChainId];\\n        require(trustedRemote.length != 0, \\\"LzApp: destination chain is not a trusted source\\\");\\n        _checkPayloadSize(_dstChainId, _payload.length);\\n        lzEndpoint.send{value: _nativeFee}(_dstChainId, trustedRemote, _payload, _refundAddress, _zroPaymentAddress, _adapterParams);\\n    }\\n\\n    function _checkGasLimit(\\n        uint16 _dstChainId,\\n        uint16 _type,\\n        bytes memory _adapterParams,\\n        uint _extraGas\\n    ) internal view virtual {\\n        uint providedGasLimit = _getGasLimit(_adapterParams);\\n        uint minGasLimit = minDstGasLookup[_dstChainId][_type];\\n        require(minGasLimit > 0, \\\"LzApp: minGasLimit not set\\\");\\n        require(providedGasLimit >= minGasLimit + _extraGas, \\\"LzApp: gas limit is too low\\\");\\n    }\\n\\n    function _getGasLimit(bytes memory _adapterParams) internal pure virtual returns (uint gasLimit) {\\n        require(_adapterParams.length >= 34, \\\"LzApp: invalid adapterParams\\\");\\n        assembly {\\n            gasLimit := mload(add(_adapterParams, 34))\\n        }\\n    }\\n\\n    function _checkPayloadSize(uint16 _dstChainId, uint _payloadSize) internal view virtual {\\n        uint payloadSizeLimit = payloadSizeLimitLookup[_dstChainId];\\n        if (payloadSizeLimit == 0) {\\n            // use default if not set\\n            payloadSizeLimit = DEFAULT_PAYLOAD_SIZE_LIMIT;\\n        }\\n        require(_payloadSize <= payloadSizeLimit, \\\"LzApp: payload size is too large\\\");\\n    }\\n\\n    //---------------------------UserApplication config----------------------------------------\\n    function getConfig(\\n        uint16 _version,\\n        uint16 _chainId,\\n        address,\\n        uint _configType\\n    ) external view returns (bytes memory) {\\n        return lzEndpoint.getConfig(_version, _chainId, address(this), _configType);\\n    }\\n\\n    // generic config for LayerZero user Application\\n    function setConfig(\\n        uint16 _version,\\n        uint16 _chainId,\\n        uint _configType,\\n        bytes calldata _config\\n    ) external override onlyOwner {\\n        lzEndpoint.setConfig(_version, _chainId, _configType, _config);\\n    }\\n\\n    function setSendVersion(uint16 _version) external override onlyOwner {\\n        lzEndpoint.setSendVersion(_version);\\n    }\\n\\n    function setReceiveVersion(uint16 _version) external override onlyOwner {\\n        lzEndpoint.setReceiveVersion(_version);\\n    }\\n\\n    function forceResumeReceive(uint16 _srcChainId, bytes calldata _srcAddress) external override onlyOwner {\\n        lzEndpoint.forceResumeReceive(_srcChainId, _srcAddress);\\n    }\\n\\n    // _path = abi.encodePacked(remoteAddress, localAddress)\\n    // this function set the trusted path for the cross-chain communication\\n    function setTrustedRemote(uint16 _remoteChainId, bytes calldata _path) external onlyOwner {\\n        trustedRemoteLookup[_remoteChainId] = _path;\\n        emit SetTrustedRemote(_remoteChainId, _path);\\n    }\\n\\n    function setTrustedRemoteAddress(uint16 _remoteChainId, bytes calldata _remoteAddress) external onlyOwner {\\n        trustedRemoteLookup[_remoteChainId] = abi.encodePacked(_remoteAddress, address(this));\\n        emit SetTrustedRemoteAddress(_remoteChainId, _remoteAddress);\\n    }\\n\\n    function getTrustedRemoteAddress(uint16 _remoteChainId) external view returns (bytes memory) {\\n        bytes memory path = trustedRemoteLookup[_remoteChainId];\\n        require(path.length != 0, \\\"LzApp: no trusted path record\\\");\\n        return path.slice(0, path.length - 20); // the last 20 bytes should be address(this)\\n    }\\n\\n    function setPrecrime(address _precrime) external onlyOwner {\\n        precrime = _precrime;\\n        emit SetPrecrime(_precrime);\\n    }\\n\\n    function setMinDstGas(\\n        uint16 _dstChainId,\\n        uint16 _packetType,\\n        uint _minGas\\n    ) external onlyOwner {\\n        minDstGasLookup[_dstChainId][_packetType] = _minGas;\\n        emit SetMinDstGas(_dstChainId, _packetType, _minGas);\\n    }\\n\\n    // if the size is 0, it means default size limit\\n    function setPayloadSizeLimit(uint16 _dstChainId, uint _size) external onlyOwner {\\n        payloadSizeLimitLookup[_dstChainId] = _size;\\n    }\\n\\n    //--------------------------- VIEW FUNCTION ----------------------------------------\\n    function isTrustedRemote(uint16 _srcChainId, bytes calldata _srcAddress) external view returns (bool) {\\n        bytes memory trustedSource = trustedRemoteLookup[_srcChainId];\\n        return keccak256(trustedSource) == keccak256(_srcAddress);\\n    }\\n}\\n\",\"keccak256\":\"0x309c994bdcf69ad63c6789694a28eb72a773e2d9db58fe572ab2b34a475972ce\",\"license\":\"MIT\"},\"@layerzerolabs/solidity-examples/contracts/lzApp/NonblockingLzApp.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./LzApp.sol\\\";\\nimport \\\"../libraries/ExcessivelySafeCall.sol\\\";\\n\\n/*\\n * the default LayerZero messaging behaviour is blocking, i.e. any failed message will block the channel\\n * this abstract class try-catch all fail messages and store locally for future retry. hence, non-blocking\\n * NOTE: if the srcAddress is not configured properly, it will still block the message pathway from (srcChainId, srcAddress)\\n */\\nabstract contract NonblockingLzApp is LzApp {\\n    using ExcessivelySafeCall for address;\\n\\n    constructor(address _endpoint) LzApp(_endpoint) {}\\n\\n    mapping(uint16 => mapping(bytes => mapping(uint64 => bytes32))) public failedMessages;\\n\\n    event MessageFailed(uint16 _srcChainId, bytes _srcAddress, uint64 _nonce, bytes _payload, bytes _reason);\\n    event RetryMessageSuccess(uint16 _srcChainId, bytes _srcAddress, uint64 _nonce, bytes32 _payloadHash);\\n\\n    // overriding the virtual function in LzReceiver\\n    function _blockingLzReceive(\\n        uint16 _srcChainId,\\n        bytes memory _srcAddress,\\n        uint64 _nonce,\\n        bytes memory _payload\\n    ) internal virtual override {\\n        (bool success, bytes memory reason) = address(this).excessivelySafeCall(\\n            gasleft(),\\n            150,\\n            abi.encodeWithSelector(this.nonblockingLzReceive.selector, _srcChainId, _srcAddress, _nonce, _payload)\\n        );\\n        // try-catch all errors/exceptions\\n        if (!success) {\\n            _storeFailedMessage(_srcChainId, _srcAddress, _nonce, _payload, reason);\\n        }\\n    }\\n\\n    function _storeFailedMessage(\\n        uint16 _srcChainId,\\n        bytes memory _srcAddress,\\n        uint64 _nonce,\\n        bytes memory _payload,\\n        bytes memory _reason\\n    ) internal virtual {\\n        failedMessages[_srcChainId][_srcAddress][_nonce] = keccak256(_payload);\\n        emit MessageFailed(_srcChainId, _srcAddress, _nonce, _payload, _reason);\\n    }\\n\\n    function nonblockingLzReceive(\\n        uint16 _srcChainId,\\n        bytes calldata _srcAddress,\\n        uint64 _nonce,\\n        bytes calldata _payload\\n    ) public virtual {\\n        // only internal transaction\\n        require(_msgSender() == address(this), \\\"NonblockingLzApp: caller must be LzApp\\\");\\n        _nonblockingLzReceive(_srcChainId, _srcAddress, _nonce, _payload);\\n    }\\n\\n    //@notice override this function\\n    function _nonblockingLzReceive(\\n        uint16 _srcChainId,\\n        bytes memory _srcAddress,\\n        uint64 _nonce,\\n        bytes memory _payload\\n    ) internal virtual;\\n\\n    function retryMessage(\\n        uint16 _srcChainId,\\n        bytes calldata _srcAddress,\\n        uint64 _nonce,\\n        bytes calldata _payload\\n    ) public payable virtual {\\n        // assert there is message to retry\\n        bytes32 payloadHash = failedMessages[_srcChainId][_srcAddress][_nonce];\\n        require(payloadHash != bytes32(0), \\\"NonblockingLzApp: no stored message\\\");\\n        require(keccak256(_payload) == payloadHash, \\\"NonblockingLzApp: invalid payload\\\");\\n        // clear the stored message\\n        failedMessages[_srcChainId][_srcAddress][_nonce] = bytes32(0);\\n        // execute the message. revert if it fails again\\n        _nonblockingLzReceive(_srcChainId, _srcAddress, _nonce, _payload);\\n        emit RetryMessageSuccess(_srcChainId, _srcAddress, _nonce, payloadHash);\\n    }\\n}\\n\",\"keccak256\":\"0x612ff1f2a158b7e64e873885b5ff08afa348998fd9005f384d555d643ba7968d\",\"license\":\"MIT\"},\"@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroEndpoint.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.5.0;\\n\\nimport \\\"./ILayerZeroUserApplicationConfig.sol\\\";\\n\\ninterface ILayerZeroEndpoint is ILayerZeroUserApplicationConfig {\\n    // @notice send a LayerZero message to the specified address at a LayerZero endpoint.\\n    // @param _dstChainId - the destination chain identifier\\n    // @param _destination - the address on destination chain (in bytes). address length/format may vary by chains\\n    // @param _payload - a custom bytes payload to send to the destination contract\\n    // @param _refundAddress - if the source transaction is cheaper than the amount of value passed, refund the additional amount to this address\\n    // @param _zroPaymentAddress - the address of the ZRO token holder who would pay for the transaction\\n    // @param _adapterParams - parameters for custom functionality. e.g. receive airdropped native gas from the relayer on destination\\n    function send(\\n        uint16 _dstChainId,\\n        bytes calldata _destination,\\n        bytes calldata _payload,\\n        address payable _refundAddress,\\n        address _zroPaymentAddress,\\n        bytes calldata _adapterParams\\n    ) external payable;\\n\\n    // @notice used by the messaging library to publish verified payload\\n    // @param _srcChainId - the source chain identifier\\n    // @param _srcAddress - the source contract (as bytes) at the source chain\\n    // @param _dstAddress - the address on destination chain\\n    // @param _nonce - the unbound message ordering nonce\\n    // @param _gasLimit - the gas limit for external contract execution\\n    // @param _payload - verified payload to send to the destination contract\\n    function receivePayload(\\n        uint16 _srcChainId,\\n        bytes calldata _srcAddress,\\n        address _dstAddress,\\n        uint64 _nonce,\\n        uint _gasLimit,\\n        bytes calldata _payload\\n    ) external;\\n\\n    // @notice get the inboundNonce of a lzApp from a source chain which could be EVM or non-EVM chain\\n    // @param _srcChainId - the source chain identifier\\n    // @param _srcAddress - the source chain contract address\\n    function getInboundNonce(uint16 _srcChainId, bytes calldata _srcAddress) external view returns (uint64);\\n\\n    // @notice get the outboundNonce from this source chain which, consequently, is always an EVM\\n    // @param _srcAddress - the source chain contract address\\n    function getOutboundNonce(uint16 _dstChainId, address _srcAddress) external view returns (uint64);\\n\\n    // @notice gets a quote in source native gas, for the amount that send() requires to pay for message delivery\\n    // @param _dstChainId - the destination chain identifier\\n    // @param _userApplication - the user app address on this EVM chain\\n    // @param _payload - the custom message to send over LayerZero\\n    // @param _payInZRO - if false, user app pays the protocol fee in native token\\n    // @param _adapterParam - parameters for the adapter service, e.g. send some dust native token to dstChain\\n    function estimateFees(\\n        uint16 _dstChainId,\\n        address _userApplication,\\n        bytes calldata _payload,\\n        bool _payInZRO,\\n        bytes calldata _adapterParam\\n    ) external view returns (uint nativeFee, uint zroFee);\\n\\n    // @notice get this Endpoint's immutable source identifier\\n    function getChainId() external view returns (uint16);\\n\\n    // @notice the interface to retry failed message on this Endpoint destination\\n    // @param _srcChainId - the source chain identifier\\n    // @param _srcAddress - the source chain contract address\\n    // @param _payload - the payload to be retried\\n    function retryPayload(\\n        uint16 _srcChainId,\\n        bytes calldata _srcAddress,\\n        bytes calldata _payload\\n    ) external;\\n\\n    // @notice query if any STORED payload (message blocking) at the endpoint.\\n    // @param _srcChainId - the source chain identifier\\n    // @param _srcAddress - the source chain contract address\\n    function hasStoredPayload(uint16 _srcChainId, bytes calldata _srcAddress) external view returns (bool);\\n\\n    // @notice query if the _libraryAddress is valid for sending msgs.\\n    // @param _userApplication - the user app address on this EVM chain\\n    function getSendLibraryAddress(address _userApplication) external view returns (address);\\n\\n    // @notice query if the _libraryAddress is valid for receiving msgs.\\n    // @param _userApplication - the user app address on this EVM chain\\n    function getReceiveLibraryAddress(address _userApplication) external view returns (address);\\n\\n    // @notice query if the non-reentrancy guard for send() is on\\n    // @return true if the guard is on. false otherwise\\n    function isSendingPayload() external view returns (bool);\\n\\n    // @notice query if the non-reentrancy guard for receive() is on\\n    // @return true if the guard is on. false otherwise\\n    function isReceivingPayload() external view returns (bool);\\n\\n    // @notice get the configuration of the LayerZero messaging library of the specified version\\n    // @param _version - messaging library version\\n    // @param _chainId - the chainId for the pending config change\\n    // @param _userApplication - the contract address of the user application\\n    // @param _configType - type of configuration. every messaging library has its own convention.\\n    function getConfig(\\n        uint16 _version,\\n        uint16 _chainId,\\n        address _userApplication,\\n        uint _configType\\n    ) external view returns (bytes memory);\\n\\n    // @notice get the send() LayerZero messaging library version\\n    // @param _userApplication - the contract address of the user application\\n    function getSendVersion(address _userApplication) external view returns (uint16);\\n\\n    // @notice get the lzReceive() LayerZero messaging library version\\n    // @param _userApplication - the contract address of the user application\\n    function getReceiveVersion(address _userApplication) external view returns (uint16);\\n}\\n\",\"keccak256\":\"0xab7fcacc672251c850f00c0abd4100df9afcc4ad70b8d331a2fd4cb07acab9f4\",\"license\":\"MIT\"},\"@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroReceiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.5.0;\\n\\ninterface ILayerZeroReceiver {\\n    // @notice LayerZero endpoint will invoke this function to deliver the message on the destination\\n    // @param _srcChainId - the source endpoint identifier\\n    // @param _srcAddress - the source sending contract address from the source chain\\n    // @param _nonce - the ordered message nonce\\n    // @param _payload - the signed payload is the UA bytes has encoded to be sent\\n    function lzReceive(\\n        uint16 _srcChainId,\\n        bytes calldata _srcAddress,\\n        uint64 _nonce,\\n        bytes calldata _payload\\n    ) external;\\n}\\n\",\"keccak256\":\"0xac1966c1229bd4dc36b6c69eeb94a537bd9aa2198d7623b9ba7f8f7dbe79bb4c\",\"license\":\"MIT\"},\"@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroUserApplicationConfig.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.5.0;\\n\\ninterface ILayerZeroUserApplicationConfig {\\n    // @notice set the configuration of the LayerZero messaging library of the specified version\\n    // @param _version - messaging library version\\n    // @param _chainId - the chainId for the pending config change\\n    // @param _configType - type of configuration. every messaging library has its own convention.\\n    // @param _config - configuration in the bytes. can encode arbitrary content.\\n    function setConfig(\\n        uint16 _version,\\n        uint16 _chainId,\\n        uint _configType,\\n        bytes calldata _config\\n    ) external;\\n\\n    // @notice set the send() LayerZero messaging library version to _version\\n    // @param _version - new messaging library version\\n    function setSendVersion(uint16 _version) external;\\n\\n    // @notice set the lzReceive() LayerZero messaging library version to _version\\n    // @param _version - new messaging library version\\n    function setReceiveVersion(uint16 _version) external;\\n\\n    // @notice Only when the UA needs to resume the message flow in blocking mode and clear the stored payload\\n    // @param _srcChainId - the chainId of the source chain\\n    // @param _srcAddress - the contract address of the source contract at the source chain\\n    function forceResumeReceive(uint16 _srcChainId, bytes calldata _srcAddress) external;\\n}\\n\",\"keccak256\":\"0xb4df93aeb0fb46373a4fb728ad2603edc8b9a1577eee8d801768dc115bf96498\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1410,"contract":"@layerzerolabs/solidity-examples/contracts/lzApp/NonblockingLzApp.sol:NonblockingLzApp","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":455,"contract":"@layerzerolabs/solidity-examples/contracts/lzApp/NonblockingLzApp.sol:NonblockingLzApp","label":"trustedRemoteLookup","offset":0,"slot":"1","type":"t_mapping(t_uint16,t_bytes_storage)"},{"astId":461,"contract":"@layerzerolabs/solidity-examples/contracts/lzApp/NonblockingLzApp.sol:NonblockingLzApp","label":"minDstGasLookup","offset":0,"slot":"2","type":"t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))"},{"astId":465,"contract":"@layerzerolabs/solidity-examples/contracts/lzApp/NonblockingLzApp.sol:NonblockingLzApp","label":"payloadSizeLimitLookup","offset":0,"slot":"3","type":"t_mapping(t_uint16,t_uint256)"},{"astId":467,"contract":"@layerzerolabs/solidity-examples/contracts/lzApp/NonblockingLzApp.sol:NonblockingLzApp","label":"precrime","offset":0,"slot":"4","type":"t_address"},{"astId":997,"contract":"@layerzerolabs/solidity-examples/contracts/lzApp/NonblockingLzApp.sol:NonblockingLzApp","label":"failedMessages","offset":0,"slot":"5","type":"t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_bytes_memory_ptr":{"encoding":"bytes","label":"bytes","numberOfBytes":"32"},"t_bytes_storage":{"encoding":"bytes","label":"bytes","numberOfBytes":"32"},"t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32))":{"encoding":"mapping","key":"t_bytes_memory_ptr","label":"mapping(bytes => mapping(uint64 => bytes32))","numberOfBytes":"32","value":"t_mapping(t_uint64,t_bytes32)"},"t_mapping(t_uint16,t_bytes_storage)":{"encoding":"mapping","key":"t_uint16","label":"mapping(uint16 => bytes)","numberOfBytes":"32","value":"t_bytes_storage"},"t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))":{"encoding":"mapping","key":"t_uint16","label":"mapping(uint16 => mapping(bytes => mapping(uint64 => bytes32)))","numberOfBytes":"32","value":"t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32))"},"t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))":{"encoding":"mapping","key":"t_uint16","label":"mapping(uint16 => mapping(uint16 => uint256))","numberOfBytes":"32","value":"t_mapping(t_uint16,t_uint256)"},"t_mapping(t_uint16,t_uint256)":{"encoding":"mapping","key":"t_uint16","label":"mapping(uint16 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint64,t_bytes32)":{"encoding":"mapping","key":"t_uint64","label":"mapping(uint64 => bytes32)","numberOfBytes":"32","value":"t_bytes32"},"t_uint16":{"encoding":"inplace","label":"uint16","numberOfBytes":"2"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint64":{"encoding":"inplace","label":"uint64","numberOfBytes":"8"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroEndpoint.sol":{"ILayerZeroEndpoint":{"abi":[{"inputs":[{"internalType":"uint16","name":"_dstChainId","type":"uint16"},{"internalType":"address","name":"_userApplication","type":"address"},{"internalType":"bytes","name":"_payload","type":"bytes"},{"internalType":"bool","name":"_payInZRO","type":"bool"},{"internalType":"bytes","name":"_adapterParam","type":"bytes"}],"name":"estimateFees","outputs":[{"internalType":"uint256","name":"nativeFee","type":"uint256"},{"internalType":"uint256","name":"zroFee","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"}],"name":"forceResumeReceive","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getChainId","outputs":[{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_version","type":"uint16"},{"internalType":"uint16","name":"_chainId","type":"uint16"},{"internalType":"address","name":"_userApplication","type":"address"},{"internalType":"uint256","name":"_configType","type":"uint256"}],"name":"getConfig","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"}],"name":"getInboundNonce","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_dstChainId","type":"uint16"},{"internalType":"address","name":"_srcAddress","type":"address"}],"name":"getOutboundNonce","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_userApplication","type":"address"}],"name":"getReceiveLibraryAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_userApplication","type":"address"}],"name":"getReceiveVersion","outputs":[{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_userApplication","type":"address"}],"name":"getSendLibraryAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_userApplication","type":"address"}],"name":"getSendVersion","outputs":[{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"}],"name":"hasStoredPayload","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isReceivingPayload","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isSendingPayload","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"},{"internalType":"address","name":"_dstAddress","type":"address"},{"internalType":"uint64","name":"_nonce","type":"uint64"},{"internalType":"uint256","name":"_gasLimit","type":"uint256"},{"internalType":"bytes","name":"_payload","type":"bytes"}],"name":"receivePayload","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"},{"internalType":"bytes","name":"_payload","type":"bytes"}],"name":"retryPayload","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_dstChainId","type":"uint16"},{"internalType":"bytes","name":"_destination","type":"bytes"},{"internalType":"bytes","name":"_payload","type":"bytes"},{"internalType":"address payable","name":"_refundAddress","type":"address"},{"internalType":"address","name":"_zroPaymentAddress","type":"address"},{"internalType":"bytes","name":"_adapterParams","type":"bytes"}],"name":"send","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_version","type":"uint16"},{"internalType":"uint16","name":"_chainId","type":"uint16"},{"internalType":"uint256","name":"_configType","type":"uint256"},{"internalType":"bytes","name":"_config","type":"bytes"}],"name":"setConfig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_version","type":"uint16"}],"name":"setReceiveVersion","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_version","type":"uint16"}],"name":"setSendVersion","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"estimateFees(uint16,address,bytes,bool,bytes)":"40a7bb10","forceResumeReceive(uint16,bytes)":"42d65a8d","getChainId()":"3408e470","getConfig(uint16,uint16,address,uint256)":"f5ecbdbc","getInboundNonce(uint16,bytes)":"fdc07c70","getOutboundNonce(uint16,address)":"7a145748","getReceiveLibraryAddress(address)":"71ba2fd6","getReceiveVersion(address)":"da1a7c9a","getSendLibraryAddress(address)":"9c729da1","getSendVersion(address)":"096568f6","hasStoredPayload(uint16,bytes)":"0eaf6ea6","isReceivingPayload()":"ca066b35","isSendingPayload()":"e97a448a","receivePayload(uint16,bytes,address,uint64,uint256,bytes)":"c2fa4813","retryPayload(uint16,bytes,bytes)":"aaff5f16","send(uint16,bytes,bytes,address,address,bytes)":"c5803100","setConfig(uint16,uint16,uint256,bytes)":"cbed8b9c","setReceiveVersion(uint16)":"10ddb137","setSendVersion(uint16)":"07e0db17"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"_userApplication\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"_payInZRO\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"_adapterParam\",\"type\":\"bytes\"}],\"name\":\"estimateFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nativeFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"zroFee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"}],\"name\":\"forceResumeReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getChainId\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_chainId\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"_userApplication\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_configType\",\"type\":\"uint256\"}],\"name\":\"getConfig\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"}],\"name\":\"getInboundNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"_srcAddress\",\"type\":\"address\"}],\"name\":\"getOutboundNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userApplication\",\"type\":\"address\"}],\"name\":\"getReceiveLibraryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userApplication\",\"type\":\"address\"}],\"name\":\"getReceiveVersion\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userApplication\",\"type\":\"address\"}],\"name\":\"getSendLibraryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userApplication\",\"type\":\"address\"}],\"name\":\"getSendVersion\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"}],\"name\":\"hasStoredPayload\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isReceivingPayload\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isSendingPayload\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_dstAddress\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"_gasLimit\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"}],\"name\":\"receivePayload\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"}],\"name\":\"retryPayload\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_destination\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"},{\"internalType\":\"address payable\",\"name\":\"_refundAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_zroPaymentAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_adapterParams\",\"type\":\"bytes\"}],\"name\":\"send\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_chainId\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"_configType\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_config\",\"type\":\"bytes\"}],\"name\":\"setConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"}],\"name\":\"setReceiveVersion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"}],\"name\":\"setSendVersion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroEndpoint.sol\":\"ILayerZeroEndpoint\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroEndpoint.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.5.0;\\n\\nimport \\\"./ILayerZeroUserApplicationConfig.sol\\\";\\n\\ninterface ILayerZeroEndpoint is ILayerZeroUserApplicationConfig {\\n    // @notice send a LayerZero message to the specified address at a LayerZero endpoint.\\n    // @param _dstChainId - the destination chain identifier\\n    // @param _destination - the address on destination chain (in bytes). address length/format may vary by chains\\n    // @param _payload - a custom bytes payload to send to the destination contract\\n    // @param _refundAddress - if the source transaction is cheaper than the amount of value passed, refund the additional amount to this address\\n    // @param _zroPaymentAddress - the address of the ZRO token holder who would pay for the transaction\\n    // @param _adapterParams - parameters for custom functionality. e.g. receive airdropped native gas from the relayer on destination\\n    function send(\\n        uint16 _dstChainId,\\n        bytes calldata _destination,\\n        bytes calldata _payload,\\n        address payable _refundAddress,\\n        address _zroPaymentAddress,\\n        bytes calldata _adapterParams\\n    ) external payable;\\n\\n    // @notice used by the messaging library to publish verified payload\\n    // @param _srcChainId - the source chain identifier\\n    // @param _srcAddress - the source contract (as bytes) at the source chain\\n    // @param _dstAddress - the address on destination chain\\n    // @param _nonce - the unbound message ordering nonce\\n    // @param _gasLimit - the gas limit for external contract execution\\n    // @param _payload - verified payload to send to the destination contract\\n    function receivePayload(\\n        uint16 _srcChainId,\\n        bytes calldata _srcAddress,\\n        address _dstAddress,\\n        uint64 _nonce,\\n        uint _gasLimit,\\n        bytes calldata _payload\\n    ) external;\\n\\n    // @notice get the inboundNonce of a lzApp from a source chain which could be EVM or non-EVM chain\\n    // @param _srcChainId - the source chain identifier\\n    // @param _srcAddress - the source chain contract address\\n    function getInboundNonce(uint16 _srcChainId, bytes calldata _srcAddress) external view returns (uint64);\\n\\n    // @notice get the outboundNonce from this source chain which, consequently, is always an EVM\\n    // @param _srcAddress - the source chain contract address\\n    function getOutboundNonce(uint16 _dstChainId, address _srcAddress) external view returns (uint64);\\n\\n    // @notice gets a quote in source native gas, for the amount that send() requires to pay for message delivery\\n    // @param _dstChainId - the destination chain identifier\\n    // @param _userApplication - the user app address on this EVM chain\\n    // @param _payload - the custom message to send over LayerZero\\n    // @param _payInZRO - if false, user app pays the protocol fee in native token\\n    // @param _adapterParam - parameters for the adapter service, e.g. send some dust native token to dstChain\\n    function estimateFees(\\n        uint16 _dstChainId,\\n        address _userApplication,\\n        bytes calldata _payload,\\n        bool _payInZRO,\\n        bytes calldata _adapterParam\\n    ) external view returns (uint nativeFee, uint zroFee);\\n\\n    // @notice get this Endpoint's immutable source identifier\\n    function getChainId() external view returns (uint16);\\n\\n    // @notice the interface to retry failed message on this Endpoint destination\\n    // @param _srcChainId - the source chain identifier\\n    // @param _srcAddress - the source chain contract address\\n    // @param _payload - the payload to be retried\\n    function retryPayload(\\n        uint16 _srcChainId,\\n        bytes calldata _srcAddress,\\n        bytes calldata _payload\\n    ) external;\\n\\n    // @notice query if any STORED payload (message blocking) at the endpoint.\\n    // @param _srcChainId - the source chain identifier\\n    // @param _srcAddress - the source chain contract address\\n    function hasStoredPayload(uint16 _srcChainId, bytes calldata _srcAddress) external view returns (bool);\\n\\n    // @notice query if the _libraryAddress is valid for sending msgs.\\n    // @param _userApplication - the user app address on this EVM chain\\n    function getSendLibraryAddress(address _userApplication) external view returns (address);\\n\\n    // @notice query if the _libraryAddress is valid for receiving msgs.\\n    // @param _userApplication - the user app address on this EVM chain\\n    function getReceiveLibraryAddress(address _userApplication) external view returns (address);\\n\\n    // @notice query if the non-reentrancy guard for send() is on\\n    // @return true if the guard is on. false otherwise\\n    function isSendingPayload() external view returns (bool);\\n\\n    // @notice query if the non-reentrancy guard for receive() is on\\n    // @return true if the guard is on. false otherwise\\n    function isReceivingPayload() external view returns (bool);\\n\\n    // @notice get the configuration of the LayerZero messaging library of the specified version\\n    // @param _version - messaging library version\\n    // @param _chainId - the chainId for the pending config change\\n    // @param _userApplication - the contract address of the user application\\n    // @param _configType - type of configuration. every messaging library has its own convention.\\n    function getConfig(\\n        uint16 _version,\\n        uint16 _chainId,\\n        address _userApplication,\\n        uint _configType\\n    ) external view returns (bytes memory);\\n\\n    // @notice get the send() LayerZero messaging library version\\n    // @param _userApplication - the contract address of the user application\\n    function getSendVersion(address _userApplication) external view returns (uint16);\\n\\n    // @notice get the lzReceive() LayerZero messaging library version\\n    // @param _userApplication - the contract address of the user application\\n    function getReceiveVersion(address _userApplication) external view returns (uint16);\\n}\\n\",\"keccak256\":\"0xab7fcacc672251c850f00c0abd4100df9afcc4ad70b8d331a2fd4cb07acab9f4\",\"license\":\"MIT\"},\"@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroUserApplicationConfig.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.5.0;\\n\\ninterface ILayerZeroUserApplicationConfig {\\n    // @notice set the configuration of the LayerZero messaging library of the specified version\\n    // @param _version - messaging library version\\n    // @param _chainId - the chainId for the pending config change\\n    // @param _configType - type of configuration. every messaging library has its own convention.\\n    // @param _config - configuration in the bytes. can encode arbitrary content.\\n    function setConfig(\\n        uint16 _version,\\n        uint16 _chainId,\\n        uint _configType,\\n        bytes calldata _config\\n    ) external;\\n\\n    // @notice set the send() LayerZero messaging library version to _version\\n    // @param _version - new messaging library version\\n    function setSendVersion(uint16 _version) external;\\n\\n    // @notice set the lzReceive() LayerZero messaging library version to _version\\n    // @param _version - new messaging library version\\n    function setReceiveVersion(uint16 _version) external;\\n\\n    // @notice Only when the UA needs to resume the message flow in blocking mode and clear the stored payload\\n    // @param _srcChainId - the chainId of the source chain\\n    // @param _srcAddress - the contract address of the source contract at the source chain\\n    function forceResumeReceive(uint16 _srcChainId, bytes calldata _srcAddress) external;\\n}\\n\",\"keccak256\":\"0xb4df93aeb0fb46373a4fb728ad2603edc8b9a1577eee8d801768dc115bf96498\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroReceiver.sol":{"ILayerZeroReceiver":{"abi":[{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"},{"internalType":"uint64","name":"_nonce","type":"uint64"},{"internalType":"bytes","name":"_payload","type":"bytes"}],"name":"lzReceive","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"lzReceive(uint16,bytes,uint64,bytes)":"001d3567"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"}],\"name\":\"lzReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroReceiver.sol\":\"ILayerZeroReceiver\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroReceiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.5.0;\\n\\ninterface ILayerZeroReceiver {\\n    // @notice LayerZero endpoint will invoke this function to deliver the message on the destination\\n    // @param _srcChainId - the source endpoint identifier\\n    // @param _srcAddress - the source sending contract address from the source chain\\n    // @param _nonce - the ordered message nonce\\n    // @param _payload - the signed payload is the UA bytes has encoded to be sent\\n    function lzReceive(\\n        uint16 _srcChainId,\\n        bytes calldata _srcAddress,\\n        uint64 _nonce,\\n        bytes calldata _payload\\n    ) external;\\n}\\n\",\"keccak256\":\"0xac1966c1229bd4dc36b6c69eeb94a537bd9aa2198d7623b9ba7f8f7dbe79bb4c\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroUserApplicationConfig.sol":{"ILayerZeroUserApplicationConfig":{"abi":[{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"}],"name":"forceResumeReceive","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_version","type":"uint16"},{"internalType":"uint16","name":"_chainId","type":"uint16"},{"internalType":"uint256","name":"_configType","type":"uint256"},{"internalType":"bytes","name":"_config","type":"bytes"}],"name":"setConfig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_version","type":"uint16"}],"name":"setReceiveVersion","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_version","type":"uint16"}],"name":"setSendVersion","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"forceResumeReceive(uint16,bytes)":"42d65a8d","setConfig(uint16,uint16,uint256,bytes)":"cbed8b9c","setReceiveVersion(uint16)":"10ddb137","setSendVersion(uint16)":"07e0db17"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"}],\"name\":\"forceResumeReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_chainId\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"_configType\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_config\",\"type\":\"bytes\"}],\"name\":\"setConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"}],\"name\":\"setReceiveVersion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"}],\"name\":\"setSendVersion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroUserApplicationConfig.sol\":\"ILayerZeroUserApplicationConfig\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroUserApplicationConfig.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.5.0;\\n\\ninterface ILayerZeroUserApplicationConfig {\\n    // @notice set the configuration of the LayerZero messaging library of the specified version\\n    // @param _version - messaging library version\\n    // @param _chainId - the chainId for the pending config change\\n    // @param _configType - type of configuration. every messaging library has its own convention.\\n    // @param _config - configuration in the bytes. can encode arbitrary content.\\n    function setConfig(\\n        uint16 _version,\\n        uint16 _chainId,\\n        uint _configType,\\n        bytes calldata _config\\n    ) external;\\n\\n    // @notice set the send() LayerZero messaging library version to _version\\n    // @param _version - new messaging library version\\n    function setSendVersion(uint16 _version) external;\\n\\n    // @notice set the lzReceive() LayerZero messaging library version to _version\\n    // @param _version - new messaging library version\\n    function setReceiveVersion(uint16 _version) external;\\n\\n    // @notice Only when the UA needs to resume the message flow in blocking mode and clear the stored payload\\n    // @param _srcChainId - the chainId of the source chain\\n    // @param _srcAddress - the contract address of the source contract at the source chain\\n    function forceResumeReceive(uint16 _srcChainId, bytes calldata _srcAddress) external;\\n}\\n\",\"keccak256\":\"0xb4df93aeb0fb46373a4fb728ad2603edc8b9a1577eee8d801768dc115bf96498\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","kind":"dev","methods":{"constructor":{"details":"Initializes the contract setting the deployer as the initial owner."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1410,"contract":"@openzeppelin/contracts/access/Ownable.sol:Ownable","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/LayerZeroTest.sol":{"LayerZeroTest":{"abi":[{"inputs":[{"internalType":"address","name":"_lzEndpoint","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"indexed":false,"internalType":"bytes","name":"_srcAddress","type":"bytes"},{"indexed":false,"internalType":"uint64","name":"_nonce","type":"uint64"},{"indexed":false,"internalType":"bytes","name":"_payload","type":"bytes"},{"indexed":false,"internalType":"bytes","name":"_reason","type":"bytes"}],"name":"MessageFailed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"indexed":false,"internalType":"bytes","name":"_srcAddress","type":"bytes"},{"indexed":false,"internalType":"uint64","name":"_nonce","type":"uint64"},{"indexed":false,"internalType":"bytes32","name":"_payloadHash","type":"bytes32"}],"name":"RetryMessageSuccess","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"_dstChainId","type":"uint16"},{"indexed":false,"internalType":"uint16","name":"_type","type":"uint16"},{"indexed":false,"internalType":"uint256","name":"_minDstGas","type":"uint256"}],"name":"SetMinDstGas","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"precrime","type":"address"}],"name":"SetPrecrime","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"_remoteChainId","type":"uint16"},{"indexed":false,"internalType":"bytes","name":"_path","type":"bytes"}],"name":"SetTrustedRemote","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"_remoteChainId","type":"uint16"},{"indexed":false,"internalType":"bytes","name":"_remoteAddress","type":"bytes"}],"name":"SetTrustedRemoteAddress","type":"event"},{"inputs":[],"name":"DEFAULT_PAYLOAD_SIZE_LIMIT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"data","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"","type":"uint16"},{"internalType":"bytes","name":"","type":"bytes"},{"internalType":"uint64","name":"","type":"uint64"}],"name":"failedMessages","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"}],"name":"forceResumeReceive","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_version","type":"uint16"},{"internalType":"uint16","name":"_chainId","type":"uint16"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"_configType","type":"uint256"}],"name":"getConfig","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_remoteChainId","type":"uint16"}],"name":"getTrustedRemoteAddress","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"}],"name":"isTrustedRemote","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lzEndpoint","outputs":[{"internalType":"contract ILayerZeroEndpoint","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"},{"internalType":"uint64","name":"_nonce","type":"uint64"},{"internalType":"bytes","name":"_payload","type":"bytes"}],"name":"lzReceive","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"","type":"uint16"},{"internalType":"uint16","name":"","type":"uint16"}],"name":"minDstGasLookup","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"},{"internalType":"uint64","name":"_nonce","type":"uint64"},{"internalType":"bytes","name":"_payload","type":"bytes"}],"name":"nonblockingLzReceive","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"","type":"uint16"}],"name":"payloadSizeLimitLookup","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"precrime","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"},{"internalType":"uint64","name":"_nonce","type":"uint64"},{"internalType":"bytes","name":"_payload","type":"bytes"}],"name":"retryMessage","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"string","name":"_message","type":"string"}],"name":"send","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_version","type":"uint16"},{"internalType":"uint16","name":"_chainId","type":"uint16"},{"internalType":"uint256","name":"_configType","type":"uint256"},{"internalType":"bytes","name":"_config","type":"bytes"}],"name":"setConfig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_dstChainId","type":"uint16"},{"internalType":"uint16","name":"_packetType","type":"uint16"},{"internalType":"uint256","name":"_minGas","type":"uint256"}],"name":"setMinDstGas","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_dstChainId","type":"uint16"},{"internalType":"uint256","name":"_size","type":"uint256"}],"name":"setPayloadSizeLimit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_precrime","type":"address"}],"name":"setPrecrime","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_version","type":"uint16"}],"name":"setReceiveVersion","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_version","type":"uint16"}],"name":"setSendVersion","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_remoteChainId","type":"uint16"},{"internalType":"bytes","name":"_path","type":"bytes"}],"name":"setTrustedRemote","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_remoteChainId","type":"uint16"},{"internalType":"bytes","name":"_remoteAddress","type":"bytes"}],"name":"setTrustedRemoteAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_otherContract","type":"address"}],"name":"trustAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"","type":"uint16"}],"name":"trustedRemoteLookup","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_1426":{"entryPoint":null,"id":1426,"parameterSlots":0,"returnSlots":0},"@_1572":{"entryPoint":null,"id":1572,"parameterSlots":1,"returnSlots":0},"@_503":{"entryPoint":null,"id":503,"parameterSlots":1,"returnSlots":0},"@_989":{"entryPoint":null,"id":989,"parameterSlots":1,"returnSlots":0},"@_msgSender_1527":{"entryPoint":null,"id":1527,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_1514":{"entryPoint":245,"id":1514,"parameterSlots":1,"returnSlots":0},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":694,"id":null,"parameterSlots":2,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":407,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":490,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":347,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x41":{"entryPoint":325,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:3027:10","statements":[{"nodeType":"YulBlock","src":"6:3:10","statements":[]},{"body":{"nodeType":"YulBlock","src":"46:95:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"63:1:10","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"70:3:10","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"75:10:10","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"66:3:10"},"nodeType":"YulFunctionCall","src":"66:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56:6:10"},"nodeType":"YulFunctionCall","src":"56:31:10"},"nodeType":"YulExpressionStatement","src":"56:31:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"103:1:10","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"106:4:10","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"96:6:10"},"nodeType":"YulFunctionCall","src":"96:15:10"},"nodeType":"YulExpressionStatement","src":"96:15:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"127:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"130:4:10","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"120:6:10"},"nodeType":"YulFunctionCall","src":"120:15:10"},"nodeType":"YulExpressionStatement","src":"120:15:10"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"14:127:10"},{"body":{"nodeType":"YulBlock","src":"201:325:10","statements":[{"nodeType":"YulAssignment","src":"211:22:10","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"225:1:10","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"228:4:10"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"221:3:10"},"nodeType":"YulFunctionCall","src":"221:12:10"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"211:6:10"}]},{"nodeType":"YulVariableDeclaration","src":"242:38:10","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"272:4:10"},{"kind":"number","nodeType":"YulLiteral","src":"278:1:10","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"268:3:10"},"nodeType":"YulFunctionCall","src":"268:12:10"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"246:18:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"319:31:10","statements":[{"nodeType":"YulAssignment","src":"321:27:10","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"335:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"343:4:10","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"331:3:10"},"nodeType":"YulFunctionCall","src":"331:17:10"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"321:6:10"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"299:18:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"292:6:10"},"nodeType":"YulFunctionCall","src":"292:26:10"},"nodeType":"YulIf","src":"289:61:10"},{"body":{"nodeType":"YulBlock","src":"409:111:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"430:1:10","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"437:3:10","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"442:10:10","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"433:3:10"},"nodeType":"YulFunctionCall","src":"433:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"423:6:10"},"nodeType":"YulFunctionCall","src":"423:31:10"},"nodeType":"YulExpressionStatement","src":"423:31:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"474:1:10","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"477:4:10","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"467:6:10"},"nodeType":"YulFunctionCall","src":"467:15:10"},"nodeType":"YulExpressionStatement","src":"467:15:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"502:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"505:4:10","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"495:6:10"},"nodeType":"YulFunctionCall","src":"495:15:10"},"nodeType":"YulExpressionStatement","src":"495:15:10"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"365:18:10"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"388:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"396:2:10","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"385:2:10"},"nodeType":"YulFunctionCall","src":"385:14:10"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"362:2:10"},"nodeType":"YulFunctionCall","src":"362:38:10"},"nodeType":"YulIf","src":"359:161:10"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"181:4:10","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"190:6:10","type":""}],"src":"146:380:10"},{"body":{"nodeType":"YulBlock","src":"587:65:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"604:1:10","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"607:3:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"597:6:10"},"nodeType":"YulFunctionCall","src":"597:14:10"},"nodeType":"YulExpressionStatement","src":"597:14:10"},{"nodeType":"YulAssignment","src":"620:26:10","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"638:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"641:4:10","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"628:9:10"},"nodeType":"YulFunctionCall","src":"628:18:10"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"620:4:10"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"570:3:10","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"578:4:10","type":""}],"src":"531:121:10"},{"body":{"nodeType":"YulBlock","src":"738:464:10","statements":[{"body":{"nodeType":"YulBlock","src":"771:425:10","statements":[{"nodeType":"YulVariableDeclaration","src":"785:11:10","value":{"kind":"number","nodeType":"YulLiteral","src":"795:1:10","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"789:2:10","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"816:2:10"},{"name":"array","nodeType":"YulIdentifier","src":"820:5:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"809:6:10"},"nodeType":"YulFunctionCall","src":"809:17:10"},"nodeType":"YulExpressionStatement","src":"809:17:10"},{"nodeType":"YulVariableDeclaration","src":"839:31:10","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"861:2:10"},{"kind":"number","nodeType":"YulLiteral","src":"865:4:10","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"851:9:10"},"nodeType":"YulFunctionCall","src":"851:19:10"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"843:4:10","type":""}]},{"nodeType":"YulVariableDeclaration","src":"883:57:10","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"906:4:10"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"916:1:10","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"923:10:10"},{"kind":"number","nodeType":"YulLiteral","src":"935:2:10","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"919:3:10"},"nodeType":"YulFunctionCall","src":"919:19:10"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"912:3:10"},"nodeType":"YulFunctionCall","src":"912:27:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"902:3:10"},"nodeType":"YulFunctionCall","src":"902:38:10"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"887:11:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"977:23:10","statements":[{"nodeType":"YulAssignment","src":"979:19:10","value":{"name":"data","nodeType":"YulIdentifier","src":"994:4:10"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"979:11:10"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"959:10:10"},{"kind":"number","nodeType":"YulLiteral","src":"971:4:10","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"956:2:10"},"nodeType":"YulFunctionCall","src":"956:20:10"},"nodeType":"YulIf","src":"953:47:10"},{"nodeType":"YulVariableDeclaration","src":"1013:41:10","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1027:4:10"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1037:1:10","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"1044:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"1049:2:10","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1040:3:10"},"nodeType":"YulFunctionCall","src":"1040:12:10"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1033:3:10"},"nodeType":"YulFunctionCall","src":"1033:20:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1023:3:10"},"nodeType":"YulFunctionCall","src":"1023:31:10"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"1017:2:10","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1067:24:10","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"1080:11:10"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"1071:5:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"1165:21:10","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"1174:5:10"},{"name":"_1","nodeType":"YulIdentifier","src":"1181:2:10"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"1167:6:10"},"nodeType":"YulFunctionCall","src":"1167:17:10"},"nodeType":"YulExpressionStatement","src":"1167:17:10"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"1115:5:10"},{"name":"_2","nodeType":"YulIdentifier","src":"1122:2:10"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1112:2:10"},"nodeType":"YulFunctionCall","src":"1112:13:10"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1126:26:10","statements":[{"nodeType":"YulAssignment","src":"1128:22:10","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"1141:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"1148:1:10","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1137:3:10"},"nodeType":"YulFunctionCall","src":"1137:13:10"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"1128:5:10"}]}]},"pre":{"nodeType":"YulBlock","src":"1108:3:10","statements":[]},"src":"1104:82:10"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"754:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"759:2:10","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"751:2:10"},"nodeType":"YulFunctionCall","src":"751:11:10"},"nodeType":"YulIf","src":"748:448:10"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"710:5:10","type":""},{"name":"len","nodeType":"YulTypedName","src":"717:3:10","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"722:10:10","type":""}],"src":"657:545:10"},{"body":{"nodeType":"YulBlock","src":"1292:81:10","statements":[{"nodeType":"YulAssignment","src":"1302:65:10","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1317:4:10"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1335:1:10","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"1338:3:10"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1331:3:10"},"nodeType":"YulFunctionCall","src":"1331:11:10"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1348:1:10","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1344:3:10"},"nodeType":"YulFunctionCall","src":"1344:6:10"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1327:3:10"},"nodeType":"YulFunctionCall","src":"1327:24:10"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1323:3:10"},"nodeType":"YulFunctionCall","src":"1323:29:10"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1313:3:10"},"nodeType":"YulFunctionCall","src":"1313:40:10"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1359:1:10","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"1362:3:10"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1355:3:10"},"nodeType":"YulFunctionCall","src":"1355:11:10"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1310:2:10"},"nodeType":"YulFunctionCall","src":"1310:57:10"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"1302:4:10"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"1269:4:10","type":""},{"name":"len","nodeType":"YulTypedName","src":"1275:3:10","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"1283:4:10","type":""}],"src":"1207:166:10"},{"body":{"nodeType":"YulBlock","src":"1474:1256:10","statements":[{"nodeType":"YulVariableDeclaration","src":"1484:24:10","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1504:3:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1498:5:10"},"nodeType":"YulFunctionCall","src":"1498:10:10"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"1488:6:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"1551:22:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1553:16:10"},"nodeType":"YulFunctionCall","src":"1553:18:10"},"nodeType":"YulExpressionStatement","src":"1553:18:10"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"1523:6:10"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1539:2:10","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"1543:1:10","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1535:3:10"},"nodeType":"YulFunctionCall","src":"1535:10:10"},{"kind":"number","nodeType":"YulLiteral","src":"1547:1:10","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1531:3:10"},"nodeType":"YulFunctionCall","src":"1531:18:10"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1520:2:10"},"nodeType":"YulFunctionCall","src":"1520:30:10"},"nodeType":"YulIf","src":"1517:56:10"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"1626:4:10"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"1664:4:10"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"1658:5:10"},"nodeType":"YulFunctionCall","src":"1658:11:10"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"1632:25:10"},"nodeType":"YulFunctionCall","src":"1632:38:10"},{"name":"newLen","nodeType":"YulIdentifier","src":"1672:6:10"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"1582:43:10"},"nodeType":"YulFunctionCall","src":"1582:97:10"},"nodeType":"YulExpressionStatement","src":"1582:97:10"},{"nodeType":"YulVariableDeclaration","src":"1688:18:10","value":{"kind":"number","nodeType":"YulLiteral","src":"1705:1:10","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"1692:9:10","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1715:23:10","value":{"kind":"number","nodeType":"YulLiteral","src":"1734:4:10","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"1719:11:10","type":""}]},{"nodeType":"YulAssignment","src":"1747:24:10","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"1760:11:10"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"1747:9:10"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"1817:656:10","statements":[{"nodeType":"YulVariableDeclaration","src":"1831:35:10","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"1850:6:10"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1862:2:10","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1858:3:10"},"nodeType":"YulFunctionCall","src":"1858:7:10"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1846:3:10"},"nodeType":"YulFunctionCall","src":"1846:20:10"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"1835:7:10","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1879:49:10","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"1923:4:10"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"1893:29:10"},"nodeType":"YulFunctionCall","src":"1893:35:10"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"1883:6:10","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1941:10:10","value":{"kind":"number","nodeType":"YulLiteral","src":"1950:1:10","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1945:1:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"2028:172:10","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2053:6:10"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2071:3:10"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"2076:9:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2067:3:10"},"nodeType":"YulFunctionCall","src":"2067:19:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2061:5:10"},"nodeType":"YulFunctionCall","src":"2061:26:10"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2046:6:10"},"nodeType":"YulFunctionCall","src":"2046:42:10"},"nodeType":"YulExpressionStatement","src":"2046:42:10"},{"nodeType":"YulAssignment","src":"2105:24:10","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2119:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"2127:1:10","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2115:3:10"},"nodeType":"YulFunctionCall","src":"2115:14:10"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2105:6:10"}]},{"nodeType":"YulAssignment","src":"2146:40:10","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"2163:9:10"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"2174:11:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2159:3:10"},"nodeType":"YulFunctionCall","src":"2159:27:10"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"2146:9:10"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1975:1:10"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"1978:7:10"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1972:2:10"},"nodeType":"YulFunctionCall","src":"1972:14:10"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1987:28:10","statements":[{"nodeType":"YulAssignment","src":"1989:24:10","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1998:1:10"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"2001:11:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1994:3:10"},"nodeType":"YulFunctionCall","src":"1994:19:10"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1989:1:10"}]}]},"pre":{"nodeType":"YulBlock","src":"1968:3:10","statements":[]},"src":"1964:236:10"},{"body":{"nodeType":"YulBlock","src":"2248:166:10","statements":[{"nodeType":"YulVariableDeclaration","src":"2266:43:10","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2293:3:10"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"2298:9:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2289:3:10"},"nodeType":"YulFunctionCall","src":"2289:19:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2283:5:10"},"nodeType":"YulFunctionCall","src":"2283:26:10"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"2270:9:10","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2333:6:10"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"2345:9:10"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2372:1:10","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"2375:6:10"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2368:3:10"},"nodeType":"YulFunctionCall","src":"2368:14:10"},{"kind":"number","nodeType":"YulLiteral","src":"2384:3:10","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2364:3:10"},"nodeType":"YulFunctionCall","src":"2364:24:10"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2394:1:10","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2390:3:10"},"nodeType":"YulFunctionCall","src":"2390:6:10"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2360:3:10"},"nodeType":"YulFunctionCall","src":"2360:37:10"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2356:3:10"},"nodeType":"YulFunctionCall","src":"2356:42:10"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2341:3:10"},"nodeType":"YulFunctionCall","src":"2341:58:10"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2326:6:10"},"nodeType":"YulFunctionCall","src":"2326:74:10"},"nodeType":"YulExpressionStatement","src":"2326:74:10"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"2219:7:10"},{"name":"newLen","nodeType":"YulIdentifier","src":"2228:6:10"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2216:2:10"},"nodeType":"YulFunctionCall","src":"2216:19:10"},"nodeType":"YulIf","src":"2213:201:10"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2434:4:10"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2448:1:10","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"2451:6:10"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2444:3:10"},"nodeType":"YulFunctionCall","src":"2444:14:10"},{"kind":"number","nodeType":"YulLiteral","src":"2460:1:10","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2440:3:10"},"nodeType":"YulFunctionCall","src":"2440:22:10"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2427:6:10"},"nodeType":"YulFunctionCall","src":"2427:36:10"},"nodeType":"YulExpressionStatement","src":"2427:36:10"}]},"nodeType":"YulCase","src":"1810:663:10","value":{"kind":"number","nodeType":"YulLiteral","src":"1815:1:10","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"2490:234:10","statements":[{"nodeType":"YulVariableDeclaration","src":"2504:14:10","value":{"kind":"number","nodeType":"YulLiteral","src":"2517:1:10","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"2508:5:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"2553:67:10","statements":[{"nodeType":"YulAssignment","src":"2571:35:10","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2590:3:10"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"2595:9:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2586:3:10"},"nodeType":"YulFunctionCall","src":"2586:19:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2580:5:10"},"nodeType":"YulFunctionCall","src":"2580:26:10"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2571:5:10"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"2534:6:10"},"nodeType":"YulIf","src":"2531:89:10"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2640:4:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2699:5:10"},{"name":"newLen","nodeType":"YulIdentifier","src":"2706:6:10"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"2646:52:10"},"nodeType":"YulFunctionCall","src":"2646:67:10"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2633:6:10"},"nodeType":"YulFunctionCall","src":"2633:81:10"},"nodeType":"YulExpressionStatement","src":"2633:81:10"}]},"nodeType":"YulCase","src":"2482:242:10","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"1790:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"1798:2:10","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1787:2:10"},"nodeType":"YulFunctionCall","src":"1787:14:10"},"nodeType":"YulSwitch","src":"1780:944:10"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"1459:4:10","type":""},{"name":"src","nodeType":"YulTypedName","src":"1465:3:10","type":""}],"src":"1378:1352:10"},{"body":{"nodeType":"YulBlock","src":"2816:209:10","statements":[{"body":{"nodeType":"YulBlock","src":"2862:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2871:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2874:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2864:6:10"},"nodeType":"YulFunctionCall","src":"2864:12:10"},"nodeType":"YulExpressionStatement","src":"2864:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2837:7:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"2846:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2833:3:10"},"nodeType":"YulFunctionCall","src":"2833:23:10"},{"kind":"number","nodeType":"YulLiteral","src":"2858:2:10","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2829:3:10"},"nodeType":"YulFunctionCall","src":"2829:32:10"},"nodeType":"YulIf","src":"2826:52:10"},{"nodeType":"YulVariableDeclaration","src":"2887:29:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2906:9:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2900:5:10"},"nodeType":"YulFunctionCall","src":"2900:16:10"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"2891:5:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"2979:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2988:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2991:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2981:6:10"},"nodeType":"YulFunctionCall","src":"2981:12:10"},"nodeType":"YulExpressionStatement","src":"2981:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2938:5:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2949:5:10"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2964:3:10","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2969:1:10","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2960:3:10"},"nodeType":"YulFunctionCall","src":"2960:11:10"},{"kind":"number","nodeType":"YulLiteral","src":"2973:1:10","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2956:3:10"},"nodeType":"YulFunctionCall","src":"2956:19:10"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2945:3:10"},"nodeType":"YulFunctionCall","src":"2945:31:10"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2935:2:10"},"nodeType":"YulFunctionCall","src":"2935:42:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2928:6:10"},"nodeType":"YulFunctionCall","src":"2928:50:10"},"nodeType":"YulIf","src":"2925:70:10"},{"nodeType":"YulAssignment","src":"3004:15:10","value":{"name":"value","nodeType":"YulIdentifier","src":"3014:5:10"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3004:6:10"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2782:9:10","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2793:7:10","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2805:6:10","type":""}],"src":"2735:290:10"}]},"contents":"{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}","id":10,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60e0604052601460a09081527f4e6f7468696e672072656365697665642079657400000000000000000000000060c0526006906200003e9082620001ea565b503480156200004c57600080fd5b5060405162002536380380620025368339810160408190526200006f91620002b6565b80806200007c33620000f5565b6001600160a01b039081166080528216736fcb97553d41516cb228ac03fdc8b9a0a9df04a1039050620000b9576007805461ffff19166127801790555b6001600160a01b038116737dcad72640f835b0fa36efd3d6d3ec902c7e5acf03620000ee576007805461ffff19166127761790555b50620002e8565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200017057607f821691505b6020821081036200019157634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001e557600081815260208120601f850160051c81016020861015620001c05750805b601f850160051c820191505b81811015620001e157828155600101620001cc565b5050505b505050565b81516001600160401b0381111562000206576200020662000145565b6200021e816200021784546200015b565b8462000197565b602080601f8311600181146200025657600084156200023d5750858301515b600019600386901b1c1916600185901b178555620001e1565b600085815260208120601f198616915b82811015620002875788860151825594840194600190910190840162000266565b5085821015620002a65787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600060208284031215620002c957600080fd5b81516001600160a01b0381168114620002e157600080fd5b9392505050565b6080516122016200033560003960008181610422015281816105300152818161077f015281816108270152818161094a01528181610e100152818161120a015261148b01526122016000f3fe6080604052600436106101465760003560e01c80621d35671461014b57806307e0db171461016d5780630df374831461018d57806310ddb137146101ad5780633d8b38f6146101cd5780633f1f4fa41461020257806342d65a8d1461023d5780635b8c41e61461025d5780635cdf1649146102ac57806366792ba1146102cc57806366ad5c8a146102df578063715018a6146102ff57806373d4a13a146103145780637533d788146103365780638cfd8f5c146103565780638da5cb5b1461038e578063950c8a74146103b05780639f38369a146103d0578063a6c3d165146103f0578063b353aaa714610410578063baf3292d14610444578063c446183414610464578063cbed8b9c1461047a578063d1deba1f1461049a578063df2a5b3b146104ad578063eb8d72b7146104cd578063f2fde38b146104ed578063f5ecbdbc1461050d575b600080fd5b34801561015757600080fd5b5061016b610166366004611898565b61052d565b005b34801561017957600080fd5b5061016b61018836600461192b565b61075e565b34801561019957600080fd5b5061016b6101a8366004611946565b6107e7565b3480156101b957600080fd5b5061016b6101c836600461192b565b610806565b3480156101d957600080fd5b506101ed6101e8366004611970565b61085e565b60405190151581526020015b60405180910390f35b34801561020e57600080fd5b5061022f61021d36600461192b565b60036020526000908152604090205481565b6040519081526020016101f9565b34801561024957600080fd5b5061016b610258366004611970565b61092b565b34801561026957600080fd5b5061022f610278366004611a6d565b6005602090815260009384526040808520845180860184018051928152908401958401959095209452929052825290205481565b3480156102b857600080fd5b5061016b6102c7366004611af5565b6109b1565b61016b6102da366004611b10565b610a0e565b3480156102eb57600080fd5b5061016b6102fa366004611898565b610a55565b34801561030b57600080fd5b5061016b610b31565b34801561032057600080fd5b50610329610b45565b6040516101f99190611bb0565b34801561034257600080fd5b5061032961035136600461192b565b610bd3565b34801561036257600080fd5b5061022f610371366004611bc3565b600260209081526000928352604080842090915290825290205481565b34801561039a57600080fd5b506103a3610bec565b6040516101f99190611bf6565b3480156103bc57600080fd5b506004546103a3906001600160a01b031681565b3480156103dc57600080fd5b506103296103eb36600461192b565b610bfb565b3480156103fc57600080fd5b5061016b61040b366004611970565b610d0a565b34801561041c57600080fd5b506103a37f000000000000000000000000000000000000000000000000000000000000000081565b34801561045057600080fd5b5061016b61045f366004611af5565b610d93565b34801561047057600080fd5b5061022f61271081565b34801561048657600080fd5b5061016b610495366004611c0a565b610df1565b61016b6104a8366004611898565b610e86565b3480156104b957600080fd5b5061016b6104c8366004611c78565b61109c565b3480156104d957600080fd5b5061016b6104e8366004611970565b611106565b3480156104f957600080fd5b5061016b610508366004611af5565b611160565b34801561051957600080fd5b50610329610528366004611cb4565b6111d9565b337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316146105aa5760405162461bcd60e51b815260206004820152601e60248201527f4c7a4170703a20696e76616c696420656e64706f696e742063616c6c6572000060448201526064015b60405180910390fd5b61ffff8616600090815260016020526040812080546105c890611cff565b80601f01602080910402602001604051908101604052809291908181526020018280546105f490611cff565b80156106415780601f1061061657610100808354040283529160200191610641565b820191906000526020600020905b81548152906001019060200180831161062457829003601f168201915b5050505050905080518686905014801561065c575060008151115b801561068457508051602082012060405161067a9088908890611d39565b6040518091039020145b6106df5760405162461bcd60e51b815260206004820152602660248201527f4c7a4170703a20696e76616c696420736f757263652073656e64696e6720636f6044820152651b9d1c9858dd60d21b60648201526084016105a1565b6107558787878080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8a018190048102820181019092528881528a93509150889088908190840183828082843760009201919091525061128a92505050565b50505050505050565b610766611303565b6040516307e0db1760e01b815261ffff821660048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906307e0db17906024015b600060405180830381600087803b1580156107cc57600080fd5b505af11580156107e0573d6000803e3d6000fd5b5050505050565b6107ef611303565b61ffff909116600090815260036020526040902055565b61080e611303565b6040516310ddb13760e01b815261ffff821660048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906310ddb137906024016107b2565b61ffff83166000908152600160205260408120805482919061087f90611cff565b80601f01602080910402602001604051908101604052809291908181526020018280546108ab90611cff565b80156108f85780601f106108cd576101008083540402835291602001916108f8565b820191906000526020600020905b8154815290600101906020018083116108db57829003601f168201915b50505050509050838360405161090f929190611d39565b60405180910390208180519060200120149150505b9392505050565b610933611303565b6040516342d65a8d60e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906342d65a8d9061098390869086908690600401611d72565b600060405180830381600087803b15801561099d57600080fd5b505af1158015610755573d6000803e3d6000fd5b6109b9611303565b6040516001600160601b0319606083811b8216602084015230901b16603482015260480160408051601f1981840301815291815260075461ffff16600090815260016020522090610a0a9082611deb565b5050565b600081604051602001610a219190611bb0565b60408051601f19818403018152600754602084019092526000808452909350610a0a9261ffff909216918491339134611362565b333014610ab35760405162461bcd60e51b815260206004820152602660248201527f4e6f6e626c6f636b696e674c7a4170703a2063616c6c6572206d7573742062656044820152650204c7a4170760d41b60648201526084016105a1565b610b298686868080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f89018190048102820181019092528781528993509150879087908190840183828082843760009201919091525061150792505050565b505050505050565b610b39611303565b610b436000611528565b565b60068054610b5290611cff565b80601f0160208091040260200160405190810160405280929190818152602001828054610b7e90611cff565b8015610bcb5780601f10610ba057610100808354040283529160200191610bcb565b820191906000526020600020905b815481529060010190602001808311610bae57829003601f168201915b505050505081565b60016020526000908152604090208054610b5290611cff565b6000546001600160a01b031690565b61ffff8116600090815260016020526040812080546060929190610c1e90611cff565b80601f0160208091040260200160405190810160405280929190818152602001828054610c4a90611cff565b8015610c975780601f10610c6c57610100808354040283529160200191610c97565b820191906000526020600020905b815481529060010190602001808311610c7a57829003601f168201915b505050505090508051600003610cef5760405162461bcd60e51b815260206004820152601d60248201527f4c7a4170703a206e6f20747275737465642070617468207265636f726400000060448201526064016105a1565b610924600060148351610d029190611eba565b839190611578565b610d12611303565b818130604051602001610d2793929190611ed3565b60408051601f1981840301815291815261ffff8516600090815260016020522090610d529082611deb565b507f8c0400cfe2d1199b1a725c78960bcc2a344d869b80590d0f2bd005db15a572ce838383604051610d8693929190611d72565b60405180910390a1505050565b610d9b611303565b600480546001600160a01b0319166001600160a01b0383161790556040517f5db758e995a17ec1ad84bdef7e8c3293a0bd6179bcce400dff5d4c3d87db726b90610de6908390611bf6565b60405180910390a150565b610df9611303565b6040516332fb62e760e21b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063cbed8b9c90610e4d9088908890889088908890600401611ef4565b600060405180830381600087803b158015610e6757600080fd5b505af1158015610e7b573d6000803e3d6000fd5b505050505050505050565b61ffff86166000908152600560205260408082209051610ea99088908890611d39565b90815260408051602092819003830190206001600160401b03871660009081529252902054905080610f295760405162461bcd60e51b815260206004820152602360248201527f4e6f6e626c6f636b696e674c7a4170703a206e6f2073746f726564206d65737360448201526261676560e81b60648201526084016105a1565b808383604051610f3a929190611d39565b604051809103902014610f995760405162461bcd60e51b815260206004820152602160248201527f4e6f6e626c6f636b696e674c7a4170703a20696e76616c6964207061796c6f616044820152601960fa1b60648201526084016105a1565b61ffff87166000908152600560205260408082209051610fbc9089908990611d39565b90815260408051602092819003830181206001600160401b038916600090815290845282902093909355601f88018290048202830182019052868252611054918991899089908190840183828082843760009201919091525050604080516020601f8a018190048102820181019092528881528a93509150889088908190840183828082843760009201919091525061150792505050565b7fc264d91f3adc5588250e1551f547752ca0cfa8f6b530d243b9f9f4cab10ea8e5878787878560405161108b959493929190611f2d565b60405180910390a150505050505050565b6110a4611303565b61ffff83811660008181526002602090815260408083209487168084529482529182902085905581519283528201929092529081018290527f9d5c7c0b934da8fefa9c7760c98383778a12dfbfc0c3b3106518f43fb9508ac090606001610d86565b61110e611303565b61ffff8316600090815260016020526040902061112c828483611f68565b507ffa41487ad5d6728f0b19276fa1eddc16558578f5109fc39d2dc33c3230470dab838383604051610d8693929190611d72565b611168611303565b6001600160a01b0381166111cd5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105a1565b6111d681611528565b50565b604051633d7b2f6f60e21b815261ffff808616600483015284166024820152306044820152606481018290526060907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063f5ecbdbc90608401600060405180830381865afa158015611259573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526112819190810190612051565b95945050505050565b6000806112ed5a60966366ad5c8a60e01b898989896040516024016112b29493929190612099565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915230929190611685565b9150915081610b2957610b29868686868561170f565b3361130c610bec565b6001600160a01b031614610b435760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105a1565b61ffff86166000908152600160205260408120805461138090611cff565b80601f01602080910402602001604051908101604052809291908181526020018280546113ac90611cff565b80156113f95780601f106113ce576101008083540402835291602001916113f9565b820191906000526020600020905b8154815290600101906020018083116113dc57829003601f168201915b50505050509050805160000361146a5760405162461bcd60e51b815260206004820152603060248201527f4c7a4170703a2064657374696e6174696f6e20636861696e206973206e6f742060448201526f61207472757374656420736f7572636560801b60648201526084016105a1565b6114758787516117ac565b60405162c5803160e81b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063c58031009084906114cc908b9086908c908c908c908c906004016120d7565b6000604051808303818588803b1580156114e557600080fd5b505af11580156114f9573d6000803e3d6000fd5b505050505050505050505050565b8080602001905181019061151b9190612051565b6006906107e09082611deb565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60608161158681601f61213e565b10156115c55760405162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b60448201526064016105a1565b6115cf828461213e565b845110156116135760405162461bcd60e51b8152602060048201526011602482015270736c6963655f6f75744f66426f756e647360781b60448201526064016105a1565b606082158015611632576040519150600082526020820160405261167c565b6040519150601f8416801560200281840101858101878315602002848b0101015b8183101561166b578051835260209283019201611653565b5050858452601f01601f1916604052505b50949350505050565b6000606060008060008661ffff166001600160401b038111156116aa576116aa6119c2565b6040519080825280601f01601f1916602001820160405280156116d4576020820181803683370190505b50905060008087516020890160008d8df191503d9250868311156116f6578692505b828152826000602083013e909890975095505050505050565b8180519060200120600560008761ffff1661ffff168152602001908152602001600020856040516117409190612151565b9081526040805191829003602090810183206001600160401b0388166000908152915220919091557fe183f33de2837795525b4792ca4cd60535bd77c53b7e7030060bfcf5734d6b0c9061179d908790879087908790879061216d565b60405180910390a15050505050565b61ffff8216600090815260036020526040812054908190036117cd57506127105b8082111561181d5760405162461bcd60e51b815260206004820181905260248201527f4c7a4170703a207061796c6f61642073697a6520697320746f6f206c6172676560448201526064016105a1565b505050565b803561ffff8116811461183457600080fd5b919050565b60008083601f84011261184b57600080fd5b5081356001600160401b0381111561186257600080fd5b60208301915083602082850101111561187a57600080fd5b9250929050565b80356001600160401b038116811461183457600080fd5b600080600080600080608087890312156118b157600080fd5b6118ba87611822565b955060208701356001600160401b03808211156118d657600080fd5b6118e28a838b01611839565b90975095508591506118f660408a01611881565b9450606089013591508082111561190c57600080fd5b5061191989828a01611839565b979a9699509497509295939492505050565b60006020828403121561193d57600080fd5b61092482611822565b6000806040838503121561195957600080fd5b61196283611822565b946020939093013593505050565b60008060006040848603121561198557600080fd5b61198e84611822565b925060208401356001600160401b038111156119a957600080fd5b6119b586828701611839565b9497909650939450505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715611a0057611a006119c2565b604052919050565b60006001600160401b03821115611a2157611a216119c2565b50601f01601f191660200190565b6000611a42611a3d84611a08565b6119d8565b9050828152838383011115611a5657600080fd5b828260208301376000602084830101529392505050565b600080600060608486031215611a8257600080fd5b611a8b84611822565b925060208401356001600160401b03811115611aa657600080fd5b8401601f81018613611ab757600080fd5b611ac686823560208401611a2f565b925050611ad560408501611881565b90509250925092565b80356001600160a01b038116811461183457600080fd5b600060208284031215611b0757600080fd5b61092482611ade565b600060208284031215611b2257600080fd5b81356001600160401b03811115611b3857600080fd5b8201601f81018413611b4957600080fd5b611b5884823560208401611a2f565b949350505050565b60005b83811015611b7b578181015183820152602001611b63565b50506000910152565b60008151808452611b9c816020860160208601611b60565b601f01601f19169290920160200192915050565b6020815260006109246020830184611b84565b60008060408385031215611bd657600080fd5b611bdf83611822565b9150611bed60208401611822565b90509250929050565b6001600160a01b0391909116815260200190565b600080600080600060808688031215611c2257600080fd5b611c2b86611822565b9450611c3960208701611822565b93506040860135925060608601356001600160401b03811115611c5b57600080fd5b611c6788828901611839565b969995985093965092949392505050565b600080600060608486031215611c8d57600080fd5b611c9684611822565b9250611ca460208501611822565b9150604084013590509250925092565b60008060008060808587031215611cca57600080fd5b611cd385611822565b9350611ce160208601611822565b9250611cef60408601611ade565b9396929550929360600135925050565b600181811c90821680611d1357607f821691505b602082108103611d3357634e487b7160e01b600052602260045260246000fd5b50919050565b8183823760009101908152919050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b61ffff84168152604060208201526000611281604083018486611d49565b601f82111561181d57600081815260208120601f850160051c81016020861015611db75750805b601f850160051c820191505b81811015610b2957828155600101611dc3565b600019600383901b1c191660019190911b1790565b81516001600160401b03811115611e0457611e046119c2565b611e1881611e128454611cff565b84611d90565b602080601f831160018114611e475760008415611e355750858301515b611e3f8582611dd6565b865550610b29565b600085815260208120601f198616915b82811015611e7657888601518255948401946001909101908401611e57565b5085821015611e945787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b81810381811115611ecd57611ecd611ea4565b92915050565b8284823760609190911b6001600160601b0319169101908152601401919050565b600061ffff808816835280871660208401525084604083015260806060830152611f22608083018486611d49565b979650505050505050565b61ffff86168152608060208201526000611f4b608083018688611d49565b6001600160401b0394909416604083015250606001529392505050565b6001600160401b03831115611f7f57611f7f6119c2565b611f9383611f8d8354611cff565b83611d90565b6000601f841160018114611fc15760008515611faf5750838201355b611fb98682611dd6565b8455506107e0565b600083815260209020601f19861690835b82811015611ff25786850135825560209485019460019092019101611fd2565b508682101561200f5760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b600061202f611a3d84611a08565b905082815283838301111561204357600080fd5b610924836020830184611b60565b60006020828403121561206357600080fd5b81516001600160401b0381111561207957600080fd5b8201601f8101841361208a57600080fd5b611b5884825160208401612021565b61ffff851681526080602082015260006120b66080830186611b84565b6001600160401b03851660408401528281036060840152611f228185611b84565b61ffff8716815260c0602082015260006120f460c0830188611b84565b82810360408401526121068188611b84565b6001600160a01b0387811660608601528616608085015283810360a085015290506121318185611b84565b9998505050505050505050565b80820180821115611ecd57611ecd611ea4565b60008251612163818460208701611b60565b9190910192915050565b61ffff8616815260a06020820152600061218a60a0830187611b84565b6001600160401b038616604084015282810360608401526121ab8186611b84565b905082810360808401526121bf8185611b84565b9897505050505050505056fea2646970667358221220fb337d3f3212fe145603f0e641ee588d5a8e28d3d51f69d9038937da086e7f1064736f6c63430008140033","opcodes":"PUSH1 0xE0 PUSH1 0x40 MSTORE PUSH1 0x14 PUSH1 0xA0 SWAP1 DUP2 MSTORE PUSH32 0x4E6F7468696E6720726563656976656420796574000000000000000000000000 PUSH1 0xC0 MSTORE PUSH1 0x6 SWAP1 PUSH3 0x3E SWAP1 DUP3 PUSH3 0x1EA JUMP JUMPDEST POP CALLVALUE DUP1 ISZERO PUSH3 0x4C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2536 CODESIZE SUB DUP1 PUSH3 0x2536 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x6F SWAP2 PUSH3 0x2B6 JUMP JUMPDEST DUP1 DUP1 PUSH3 0x7C CALLER PUSH3 0xF5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x80 MSTORE DUP3 AND PUSH20 0x6FCB97553D41516CB228AC03FDC8B9A0A9DF04A1 SUB SWAP1 POP PUSH3 0xB9 JUMPI PUSH1 0x7 DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0x2780 OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH20 0x7DCAD72640F835B0FA36EFD3D6D3EC902C7E5ACF SUB PUSH3 0xEE JUMPI PUSH1 0x7 DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0x2776 OR SWAP1 SSTORE JUMPDEST POP PUSH3 0x2E8 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x170 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x191 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x1E5 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x1C0 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x1E1 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x1CC JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x206 JUMPI PUSH3 0x206 PUSH3 0x145 JUMP JUMPDEST PUSH3 0x21E DUP2 PUSH3 0x217 DUP5 SLOAD PUSH3 0x15B JUMP JUMPDEST DUP5 PUSH3 0x197 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x256 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x23D JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x1E1 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x287 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x266 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x2A6 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x2C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x2E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x2201 PUSH3 0x335 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x422 ADD MSTORE DUP2 DUP2 PUSH2 0x530 ADD MSTORE DUP2 DUP2 PUSH2 0x77F ADD MSTORE DUP2 DUP2 PUSH2 0x827 ADD MSTORE DUP2 DUP2 PUSH2 0x94A ADD MSTORE DUP2 DUP2 PUSH2 0xE10 ADD MSTORE DUP2 DUP2 PUSH2 0x120A ADD MSTORE PUSH2 0x148B ADD MSTORE PUSH2 0x2201 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x146 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0x1D3567 EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0x7E0DB17 EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0xDF37483 EQ PUSH2 0x18D JUMPI DUP1 PUSH4 0x10DDB137 EQ PUSH2 0x1AD JUMPI DUP1 PUSH4 0x3D8B38F6 EQ PUSH2 0x1CD JUMPI DUP1 PUSH4 0x3F1F4FA4 EQ PUSH2 0x202 JUMPI DUP1 PUSH4 0x42D65A8D EQ PUSH2 0x23D JUMPI DUP1 PUSH4 0x5B8C41E6 EQ PUSH2 0x25D JUMPI DUP1 PUSH4 0x5CDF1649 EQ PUSH2 0x2AC JUMPI DUP1 PUSH4 0x66792BA1 EQ PUSH2 0x2CC JUMPI DUP1 PUSH4 0x66AD5C8A EQ PUSH2 0x2DF JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2FF JUMPI DUP1 PUSH4 0x73D4A13A EQ PUSH2 0x314 JUMPI DUP1 PUSH4 0x7533D788 EQ PUSH2 0x336 JUMPI DUP1 PUSH4 0x8CFD8F5C EQ PUSH2 0x356 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x38E JUMPI DUP1 PUSH4 0x950C8A74 EQ PUSH2 0x3B0 JUMPI DUP1 PUSH4 0x9F38369A EQ PUSH2 0x3D0 JUMPI DUP1 PUSH4 0xA6C3D165 EQ PUSH2 0x3F0 JUMPI DUP1 PUSH4 0xB353AAA7 EQ PUSH2 0x410 JUMPI DUP1 PUSH4 0xBAF3292D EQ PUSH2 0x444 JUMPI DUP1 PUSH4 0xC4461834 EQ PUSH2 0x464 JUMPI DUP1 PUSH4 0xCBED8B9C EQ PUSH2 0x47A JUMPI DUP1 PUSH4 0xD1DEBA1F EQ PUSH2 0x49A JUMPI DUP1 PUSH4 0xDF2A5B3B EQ PUSH2 0x4AD JUMPI DUP1 PUSH4 0xEB8D72B7 EQ PUSH2 0x4CD JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4ED JUMPI DUP1 PUSH4 0xF5ECBDBC EQ PUSH2 0x50D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x157 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16B PUSH2 0x166 CALLDATASIZE PUSH1 0x4 PUSH2 0x1898 JUMP JUMPDEST PUSH2 0x52D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x179 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16B PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x192B JUMP JUMPDEST PUSH2 0x75E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x199 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16B PUSH2 0x1A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1946 JUMP JUMPDEST PUSH2 0x7E7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16B PUSH2 0x1C8 CALLDATASIZE PUSH1 0x4 PUSH2 0x192B JUMP JUMPDEST PUSH2 0x806 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1ED PUSH2 0x1E8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1970 JUMP JUMPDEST PUSH2 0x85E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22F PUSH2 0x21D CALLDATASIZE PUSH1 0x4 PUSH2 0x192B JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x249 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16B PUSH2 0x258 CALLDATASIZE PUSH1 0x4 PUSH2 0x1970 JUMP JUMPDEST PUSH2 0x92B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x269 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22F PUSH2 0x278 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A6D JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 DUP5 MLOAD DUP1 DUP7 ADD DUP5 ADD DUP1 MLOAD SWAP3 DUP2 MSTORE SWAP1 DUP5 ADD SWAP6 DUP5 ADD SWAP6 SWAP1 SWAP6 KECCAK256 SWAP5 MSTORE SWAP3 SWAP1 MSTORE DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16B PUSH2 0x2C7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AF5 JUMP JUMPDEST PUSH2 0x9B1 JUMP JUMPDEST PUSH2 0x16B PUSH2 0x2DA CALLDATASIZE PUSH1 0x4 PUSH2 0x1B10 JUMP JUMPDEST PUSH2 0xA0E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16B PUSH2 0x2FA CALLDATASIZE PUSH1 0x4 PUSH2 0x1898 JUMP JUMPDEST PUSH2 0xA55 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16B PUSH2 0xB31 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x320 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x329 PUSH2 0xB45 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F9 SWAP2 SWAP1 PUSH2 0x1BB0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x342 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x329 PUSH2 0x351 CALLDATASIZE PUSH1 0x4 PUSH2 0x192B JUMP JUMPDEST PUSH2 0xBD3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x362 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22F PUSH2 0x371 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BC3 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A3 PUSH2 0xBEC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F9 SWAP2 SWAP1 PUSH2 0x1BF6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 SLOAD PUSH2 0x3A3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x329 PUSH2 0x3EB CALLDATASIZE PUSH1 0x4 PUSH2 0x192B JUMP JUMPDEST PUSH2 0xBFB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16B PUSH2 0x40B CALLDATASIZE PUSH1 0x4 PUSH2 0x1970 JUMP JUMPDEST PUSH2 0xD0A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A3 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x450 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16B PUSH2 0x45F CALLDATASIZE PUSH1 0x4 PUSH2 0x1AF5 JUMP JUMPDEST PUSH2 0xD93 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x470 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22F PUSH2 0x2710 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x486 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16B PUSH2 0x495 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C0A JUMP JUMPDEST PUSH2 0xDF1 JUMP JUMPDEST PUSH2 0x16B PUSH2 0x4A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1898 JUMP JUMPDEST PUSH2 0xE86 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16B PUSH2 0x4C8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C78 JUMP JUMPDEST PUSH2 0x109C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16B PUSH2 0x4E8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1970 JUMP JUMPDEST PUSH2 0x1106 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16B PUSH2 0x508 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AF5 JUMP JUMPDEST PUSH2 0x1160 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x519 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x329 PUSH2 0x528 CALLDATASIZE PUSH1 0x4 PUSH2 0x1CB4 JUMP JUMPDEST PUSH2 0x11D9 JUMP JUMPDEST CALLER PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x5AA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C7A4170703A20696E76616C696420656E64706F696E742063616C6C65720000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFFFF DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH2 0x5C8 SWAP1 PUSH2 0x1CFF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5F4 SWAP1 PUSH2 0x1CFF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x641 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x616 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x641 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x624 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP1 MLOAD DUP7 DUP7 SWAP1 POP EQ DUP1 ISZERO PUSH2 0x65C JUMPI POP PUSH1 0x0 DUP2 MLOAD GT JUMPDEST DUP1 ISZERO PUSH2 0x684 JUMPI POP DUP1 MLOAD PUSH1 0x20 DUP3 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x67A SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH2 0x1D39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 EQ JUMPDEST PUSH2 0x6DF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C7A4170703A20696E76616C696420736F757263652073656E64696E6720636F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1B9D1C9858DD PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5A1 JUMP JUMPDEST PUSH2 0x755 DUP8 DUP8 DUP8 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP11 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP9 DUP2 MSTORE DUP11 SWAP4 POP SWAP2 POP DUP9 SWAP1 DUP9 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x128A SWAP3 POP POP POP JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x766 PUSH2 0x1303 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x7E0DB17 PUSH1 0xE0 SHL DUP2 MSTORE PUSH2 0xFFFF DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x7E0DB17 SWAP1 PUSH1 0x24 ADD JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7E0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x7EF PUSH2 0x1303 JUMP JUMPDEST PUSH2 0xFFFF SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMP JUMPDEST PUSH2 0x80E PUSH2 0x1303 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x10DDB137 PUSH1 0xE0 SHL DUP2 MSTORE PUSH2 0xFFFF DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x10DDB137 SWAP1 PUSH1 0x24 ADD PUSH2 0x7B2 JUMP JUMPDEST PUSH2 0xFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP3 SWAP2 SWAP1 PUSH2 0x87F SWAP1 PUSH2 0x1CFF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8AB SWAP1 PUSH2 0x1CFF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8F8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8CD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8F8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8DB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x90F SWAP3 SWAP2 SWAP1 PUSH2 0x1D39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP2 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x933 PUSH2 0x1303 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x42D65A8D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x42D65A8D SWAP1 PUSH2 0x983 SWAP1 DUP7 SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x1D72 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x99D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x755 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH2 0x9B9 PUSH2 0x1303 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT PUSH1 0x60 DUP4 DUP2 SHL DUP3 AND PUSH1 0x20 DUP5 ADD MSTORE ADDRESS SWAP1 SHL AND PUSH1 0x34 DUP3 ADD MSTORE PUSH1 0x48 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x7 SLOAD PUSH2 0xFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE KECCAK256 SWAP1 PUSH2 0xA0A SWAP1 DUP3 PUSH2 0x1DEB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xA21 SWAP2 SWAP1 PUSH2 0x1BB0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE PUSH1 0x7 SLOAD PUSH1 0x20 DUP5 ADD SWAP1 SWAP3 MSTORE PUSH1 0x0 DUP1 DUP5 MSTORE SWAP1 SWAP4 POP PUSH2 0xA0A SWAP3 PUSH2 0xFFFF SWAP1 SWAP3 AND SWAP2 DUP5 SWAP2 CALLER SWAP2 CALLVALUE PUSH2 0x1362 JUMP JUMPDEST CALLER ADDRESS EQ PUSH2 0xAB3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F6E626C6F636B696E674C7A4170703A2063616C6C6572206D757374206265 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x204C7A41707 PUSH1 0xD4 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5A1 JUMP JUMPDEST PUSH2 0xB29 DUP7 DUP7 DUP7 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP10 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP8 DUP2 MSTORE DUP10 SWAP4 POP SWAP2 POP DUP8 SWAP1 DUP8 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x1507 SWAP3 POP POP POP JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xB39 PUSH2 0x1303 JUMP JUMPDEST PUSH2 0xB43 PUSH1 0x0 PUSH2 0x1528 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH2 0xB52 SWAP1 PUSH2 0x1CFF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB7E SWAP1 PUSH2 0x1CFF JUMP JUMPDEST DUP1 ISZERO PUSH2 0xBCB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xBA0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xBCB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xBAE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0xB52 SWAP1 PUSH2 0x1CFF JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0xFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x60 SWAP3 SWAP2 SWAP1 PUSH2 0xC1E SWAP1 PUSH2 0x1CFF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xC4A SWAP1 PUSH2 0x1CFF JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC97 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC6C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC97 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC7A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xCEF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C7A4170703A206E6F20747275737465642070617468207265636F7264000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5A1 JUMP JUMPDEST PUSH2 0x924 PUSH1 0x0 PUSH1 0x14 DUP4 MLOAD PUSH2 0xD02 SWAP2 SWAP1 PUSH2 0x1EBA JUMP JUMPDEST DUP4 SWAP2 SWAP1 PUSH2 0x1578 JUMP JUMPDEST PUSH2 0xD12 PUSH2 0x1303 JUMP JUMPDEST DUP2 DUP2 ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xD27 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1ED3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH2 0xFFFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE KECCAK256 SWAP1 PUSH2 0xD52 SWAP1 DUP3 PUSH2 0x1DEB JUMP JUMPDEST POP PUSH32 0x8C0400CFE2D1199B1A725C78960BCC2A344D869B80590D0F2BD005DB15A572CE DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0xD86 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH2 0xD9B PUSH2 0x1303 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x5DB758E995A17EC1AD84BDEF7E8C3293A0BD6179BCCE400DFF5D4C3D87DB726B SWAP1 PUSH2 0xDE6 SWAP1 DUP4 SWAP1 PUSH2 0x1BF6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0xDF9 PUSH2 0x1303 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x32FB62E7 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0xCBED8B9C SWAP1 PUSH2 0xE4D SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1EF4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE7B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xFFFF DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP1 MLOAD PUSH2 0xEA9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH2 0x1D39 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 SWAP3 DUP2 SWAP1 SUB DUP4 ADD SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 POP DUP1 PUSH2 0xF29 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F6E626C6F636B696E674C7A4170703A206E6F2073746F726564206D657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x616765 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5A1 JUMP JUMPDEST DUP1 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0xF3A SWAP3 SWAP2 SWAP1 PUSH2 0x1D39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 EQ PUSH2 0xF99 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F6E626C6F636B696E674C7A4170703A20696E76616C6964207061796C6F61 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0xFA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5A1 JUMP JUMPDEST PUSH2 0xFFFF DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP1 MLOAD PUSH2 0xFBC SWAP1 DUP10 SWAP1 DUP10 SWAP1 PUSH2 0x1D39 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 SWAP3 DUP2 SWAP1 SUB DUP4 ADD DUP2 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP1 DUP5 MSTORE DUP3 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x1F DUP9 ADD DUP3 SWAP1 DIV DUP3 MUL DUP4 ADD DUP3 ADD SWAP1 MSTORE DUP7 DUP3 MSTORE PUSH2 0x1054 SWAP2 DUP10 SWAP2 DUP10 SWAP1 DUP10 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP11 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP9 DUP2 MSTORE DUP11 SWAP4 POP SWAP2 POP DUP9 SWAP1 DUP9 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x1507 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0xC264D91F3ADC5588250E1551F547752CA0CFA8F6B530D243B9F9F4CAB10EA8E5 DUP8 DUP8 DUP8 DUP8 DUP6 PUSH1 0x40 MLOAD PUSH2 0x108B SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F2D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x10A4 PUSH2 0x1303 JUMP JUMPDEST PUSH2 0xFFFF DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD SWAP3 DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP2 ADD DUP3 SWAP1 MSTORE PUSH32 0x9D5C7C0B934DA8FEFA9C7760C98383778A12DFBFC0C3B3106518F43FB9508AC0 SWAP1 PUSH1 0x60 ADD PUSH2 0xD86 JUMP JUMPDEST PUSH2 0x110E PUSH2 0x1303 JUMP JUMPDEST PUSH2 0xFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x112C DUP3 DUP5 DUP4 PUSH2 0x1F68 JUMP JUMPDEST POP PUSH32 0xFA41487AD5D6728F0B19276FA1EDDC16558578F5109FC39D2DC33C3230470DAB DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0xD86 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D72 JUMP JUMPDEST PUSH2 0x1168 PUSH2 0x1303 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x11CD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5A1 JUMP JUMPDEST PUSH2 0x11D6 DUP2 PUSH2 0x1528 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3D7B2F6F PUSH1 0xE2 SHL DUP2 MSTORE PUSH2 0xFFFF DUP1 DUP7 AND PUSH1 0x4 DUP4 ADD MSTORE DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE ADDRESS PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xF5ECBDBC SWAP1 PUSH1 0x84 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1259 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x1281 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2051 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x12ED GAS PUSH1 0x96 PUSH4 0x66AD5C8A PUSH1 0xE0 SHL DUP10 DUP10 DUP10 DUP10 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x12B2 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2099 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE ADDRESS SWAP3 SWAP2 SWAP1 PUSH2 0x1685 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 PUSH2 0xB29 JUMPI PUSH2 0xB29 DUP7 DUP7 DUP7 DUP7 DUP6 PUSH2 0x170F JUMP JUMPDEST CALLER PUSH2 0x130C PUSH2 0xBEC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xB43 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5A1 JUMP JUMPDEST PUSH2 0xFFFF DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH2 0x1380 SWAP1 PUSH2 0x1CFF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x13AC SWAP1 PUSH2 0x1CFF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x13F9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x13CE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x13F9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x13DC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x146A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C7A4170703A2064657374696E6174696F6E20636861696E206973206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x61207472757374656420736F75726365 PUSH1 0x80 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5A1 JUMP JUMPDEST PUSH2 0x1475 DUP8 DUP8 MLOAD PUSH2 0x17AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0xC58031 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0xC5803100 SWAP1 DUP5 SWAP1 PUSH2 0x14CC SWAP1 DUP12 SWAP1 DUP7 SWAP1 DUP13 SWAP1 DUP13 SWAP1 DUP13 SWAP1 DUP13 SWAP1 PUSH1 0x4 ADD PUSH2 0x20D7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x14E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x14F9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x151B SWAP2 SWAP1 PUSH2 0x2051 JUMP JUMPDEST PUSH1 0x6 SWAP1 PUSH2 0x7E0 SWAP1 DUP3 PUSH2 0x1DEB JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH2 0x1586 DUP2 PUSH1 0x1F PUSH2 0x213E JUMP JUMPDEST LT ISZERO PUSH2 0x15C5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x736C6963655F6F766572666C6F77 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5A1 JUMP JUMPDEST PUSH2 0x15CF DUP3 DUP5 PUSH2 0x213E JUMP JUMPDEST DUP5 MLOAD LT ISZERO PUSH2 0x1613 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x736C6963655F6F75744F66426F756E6473 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5A1 JUMP JUMPDEST PUSH1 0x60 DUP3 ISZERO DUP1 ISZERO PUSH2 0x1632 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x0 DUP3 MSTORE PUSH1 0x20 DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x167C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F DUP5 AND DUP1 ISZERO PUSH1 0x20 MUL DUP2 DUP5 ADD ADD DUP6 DUP2 ADD DUP8 DUP4 ISZERO PUSH1 0x20 MUL DUP5 DUP12 ADD ADD ADD JUMPDEST DUP2 DUP4 LT ISZERO PUSH2 0x166B JUMPI DUP1 MLOAD DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x1653 JUMP JUMPDEST POP POP DUP6 DUP5 MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x40 MSTORE POP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 DUP1 PUSH1 0x0 DUP7 PUSH2 0xFFFF AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x16AA JUMPI PUSH2 0x16AA PUSH2 0x19C2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x16D4 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 DUP8 MLOAD PUSH1 0x20 DUP10 ADD PUSH1 0x0 DUP14 DUP14 CALL SWAP2 POP RETURNDATASIZE SWAP3 POP DUP7 DUP4 GT ISZERO PUSH2 0x16F6 JUMPI DUP7 SWAP3 POP JUMPDEST DUP3 DUP2 MSTORE DUP3 PUSH1 0x0 PUSH1 0x20 DUP4 ADD RETURNDATACOPY SWAP1 SWAP9 SWAP1 SWAP8 POP SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP2 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x5 PUSH1 0x0 DUP8 PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1740 SWAP2 SWAP1 PUSH2 0x2151 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB PUSH1 0x20 SWAP1 DUP2 ADD DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP2 MSTORE KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH32 0xE183F33DE2837795525B4792CA4CD60535BD77C53B7E7030060BFCF5734D6B0C SWAP1 PUSH2 0x179D SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH2 0x216D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH2 0xFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 DUP2 SWAP1 SUB PUSH2 0x17CD JUMPI POP PUSH2 0x2710 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x181D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C7A4170703A207061796C6F61642073697A6520697320746F6F206C61726765 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5A1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0x1834 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x184B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1862 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x187A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1834 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x18B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x18BA DUP8 PUSH2 0x1822 JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x18D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x18E2 DUP11 DUP4 DUP12 ADD PUSH2 0x1839 JUMP JUMPDEST SWAP1 SWAP8 POP SWAP6 POP DUP6 SWAP2 POP PUSH2 0x18F6 PUSH1 0x40 DUP11 ADD PUSH2 0x1881 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x190C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1919 DUP10 DUP3 DUP11 ADD PUSH2 0x1839 JUMP JUMPDEST SWAP8 SWAP11 SWAP7 SWAP10 POP SWAP5 SWAP8 POP SWAP3 SWAP6 SWAP4 SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x193D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x924 DUP3 PUSH2 0x1822 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1959 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1962 DUP4 PUSH2 0x1822 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1985 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x198E DUP5 PUSH2 0x1822 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x19A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x19B5 DUP7 DUP3 DUP8 ADD PUSH2 0x1839 JUMP JUMPDEST SWAP5 SWAP8 SWAP1 SWAP7 POP SWAP4 SWAP5 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1A00 JUMPI PUSH2 0x1A00 PUSH2 0x19C2 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x1A21 JUMPI PUSH2 0x1A21 PUSH2 0x19C2 JUMP JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A42 PUSH2 0x1A3D DUP5 PUSH2 0x1A08 JUMP JUMPDEST PUSH2 0x19D8 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE DUP4 DUP4 DUP4 ADD GT ISZERO PUSH2 0x1A56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP3 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1A82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A8B DUP5 PUSH2 0x1822 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1AA6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 ADD PUSH1 0x1F DUP2 ADD DUP7 SGT PUSH2 0x1AB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1AC6 DUP7 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x1A2F JUMP JUMPDEST SWAP3 POP POP PUSH2 0x1AD5 PUSH1 0x40 DUP6 ADD PUSH2 0x1881 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1834 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B07 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x924 DUP3 PUSH2 0x1ADE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1B38 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x1B49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B58 DUP5 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x1A2F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1B7B JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1B63 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1B9C DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1B60 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x924 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1B84 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BD6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1BDF DUP4 PUSH2 0x1822 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BED PUSH1 0x20 DUP5 ADD PUSH2 0x1822 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1C22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C2B DUP7 PUSH2 0x1822 JUMP JUMPDEST SWAP5 POP PUSH2 0x1C39 PUSH1 0x20 DUP8 ADD PUSH2 0x1822 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1C5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C67 DUP9 DUP3 DUP10 ADD PUSH2 0x1839 JUMP JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP SWAP3 SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1C8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C96 DUP5 PUSH2 0x1822 JUMP JUMPDEST SWAP3 POP PUSH2 0x1CA4 PUSH1 0x20 DUP6 ADD PUSH2 0x1822 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1CCA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1CD3 DUP6 PUSH2 0x1822 JUMP JUMPDEST SWAP4 POP PUSH2 0x1CE1 PUSH1 0x20 DUP7 ADD PUSH2 0x1822 JUMP JUMPDEST SWAP3 POP PUSH2 0x1CEF PUSH1 0x40 DUP7 ADD PUSH2 0x1ADE JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP3 SWAP4 PUSH1 0x60 ADD CALLDATALOAD SWAP3 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1D13 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1D33 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 DUP4 DUP3 CALLDATACOPY PUSH1 0x0 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 DUP4 MSTORE DUP2 DUP2 PUSH1 0x20 DUP6 ADD CALLDATACOPY POP PUSH1 0x0 DUP3 DUP3 ADD PUSH1 0x20 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP2 ADD ADD SWAP1 JUMP JUMPDEST PUSH2 0xFFFF DUP5 AND DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x1281 PUSH1 0x40 DUP4 ADD DUP5 DUP7 PUSH2 0x1D49 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x181D JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x1DB7 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xB29 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1DC3 JUMP JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND PUSH1 0x1 SWAP2 SWAP1 SWAP2 SHL OR SWAP1 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1E04 JUMPI PUSH2 0x1E04 PUSH2 0x19C2 JUMP JUMPDEST PUSH2 0x1E18 DUP2 PUSH2 0x1E12 DUP5 SLOAD PUSH2 0x1CFF JUMP JUMPDEST DUP5 PUSH2 0x1D90 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1E47 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x1E35 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH2 0x1E3F DUP6 DUP3 PUSH2 0x1DD6 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0xB29 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1E76 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x1E57 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x1E94 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x1ECD JUMPI PUSH2 0x1ECD PUSH2 0x1EA4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP5 DUP3 CALLDATACOPY PUSH1 0x60 SWAP2 SWAP1 SWAP2 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND SWAP2 ADD SWAP1 DUP2 MSTORE PUSH1 0x14 ADD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP1 DUP9 AND DUP4 MSTORE DUP1 DUP8 AND PUSH1 0x20 DUP5 ADD MSTORE POP DUP5 PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1F22 PUSH1 0x80 DUP4 ADD DUP5 DUP7 PUSH2 0x1D49 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xFFFF DUP7 AND DUP2 MSTORE PUSH1 0x80 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x1F4B PUSH1 0x80 DUP4 ADD DUP7 DUP9 PUSH2 0x1D49 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP5 SWAP1 SWAP5 AND PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT ISZERO PUSH2 0x1F7F JUMPI PUSH2 0x1F7F PUSH2 0x19C2 JUMP JUMPDEST PUSH2 0x1F93 DUP4 PUSH2 0x1F8D DUP4 SLOAD PUSH2 0x1CFF JUMP JUMPDEST DUP4 PUSH2 0x1D90 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP5 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1FC1 JUMPI PUSH1 0x0 DUP6 ISZERO PUSH2 0x1FAF JUMPI POP DUP4 DUP3 ADD CALLDATALOAD JUMPDEST PUSH2 0x1FB9 DUP7 DUP3 PUSH2 0x1DD6 JUMP JUMPDEST DUP5 SSTORE POP PUSH2 0x7E0 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP1 DUP4 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1FF2 JUMPI DUP7 DUP6 ADD CALLDATALOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x1FD2 JUMP JUMPDEST POP DUP7 DUP3 LT ISZERO PUSH2 0x200F JUMPI PUSH1 0x0 NOT PUSH1 0xF8 DUP9 PUSH1 0x3 SHL AND SHR NOT DUP5 DUP8 ADD CALLDATALOAD AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP6 PUSH1 0x1 SHL ADD DUP4 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x202F PUSH2 0x1A3D DUP5 PUSH2 0x1A08 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE DUP4 DUP4 DUP4 ADD GT ISZERO PUSH2 0x2043 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x924 DUP4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1B60 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2063 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2079 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x208A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B58 DUP5 DUP3 MLOAD PUSH1 0x20 DUP5 ADD PUSH2 0x2021 JUMP JUMPDEST PUSH2 0xFFFF DUP6 AND DUP2 MSTORE PUSH1 0x80 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x20B6 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x1B84 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP6 AND PUSH1 0x40 DUP5 ADD MSTORE DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x1F22 DUP2 DUP6 PUSH2 0x1B84 JUMP JUMPDEST PUSH2 0xFFFF DUP8 AND DUP2 MSTORE PUSH1 0xC0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x20F4 PUSH1 0xC0 DUP4 ADD DUP9 PUSH2 0x1B84 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x2106 DUP2 DUP9 PUSH2 0x1B84 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x60 DUP7 ADD MSTORE DUP7 AND PUSH1 0x80 DUP6 ADD MSTORE DUP4 DUP2 SUB PUSH1 0xA0 DUP6 ADD MSTORE SWAP1 POP PUSH2 0x2131 DUP2 DUP6 PUSH2 0x1B84 JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x1ECD JUMPI PUSH2 0x1ECD PUSH2 0x1EA4 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x2163 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1B60 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xFFFF DUP7 AND DUP2 MSTORE PUSH1 0xA0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x218A PUSH1 0xA0 DUP4 ADD DUP8 PUSH2 0x1B84 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP7 AND PUSH1 0x40 DUP5 ADD MSTORE DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x21AB DUP2 DUP7 PUSH2 0x1B84 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x21BF DUP2 DUP6 PUSH2 0x1B84 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFB CALLER PUSH30 0x3F3212FE145603F0E641EE588D5A8E28D3D51F69D9038937DA086E7F1064 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"457:43:9:-:0;407:1143;457:43;;407:1143;457:43;;;;;;;;;;;;:::i;:::-;;538:449;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;588:11;;936:32:7;719:10:8;936:18:7;:32::i;:::-;-1:-1:-1;;;;;1201:42:2;;;;;616:57:9;::::1;631:42;616:57:::0;;-1:-1:-1;612:82:9::1;;675:11;:19:::0;;-1:-1:-1;;675:19:9::1;689:5;675:19;::::0;;612:82:::1;-1:-1:-1::0;;;;;709:57:9;::::1;724:42;709:57:::0;705:82:::1;;768:11;:19:::0;;-1:-1:-1;;768:19:9::1;782:5;768:19;::::0;;705:82:::1;538:449:::0;407:1143;;2426:187:7;2499:16;2518:6;;-1:-1:-1;;;;;2534:17:7;;;-1:-1:-1;;;;;;2534:17:7;;;;;;2566:40;;2518:6;;;;;;;2566:40;;2499:16;2566:40;2489:124;2426:187;:::o;14:127:10:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:10;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;748:448;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:10;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:10;;;2580:26;2531:89;-1:-1:-1;;1335:1:10;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:10;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:10;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:10;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:10:o;2735:290::-;2805:6;2858:2;2846:9;2837:7;2833:23;2829:32;2826:52;;;2874:1;2871;2864:12;2826:52;2900:16;;-1:-1:-1;;;;;2945:31:10;;2935:42;;2925:70;;2991:1;2988;2981:12;2925:70;3014:5;2735:290;-1:-1:-1;;;2735:290:10:o;:::-;407:1143:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@DEFAULT_PAYLOAD_SIZE_LIMIT_448":{"entryPoint":null,"id":448,"parameterSlots":0,"returnSlots":0},"@_blockingLzReceive_1068":{"entryPoint":4746,"id":1068,"parameterSlots":4,"returnSlots":0},"@_checkOwner_1457":{"entryPoint":4867,"id":1457,"parameterSlots":0,"returnSlots":0},"@_checkPayloadSize_711":{"entryPoint":6060,"id":711,"parameterSlots":2,"returnSlots":0},"@_lzSend_622":{"entryPoint":4962,"id":622,"parameterSlots":6,"returnSlots":0},"@_msgSender_1527":{"entryPoint":null,"id":1527,"parameterSlots":0,"returnSlots":1},"@_nonblockingLzReceive_1595":{"entryPoint":5383,"id":1595,"parameterSlots":4,"returnSlots":0},"@_storeFailedMessage_1102":{"entryPoint":5903,"id":1102,"parameterSlots":5,"returnSlots":0},"@_transferOwnership_1514":{"entryPoint":5416,"id":1514,"parameterSlots":1,"returnSlots":0},"@data_1545":{"entryPoint":2885,"id":1545,"parameterSlots":0,"returnSlots":0},"@excessivelySafeCall_372":{"entryPoint":5765,"id":372,"parameterSlots":4,"returnSlots":2},"@failedMessages_997":{"entryPoint":null,"id":997,"parameterSlots":0,"returnSlots":0},"@forceResumeReceive_808":{"entryPoint":2347,"id":808,"parameterSlots":3,"returnSlots":0},"@getConfig_736":{"entryPoint":4569,"id":736,"parameterSlots":4,"returnSlots":1},"@getTrustedRemoteAddress_888":{"entryPoint":3067,"id":888,"parameterSlots":1,"returnSlots":1},"@isTrustedRemote_970":{"entryPoint":2142,"id":970,"parameterSlots":3,"returnSlots":1},"@lzEndpoint_451":{"entryPoint":null,"id":451,"parameterSlots":0,"returnSlots":0},"@lzReceive_562":{"entryPoint":1325,"id":562,"parameterSlots":6,"returnSlots":0},"@minDstGasLookup_461":{"entryPoint":null,"id":461,"parameterSlots":0,"returnSlots":0},"@nonblockingLzReceive_1132":{"entryPoint":2645,"id":1132,"parameterSlots":6,"returnSlots":0},"@owner_1443":{"entryPoint":3052,"id":1443,"parameterSlots":0,"returnSlots":1},"@payloadSizeLimitLookup_465":{"entryPoint":null,"id":465,"parameterSlots":0,"returnSlots":0},"@precrime_467":{"entryPoint":null,"id":467,"parameterSlots":0,"returnSlots":0},"@renounceOwnership_1471":{"entryPoint":2865,"id":1471,"parameterSlots":0,"returnSlots":0},"@retryMessage_1211":{"entryPoint":3718,"id":1211,"parameterSlots":6,"returnSlots":0},"@send_1628":{"entryPoint":2574,"id":1628,"parameterSlots":1,"returnSlots":0},"@setConfig_760":{"entryPoint":3569,"id":760,"parameterSlots":5,"returnSlots":0},"@setMinDstGas_930":{"entryPoint":4252,"id":930,"parameterSlots":3,"returnSlots":0},"@setPayloadSizeLimit_946":{"entryPoint":2023,"id":946,"parameterSlots":2,"returnSlots":0},"@setPrecrime_904":{"entryPoint":3475,"id":904,"parameterSlots":1,"returnSlots":0},"@setReceiveVersion_790":{"entryPoint":2054,"id":790,"parameterSlots":1,"returnSlots":0},"@setSendVersion_775":{"entryPoint":1886,"id":775,"parameterSlots":1,"returnSlots":0},"@setTrustedRemoteAddress_857":{"entryPoint":3338,"id":857,"parameterSlots":3,"returnSlots":0},"@setTrustedRemote_829":{"entryPoint":4358,"id":829,"parameterSlots":3,"returnSlots":0},"@slice_63":{"entryPoint":5496,"id":63,"parameterSlots":3,"returnSlots":1},"@transferOwnership_1494":{"entryPoint":4448,"id":1494,"parameterSlots":1,"returnSlots":0},"@trustAddress_1649":{"entryPoint":2481,"id":1649,"parameterSlots":1,"returnSlots":0},"@trustedRemoteLookup_455":{"entryPoint":3027,"id":455,"parameterSlots":0,"returnSlots":0},"abi_decode_address":{"entryPoint":6878,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_available_length_bytes":{"entryPoint":6703,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_bytes_fromMemory":{"entryPoint":8225,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_bytes_calldata":{"entryPoint":6201,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_address":{"entryPoint":6901,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes_memory_ptr_fromMemory":{"entryPoint":8273,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptr":{"entryPoint":6928,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptr_fromMemory":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint16":{"entryPoint":6443,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint16t_bytes_calldata_ptr":{"entryPoint":6512,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint16t_bytes_calldata_ptrt_uint64t_bytes_calldata_ptr":{"entryPoint":6296,"id":null,"parameterSlots":2,"returnSlots":6},"abi_decode_tuple_t_uint16t_bytes_memory_ptrt_uint64":{"entryPoint":6765,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint16t_uint16":{"entryPoint":7107,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint16t_uint16t_addresst_uint256":{"entryPoint":7348,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_uint16t_uint16t_uint256":{"entryPoint":7288,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint16t_uint16t_uint256t_bytes_calldata_ptr":{"entryPoint":7178,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_uint16t_uint256":{"entryPoint":6470,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_uint16":{"entryPoint":6178,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_uint64":{"entryPoint":6273,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_bytes_calldata":{"entryPoint":7497,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_string":{"entryPoint":7044,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_address_t_address__to_t_address_t_address__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":7481,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_calldata_ptr_t_address__to_t_bytes_memory_ptr_t_address__nonPadded_inplace_fromStack_reversed":{"entryPoint":7891,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":8529,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":7158,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_ILayerZeroEndpoint_$1357__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7088,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_040dbcd22d0c850129389688c2109073ca44dde7f3a3f87432ca92b23d42a4fa__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_090ffd986411f3003f8dc74b3284ca36e66b7183a1b08562ef7e5313ae219552__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_2f696afe693778252c14fa484dbc5c908ccf2058495ef32014aba88a3b963894__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_5d3d629f76473d94377d221b1f1c8f2161f7b65cab69e095662ec5d0e026c17e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_65511ce9fb02a17101879c9b581e54d0cddc37b781936a67d4a6ef307ad5afd7__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c76d352ff891dcabaed1e1ebf3c88e97f49052956ad0c09feadb4b7d40c688f9__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_cca2258dcc0d08c244435525255fbef9116c9a31b4c29471218f002bbbceb7a0__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e38e13663a917dea0c771faed9aebf77b2adba5435a5cc4f7207d4f2c63ce6a3__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f2c5f1a596d749e8a7585a60b880c2626f8dc4e8dd0b6f11ae55e0b2b1061815__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fdfeef12c0e20d028b50cab1ee288ba9867f56b726ecc8cd0c9ed3048ec177dd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint16_t_bytes_calldata_ptr__to_t_uint16_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":7538,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint16_t_bytes_calldata_ptr_t_uint64_t_bytes32__to_t_uint16_t_bytes_memory_ptr_t_uint64_t_bytes32__fromStack_reversed":{"entryPoint":7981,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_uint16_t_bytes_memory_ptr_t_bytes_memory_ptr_t_address_payable_t_address_t_bytes_memory_ptr__to_t_uint16_t_bytes_memory_ptr_t_bytes_memory_ptr_t_address_payable_t_address_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":8407,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_uint16_t_bytes_memory_ptr_t_uint64_t_bytes_memory_ptr__to_t_uint16_t_bytes_memory_ptr_t_uint64_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":8345,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_uint16_t_bytes_memory_ptr_t_uint64_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_uint16_t_bytes_memory_ptr_t_uint64_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":8557,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_uint16_t_uint16_t_address_t_uint256__to_t_uint16_t_uint16_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_uint16_t_uint16_t_uint256__to_t_uint16_t_uint16_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint16_t_uint16_t_uint256_t_bytes_calldata_ptr__to_t_uint16_t_uint16_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":7924,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":6616,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_bytes":{"entryPoint":6664,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_bytes_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":8510,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":7866,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_bytes_storage":{"entryPoint":7568,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_bytes_calldata_ptr_to_t_bytes_storage":{"entryPoint":8040,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage":{"entryPoint":7659,"id":null,"parameterSlots":2,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":7008,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":7423,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":7638,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":7844,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":6594,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:25835:10","statements":[{"nodeType":"YulBlock","src":"6:3:10","statements":[]},{"body":{"nodeType":"YulBlock","src":"62:111:10","statements":[{"nodeType":"YulAssignment","src":"72:29:10","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"94:6:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"81:12:10"},"nodeType":"YulFunctionCall","src":"81:20:10"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"72:5:10"}]},{"body":{"nodeType":"YulBlock","src":"151:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"160:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"163:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"153:6:10"},"nodeType":"YulFunctionCall","src":"153:12:10"},"nodeType":"YulExpressionStatement","src":"153:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"123:5:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"134:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"141:6:10","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"130:3:10"},"nodeType":"YulFunctionCall","src":"130:18:10"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"120:2:10"},"nodeType":"YulFunctionCall","src":"120:29:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"113:6:10"},"nodeType":"YulFunctionCall","src":"113:37:10"},"nodeType":"YulIf","src":"110:57:10"}]},"name":"abi_decode_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"41:6:10","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"52:5:10","type":""}],"src":"14:159:10"},{"body":{"nodeType":"YulBlock","src":"250:275:10","statements":[{"body":{"nodeType":"YulBlock","src":"299:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"308:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"311:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"301:6:10"},"nodeType":"YulFunctionCall","src":"301:12:10"},"nodeType":"YulExpressionStatement","src":"301:12:10"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"278:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"286:4:10","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"274:3:10"},"nodeType":"YulFunctionCall","src":"274:17:10"},{"name":"end","nodeType":"YulIdentifier","src":"293:3:10"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"270:3:10"},"nodeType":"YulFunctionCall","src":"270:27:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"263:6:10"},"nodeType":"YulFunctionCall","src":"263:35:10"},"nodeType":"YulIf","src":"260:55:10"},{"nodeType":"YulAssignment","src":"324:30:10","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"347:6:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"334:12:10"},"nodeType":"YulFunctionCall","src":"334:20:10"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"324:6:10"}]},{"body":{"nodeType":"YulBlock","src":"397:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"406:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"409:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"399:6:10"},"nodeType":"YulFunctionCall","src":"399:12:10"},"nodeType":"YulExpressionStatement","src":"399:12:10"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"369:6:10"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"385:2:10","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"389:1:10","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"381:3:10"},"nodeType":"YulFunctionCall","src":"381:10:10"},{"kind":"number","nodeType":"YulLiteral","src":"393:1:10","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"377:3:10"},"nodeType":"YulFunctionCall","src":"377:18:10"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"366:2:10"},"nodeType":"YulFunctionCall","src":"366:30:10"},"nodeType":"YulIf","src":"363:50:10"},{"nodeType":"YulAssignment","src":"422:29:10","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"438:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"446:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"434:3:10"},"nodeType":"YulFunctionCall","src":"434:17:10"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"422:8:10"}]},{"body":{"nodeType":"YulBlock","src":"503:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"512:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"515:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"505:6:10"},"nodeType":"YulFunctionCall","src":"505:12:10"},"nodeType":"YulExpressionStatement","src":"505:12:10"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"474:6:10"},{"name":"length","nodeType":"YulIdentifier","src":"482:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"470:3:10"},"nodeType":"YulFunctionCall","src":"470:19:10"},{"kind":"number","nodeType":"YulLiteral","src":"491:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"466:3:10"},"nodeType":"YulFunctionCall","src":"466:30:10"},{"name":"end","nodeType":"YulIdentifier","src":"498:3:10"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"463:2:10"},"nodeType":"YulFunctionCall","src":"463:39:10"},"nodeType":"YulIf","src":"460:59:10"}]},"name":"abi_decode_bytes_calldata","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"213:6:10","type":""},{"name":"end","nodeType":"YulTypedName","src":"221:3:10","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"229:8:10","type":""},{"name":"length","nodeType":"YulTypedName","src":"239:6:10","type":""}],"src":"178:347:10"},{"body":{"nodeType":"YulBlock","src":"578:123:10","statements":[{"nodeType":"YulAssignment","src":"588:29:10","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"610:6:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"597:12:10"},"nodeType":"YulFunctionCall","src":"597:20:10"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"588:5:10"}]},{"body":{"nodeType":"YulBlock","src":"679:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"688:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"691:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"681:6:10"},"nodeType":"YulFunctionCall","src":"681:12:10"},"nodeType":"YulExpressionStatement","src":"681:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"639:5:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"650:5:10"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"665:2:10","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"669:1:10","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"661:3:10"},"nodeType":"YulFunctionCall","src":"661:10:10"},{"kind":"number","nodeType":"YulLiteral","src":"673:1:10","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"657:3:10"},"nodeType":"YulFunctionCall","src":"657:18:10"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"646:3:10"},"nodeType":"YulFunctionCall","src":"646:30:10"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"636:2:10"},"nodeType":"YulFunctionCall","src":"636:41:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"629:6:10"},"nodeType":"YulFunctionCall","src":"629:49:10"},"nodeType":"YulIf","src":"626:69:10"}]},"name":"abi_decode_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"557:6:10","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"568:5:10","type":""}],"src":"530:171:10"},{"body":{"nodeType":"YulBlock","src":"863:705:10","statements":[{"body":{"nodeType":"YulBlock","src":"910:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"919:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"922:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"912:6:10"},"nodeType":"YulFunctionCall","src":"912:12:10"},"nodeType":"YulExpressionStatement","src":"912:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"884:7:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"893:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"880:3:10"},"nodeType":"YulFunctionCall","src":"880:23:10"},{"kind":"number","nodeType":"YulLiteral","src":"905:3:10","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"876:3:10"},"nodeType":"YulFunctionCall","src":"876:33:10"},"nodeType":"YulIf","src":"873:53:10"},{"nodeType":"YulAssignment","src":"935:38:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"963:9:10"}],"functionName":{"name":"abi_decode_uint16","nodeType":"YulIdentifier","src":"945:17:10"},"nodeType":"YulFunctionCall","src":"945:28:10"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"935:6:10"}]},{"nodeType":"YulVariableDeclaration","src":"982:46:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1013:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"1024:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1009:3:10"},"nodeType":"YulFunctionCall","src":"1009:18:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"996:12:10"},"nodeType":"YulFunctionCall","src":"996:32:10"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"986:6:10","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1037:28:10","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1055:2:10","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"1059:1:10","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1051:3:10"},"nodeType":"YulFunctionCall","src":"1051:10:10"},{"kind":"number","nodeType":"YulLiteral","src":"1063:1:10","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1047:3:10"},"nodeType":"YulFunctionCall","src":"1047:18:10"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1041:2:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"1092:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1101:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1104:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1094:6:10"},"nodeType":"YulFunctionCall","src":"1094:12:10"},"nodeType":"YulExpressionStatement","src":"1094:12:10"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1080:6:10"},{"name":"_1","nodeType":"YulIdentifier","src":"1088:2:10"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1077:2:10"},"nodeType":"YulFunctionCall","src":"1077:14:10"},"nodeType":"YulIf","src":"1074:34:10"},{"nodeType":"YulVariableDeclaration","src":"1117:84:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1173:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"1184:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1169:3:10"},"nodeType":"YulFunctionCall","src":"1169:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1193:7:10"}],"functionName":{"name":"abi_decode_bytes_calldata","nodeType":"YulIdentifier","src":"1143:25:10"},"nodeType":"YulFunctionCall","src":"1143:58:10"},"variables":[{"name":"value1_1","nodeType":"YulTypedName","src":"1121:8:10","type":""},{"name":"value2_1","nodeType":"YulTypedName","src":"1131:8:10","type":""}]},{"nodeType":"YulAssignment","src":"1210:18:10","value":{"name":"value1_1","nodeType":"YulIdentifier","src":"1220:8:10"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1210:6:10"}]},{"nodeType":"YulAssignment","src":"1237:18:10","value":{"name":"value2_1","nodeType":"YulIdentifier","src":"1247:8:10"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1237:6:10"}]},{"nodeType":"YulAssignment","src":"1264:47:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1296:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"1307:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1292:3:10"},"nodeType":"YulFunctionCall","src":"1292:18:10"}],"functionName":{"name":"abi_decode_uint64","nodeType":"YulIdentifier","src":"1274:17:10"},"nodeType":"YulFunctionCall","src":"1274:37:10"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"1264:6:10"}]},{"nodeType":"YulVariableDeclaration","src":"1320:48:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1353:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"1364:2:10","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1349:3:10"},"nodeType":"YulFunctionCall","src":"1349:18:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1336:12:10"},"nodeType":"YulFunctionCall","src":"1336:32:10"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"1324:8:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"1397:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1406:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1409:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1399:6:10"},"nodeType":"YulFunctionCall","src":"1399:12:10"},"nodeType":"YulExpressionStatement","src":"1399:12:10"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"1383:8:10"},{"name":"_1","nodeType":"YulIdentifier","src":"1393:2:10"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1380:2:10"},"nodeType":"YulFunctionCall","src":"1380:16:10"},"nodeType":"YulIf","src":"1377:36:10"},{"nodeType":"YulVariableDeclaration","src":"1422:86:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1478:9:10"},{"name":"offset_1","nodeType":"YulIdentifier","src":"1489:8:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1474:3:10"},"nodeType":"YulFunctionCall","src":"1474:24:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1500:7:10"}],"functionName":{"name":"abi_decode_bytes_calldata","nodeType":"YulIdentifier","src":"1448:25:10"},"nodeType":"YulFunctionCall","src":"1448:60:10"},"variables":[{"name":"value4_1","nodeType":"YulTypedName","src":"1426:8:10","type":""},{"name":"value5_1","nodeType":"YulTypedName","src":"1436:8:10","type":""}]},{"nodeType":"YulAssignment","src":"1517:18:10","value":{"name":"value4_1","nodeType":"YulIdentifier","src":"1527:8:10"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"1517:6:10"}]},{"nodeType":"YulAssignment","src":"1544:18:10","value":{"name":"value5_1","nodeType":"YulIdentifier","src":"1554:8:10"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"1544:6:10"}]}]},"name":"abi_decode_tuple_t_uint16t_bytes_calldata_ptrt_uint64t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"789:9:10","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"800:7:10","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"812:6:10","type":""},{"name":"value1","nodeType":"YulTypedName","src":"820:6:10","type":""},{"name":"value2","nodeType":"YulTypedName","src":"828:6:10","type":""},{"name":"value3","nodeType":"YulTypedName","src":"836:6:10","type":""},{"name":"value4","nodeType":"YulTypedName","src":"844:6:10","type":""},{"name":"value5","nodeType":"YulTypedName","src":"852:6:10","type":""}],"src":"706:862:10"},{"body":{"nodeType":"YulBlock","src":"1642:115:10","statements":[{"body":{"nodeType":"YulBlock","src":"1688:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1697:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1700:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1690:6:10"},"nodeType":"YulFunctionCall","src":"1690:12:10"},"nodeType":"YulExpressionStatement","src":"1690:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1663:7:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"1672:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1659:3:10"},"nodeType":"YulFunctionCall","src":"1659:23:10"},{"kind":"number","nodeType":"YulLiteral","src":"1684:2:10","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1655:3:10"},"nodeType":"YulFunctionCall","src":"1655:32:10"},"nodeType":"YulIf","src":"1652:52:10"},{"nodeType":"YulAssignment","src":"1713:38:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1741:9:10"}],"functionName":{"name":"abi_decode_uint16","nodeType":"YulIdentifier","src":"1723:17:10"},"nodeType":"YulFunctionCall","src":"1723:28:10"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1713:6:10"}]}]},"name":"abi_decode_tuple_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1608:9:10","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1619:7:10","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1631:6:10","type":""}],"src":"1573:184:10"},{"body":{"nodeType":"YulBlock","src":"1848:166:10","statements":[{"body":{"nodeType":"YulBlock","src":"1894:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1903:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1906:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1896:6:10"},"nodeType":"YulFunctionCall","src":"1896:12:10"},"nodeType":"YulExpressionStatement","src":"1896:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1869:7:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"1878:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1865:3:10"},"nodeType":"YulFunctionCall","src":"1865:23:10"},{"kind":"number","nodeType":"YulLiteral","src":"1890:2:10","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1861:3:10"},"nodeType":"YulFunctionCall","src":"1861:32:10"},"nodeType":"YulIf","src":"1858:52:10"},{"nodeType":"YulAssignment","src":"1919:38:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1947:9:10"}],"functionName":{"name":"abi_decode_uint16","nodeType":"YulIdentifier","src":"1929:17:10"},"nodeType":"YulFunctionCall","src":"1929:28:10"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1919:6:10"}]},{"nodeType":"YulAssignment","src":"1966:42:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1993:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"2004:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1989:3:10"},"nodeType":"YulFunctionCall","src":"1989:18:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1976:12:10"},"nodeType":"YulFunctionCall","src":"1976:32:10"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1966:6:10"}]}]},"name":"abi_decode_tuple_t_uint16t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1806:9:10","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1817:7:10","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1829:6:10","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1837:6:10","type":""}],"src":"1762:252:10"},{"body":{"nodeType":"YulBlock","src":"2124:376:10","statements":[{"body":{"nodeType":"YulBlock","src":"2170:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2179:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2182:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2172:6:10"},"nodeType":"YulFunctionCall","src":"2172:12:10"},"nodeType":"YulExpressionStatement","src":"2172:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2145:7:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"2154:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2141:3:10"},"nodeType":"YulFunctionCall","src":"2141:23:10"},{"kind":"number","nodeType":"YulLiteral","src":"2166:2:10","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2137:3:10"},"nodeType":"YulFunctionCall","src":"2137:32:10"},"nodeType":"YulIf","src":"2134:52:10"},{"nodeType":"YulAssignment","src":"2195:38:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2223:9:10"}],"functionName":{"name":"abi_decode_uint16","nodeType":"YulIdentifier","src":"2205:17:10"},"nodeType":"YulFunctionCall","src":"2205:28:10"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2195:6:10"}]},{"nodeType":"YulVariableDeclaration","src":"2242:46:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2273:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"2284:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2269:3:10"},"nodeType":"YulFunctionCall","src":"2269:18:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2256:12:10"},"nodeType":"YulFunctionCall","src":"2256:32:10"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2246:6:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"2331:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2340:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2343:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2333:6:10"},"nodeType":"YulFunctionCall","src":"2333:12:10"},"nodeType":"YulExpressionStatement","src":"2333:12:10"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2303:6:10"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2319:2:10","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"2323:1:10","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2315:3:10"},"nodeType":"YulFunctionCall","src":"2315:10:10"},{"kind":"number","nodeType":"YulLiteral","src":"2327:1:10","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2311:3:10"},"nodeType":"YulFunctionCall","src":"2311:18:10"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2300:2:10"},"nodeType":"YulFunctionCall","src":"2300:30:10"},"nodeType":"YulIf","src":"2297:50:10"},{"nodeType":"YulVariableDeclaration","src":"2356:84:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2412:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"2423:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2408:3:10"},"nodeType":"YulFunctionCall","src":"2408:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2432:7:10"}],"functionName":{"name":"abi_decode_bytes_calldata","nodeType":"YulIdentifier","src":"2382:25:10"},"nodeType":"YulFunctionCall","src":"2382:58:10"},"variables":[{"name":"value1_1","nodeType":"YulTypedName","src":"2360:8:10","type":""},{"name":"value2_1","nodeType":"YulTypedName","src":"2370:8:10","type":""}]},{"nodeType":"YulAssignment","src":"2449:18:10","value":{"name":"value1_1","nodeType":"YulIdentifier","src":"2459:8:10"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2449:6:10"}]},{"nodeType":"YulAssignment","src":"2476:18:10","value":{"name":"value2_1","nodeType":"YulIdentifier","src":"2486:8:10"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2476:6:10"}]}]},"name":"abi_decode_tuple_t_uint16t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2074:9:10","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2085:7:10","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2097:6:10","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2105:6:10","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2113:6:10","type":""}],"src":"2019:481:10"},{"body":{"nodeType":"YulBlock","src":"2600:92:10","statements":[{"nodeType":"YulAssignment","src":"2610:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2622:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"2633:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2618:3:10"},"nodeType":"YulFunctionCall","src":"2618:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2610:4:10"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2652:9:10"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2677:6:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2670:6:10"},"nodeType":"YulFunctionCall","src":"2670:14:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2663:6:10"},"nodeType":"YulFunctionCall","src":"2663:22:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2645:6:10"},"nodeType":"YulFunctionCall","src":"2645:41:10"},"nodeType":"YulExpressionStatement","src":"2645:41:10"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2569:9:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2580:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2591:4:10","type":""}],"src":"2505:187:10"},{"body":{"nodeType":"YulBlock","src":"2798:76:10","statements":[{"nodeType":"YulAssignment","src":"2808:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2820:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"2831:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2816:3:10"},"nodeType":"YulFunctionCall","src":"2816:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2808:4:10"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2850:9:10"},{"name":"value0","nodeType":"YulIdentifier","src":"2861:6:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2843:6:10"},"nodeType":"YulFunctionCall","src":"2843:25:10"},"nodeType":"YulExpressionStatement","src":"2843:25:10"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2767:9:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2778:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2789:4:10","type":""}],"src":"2697:177:10"},{"body":{"nodeType":"YulBlock","src":"2911:95:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2928:1:10","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2935:3:10","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2940:10:10","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2931:3:10"},"nodeType":"YulFunctionCall","src":"2931:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2921:6:10"},"nodeType":"YulFunctionCall","src":"2921:31:10"},"nodeType":"YulExpressionStatement","src":"2921:31:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2968:1:10","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2971:4:10","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2961:6:10"},"nodeType":"YulFunctionCall","src":"2961:15:10"},"nodeType":"YulExpressionStatement","src":"2961:15:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2992:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2995:4:10","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2985:6:10"},"nodeType":"YulFunctionCall","src":"2985:15:10"},"nodeType":"YulExpressionStatement","src":"2985:15:10"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"2879:127:10"},{"body":{"nodeType":"YulBlock","src":"3056:230:10","statements":[{"nodeType":"YulAssignment","src":"3066:19:10","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3082:2:10","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3076:5:10"},"nodeType":"YulFunctionCall","src":"3076:9:10"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3066:6:10"}]},{"nodeType":"YulVariableDeclaration","src":"3094:58:10","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3116:6:10"},{"arguments":[{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"3132:4:10"},{"kind":"number","nodeType":"YulLiteral","src":"3138:2:10","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3128:3:10"},"nodeType":"YulFunctionCall","src":"3128:13:10"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3147:2:10","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3143:3:10"},"nodeType":"YulFunctionCall","src":"3143:7:10"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3124:3:10"},"nodeType":"YulFunctionCall","src":"3124:27:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3112:3:10"},"nodeType":"YulFunctionCall","src":"3112:40:10"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"3098:10:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"3227:22:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3229:16:10"},"nodeType":"YulFunctionCall","src":"3229:18:10"},"nodeType":"YulExpressionStatement","src":"3229:18:10"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3170:10:10"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3190:2:10","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"3194:1:10","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3186:3:10"},"nodeType":"YulFunctionCall","src":"3186:10:10"},{"kind":"number","nodeType":"YulLiteral","src":"3198:1:10","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3182:3:10"},"nodeType":"YulFunctionCall","src":"3182:18:10"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3167:2:10"},"nodeType":"YulFunctionCall","src":"3167:34:10"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3206:10:10"},{"name":"memPtr","nodeType":"YulIdentifier","src":"3218:6:10"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3203:2:10"},"nodeType":"YulFunctionCall","src":"3203:22:10"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"3164:2:10"},"nodeType":"YulFunctionCall","src":"3164:62:10"},"nodeType":"YulIf","src":"3161:88:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3265:2:10","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3269:10:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3258:6:10"},"nodeType":"YulFunctionCall","src":"3258:22:10"},"nodeType":"YulExpressionStatement","src":"3258:22:10"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"3036:4:10","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"3045:6:10","type":""}],"src":"3011:275:10"},{"body":{"nodeType":"YulBlock","src":"3348:129:10","statements":[{"body":{"nodeType":"YulBlock","src":"3392:22:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3394:16:10"},"nodeType":"YulFunctionCall","src":"3394:18:10"},"nodeType":"YulExpressionStatement","src":"3394:18:10"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3364:6:10"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3380:2:10","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"3384:1:10","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3376:3:10"},"nodeType":"YulFunctionCall","src":"3376:10:10"},{"kind":"number","nodeType":"YulLiteral","src":"3388:1:10","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3372:3:10"},"nodeType":"YulFunctionCall","src":"3372:18:10"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3361:2:10"},"nodeType":"YulFunctionCall","src":"3361:30:10"},"nodeType":"YulIf","src":"3358:56:10"},{"nodeType":"YulAssignment","src":"3423:48:10","value":{"arguments":[{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3443:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"3451:2:10","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3439:3:10"},"nodeType":"YulFunctionCall","src":"3439:15:10"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3460:2:10","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3456:3:10"},"nodeType":"YulFunctionCall","src":"3456:7:10"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3435:3:10"},"nodeType":"YulFunctionCall","src":"3435:29:10"},{"kind":"number","nodeType":"YulLiteral","src":"3466:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3431:3:10"},"nodeType":"YulFunctionCall","src":"3431:40:10"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"3423:4:10"}]}]},"name":"array_allocation_size_bytes","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"3328:6:10","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"3339:4:10","type":""}],"src":"3291:186:10"},{"body":{"nodeType":"YulBlock","src":"3556:262:10","statements":[{"nodeType":"YulAssignment","src":"3566:61:10","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3619:6:10"}],"functionName":{"name":"array_allocation_size_bytes","nodeType":"YulIdentifier","src":"3591:27:10"},"nodeType":"YulFunctionCall","src":"3591:35:10"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"3575:15:10"},"nodeType":"YulFunctionCall","src":"3575:52:10"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"3566:5:10"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"3643:5:10"},{"name":"length","nodeType":"YulIdentifier","src":"3650:6:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3636:6:10"},"nodeType":"YulFunctionCall","src":"3636:21:10"},"nodeType":"YulExpressionStatement","src":"3636:21:10"},{"body":{"nodeType":"YulBlock","src":"3695:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3704:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3707:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3697:6:10"},"nodeType":"YulFunctionCall","src":"3697:12:10"},"nodeType":"YulExpressionStatement","src":"3697:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3676:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"3681:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3672:3:10"},"nodeType":"YulFunctionCall","src":"3672:16:10"},{"name":"end","nodeType":"YulIdentifier","src":"3690:3:10"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3669:2:10"},"nodeType":"YulFunctionCall","src":"3669:25:10"},"nodeType":"YulIf","src":"3666:45:10"},{"expression":{"arguments":[{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"3737:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"3744:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3733:3:10"},"nodeType":"YulFunctionCall","src":"3733:16:10"},{"name":"src","nodeType":"YulIdentifier","src":"3751:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"3756:6:10"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"3720:12:10"},"nodeType":"YulFunctionCall","src":"3720:43:10"},"nodeType":"YulExpressionStatement","src":"3720:43:10"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"3787:5:10"},{"name":"length","nodeType":"YulIdentifier","src":"3794:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3783:3:10"},"nodeType":"YulFunctionCall","src":"3783:18:10"},{"kind":"number","nodeType":"YulLiteral","src":"3803:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3779:3:10"},"nodeType":"YulFunctionCall","src":"3779:29:10"},{"kind":"number","nodeType":"YulLiteral","src":"3810:1:10","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3772:6:10"},"nodeType":"YulFunctionCall","src":"3772:40:10"},"nodeType":"YulExpressionStatement","src":"3772:40:10"}]},"name":"abi_decode_available_length_bytes","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"3525:3:10","type":""},{"name":"length","nodeType":"YulTypedName","src":"3530:6:10","type":""},{"name":"end","nodeType":"YulTypedName","src":"3538:3:10","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"3546:5:10","type":""}],"src":"3482:336:10"},{"body":{"nodeType":"YulBlock","src":"3934:482:10","statements":[{"body":{"nodeType":"YulBlock","src":"3980:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3989:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3992:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3982:6:10"},"nodeType":"YulFunctionCall","src":"3982:12:10"},"nodeType":"YulExpressionStatement","src":"3982:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3955:7:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"3964:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3951:3:10"},"nodeType":"YulFunctionCall","src":"3951:23:10"},{"kind":"number","nodeType":"YulLiteral","src":"3976:2:10","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3947:3:10"},"nodeType":"YulFunctionCall","src":"3947:32:10"},"nodeType":"YulIf","src":"3944:52:10"},{"nodeType":"YulAssignment","src":"4005:38:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4033:9:10"}],"functionName":{"name":"abi_decode_uint16","nodeType":"YulIdentifier","src":"4015:17:10"},"nodeType":"YulFunctionCall","src":"4015:28:10"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4005:6:10"}]},{"nodeType":"YulVariableDeclaration","src":"4052:46:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4083:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"4094:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4079:3:10"},"nodeType":"YulFunctionCall","src":"4079:18:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4066:12:10"},"nodeType":"YulFunctionCall","src":"4066:32:10"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4056:6:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"4141:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4150:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4153:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4143:6:10"},"nodeType":"YulFunctionCall","src":"4143:12:10"},"nodeType":"YulExpressionStatement","src":"4143:12:10"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4113:6:10"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4129:2:10","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"4133:1:10","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4125:3:10"},"nodeType":"YulFunctionCall","src":"4125:10:10"},{"kind":"number","nodeType":"YulLiteral","src":"4137:1:10","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4121:3:10"},"nodeType":"YulFunctionCall","src":"4121:18:10"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4110:2:10"},"nodeType":"YulFunctionCall","src":"4110:30:10"},"nodeType":"YulIf","src":"4107:50:10"},{"nodeType":"YulVariableDeclaration","src":"4166:32:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4180:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"4191:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4176:3:10"},"nodeType":"YulFunctionCall","src":"4176:22:10"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"4170:2:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"4246:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4255:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4258:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4248:6:10"},"nodeType":"YulFunctionCall","src":"4248:12:10"},"nodeType":"YulExpressionStatement","src":"4248:12:10"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"4225:2:10"},{"kind":"number","nodeType":"YulLiteral","src":"4229:4:10","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4221:3:10"},"nodeType":"YulFunctionCall","src":"4221:13:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4236:7:10"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4217:3:10"},"nodeType":"YulFunctionCall","src":"4217:27:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4210:6:10"},"nodeType":"YulFunctionCall","src":"4210:35:10"},"nodeType":"YulIf","src":"4207:55:10"},{"nodeType":"YulAssignment","src":"4271:83:10","value":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"4319:2:10"},{"kind":"number","nodeType":"YulLiteral","src":"4323:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4315:3:10"},"nodeType":"YulFunctionCall","src":"4315:11:10"},{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"4341:2:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4328:12:10"},"nodeType":"YulFunctionCall","src":"4328:16:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4346:7:10"}],"functionName":{"name":"abi_decode_available_length_bytes","nodeType":"YulIdentifier","src":"4281:33:10"},"nodeType":"YulFunctionCall","src":"4281:73:10"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4271:6:10"}]},{"nodeType":"YulAssignment","src":"4363:47:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4395:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"4406:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4391:3:10"},"nodeType":"YulFunctionCall","src":"4391:18:10"}],"functionName":{"name":"abi_decode_uint64","nodeType":"YulIdentifier","src":"4373:17:10"},"nodeType":"YulFunctionCall","src":"4373:37:10"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4363:6:10"}]}]},"name":"abi_decode_tuple_t_uint16t_bytes_memory_ptrt_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3884:9:10","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3895:7:10","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3907:6:10","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3915:6:10","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3923:6:10","type":""}],"src":"3823:593:10"},{"body":{"nodeType":"YulBlock","src":"4522:76:10","statements":[{"nodeType":"YulAssignment","src":"4532:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4544:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"4555:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4540:3:10"},"nodeType":"YulFunctionCall","src":"4540:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4532:4:10"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4574:9:10"},{"name":"value0","nodeType":"YulIdentifier","src":"4585:6:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4567:6:10"},"nodeType":"YulFunctionCall","src":"4567:25:10"},"nodeType":"YulExpressionStatement","src":"4567:25:10"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4491:9:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4502:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4513:4:10","type":""}],"src":"4421:177:10"},{"body":{"nodeType":"YulBlock","src":"4652:124:10","statements":[{"nodeType":"YulAssignment","src":"4662:29:10","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4684:6:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4671:12:10"},"nodeType":"YulFunctionCall","src":"4671:20:10"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4662:5:10"}]},{"body":{"nodeType":"YulBlock","src":"4754:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4763:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4766:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4756:6:10"},"nodeType":"YulFunctionCall","src":"4756:12:10"},"nodeType":"YulExpressionStatement","src":"4756:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4713:5:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4724:5:10"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4739:3:10","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"4744:1:10","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4735:3:10"},"nodeType":"YulFunctionCall","src":"4735:11:10"},{"kind":"number","nodeType":"YulLiteral","src":"4748:1:10","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4731:3:10"},"nodeType":"YulFunctionCall","src":"4731:19:10"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4720:3:10"},"nodeType":"YulFunctionCall","src":"4720:31:10"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4710:2:10"},"nodeType":"YulFunctionCall","src":"4710:42:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4703:6:10"},"nodeType":"YulFunctionCall","src":"4703:50:10"},"nodeType":"YulIf","src":"4700:70:10"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4631:6:10","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"4642:5:10","type":""}],"src":"4603:173:10"},{"body":{"nodeType":"YulBlock","src":"4851:116:10","statements":[{"body":{"nodeType":"YulBlock","src":"4897:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4906:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4909:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4899:6:10"},"nodeType":"YulFunctionCall","src":"4899:12:10"},"nodeType":"YulExpressionStatement","src":"4899:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4872:7:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"4881:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4868:3:10"},"nodeType":"YulFunctionCall","src":"4868:23:10"},{"kind":"number","nodeType":"YulLiteral","src":"4893:2:10","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4864:3:10"},"nodeType":"YulFunctionCall","src":"4864:32:10"},"nodeType":"YulIf","src":"4861:52:10"},{"nodeType":"YulAssignment","src":"4922:39:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4951:9:10"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"4932:18:10"},"nodeType":"YulFunctionCall","src":"4932:29:10"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4922:6:10"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4817:9:10","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4828:7:10","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4840:6:10","type":""}],"src":"4781:186:10"},{"body":{"nodeType":"YulBlock","src":"5052:370:10","statements":[{"body":{"nodeType":"YulBlock","src":"5098:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5107:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5110:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5100:6:10"},"nodeType":"YulFunctionCall","src":"5100:12:10"},"nodeType":"YulExpressionStatement","src":"5100:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5073:7:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"5082:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5069:3:10"},"nodeType":"YulFunctionCall","src":"5069:23:10"},{"kind":"number","nodeType":"YulLiteral","src":"5094:2:10","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5065:3:10"},"nodeType":"YulFunctionCall","src":"5065:32:10"},"nodeType":"YulIf","src":"5062:52:10"},{"nodeType":"YulVariableDeclaration","src":"5123:37:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5150:9:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5137:12:10"},"nodeType":"YulFunctionCall","src":"5137:23:10"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5127:6:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"5203:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5212:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5215:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5205:6:10"},"nodeType":"YulFunctionCall","src":"5205:12:10"},"nodeType":"YulExpressionStatement","src":"5205:12:10"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5175:6:10"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5191:2:10","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"5195:1:10","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5187:3:10"},"nodeType":"YulFunctionCall","src":"5187:10:10"},{"kind":"number","nodeType":"YulLiteral","src":"5199:1:10","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5183:3:10"},"nodeType":"YulFunctionCall","src":"5183:18:10"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5172:2:10"},"nodeType":"YulFunctionCall","src":"5172:30:10"},"nodeType":"YulIf","src":"5169:50:10"},{"nodeType":"YulVariableDeclaration","src":"5228:32:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5242:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"5253:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5238:3:10"},"nodeType":"YulFunctionCall","src":"5238:22:10"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"5232:2:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"5308:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5317:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5320:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5310:6:10"},"nodeType":"YulFunctionCall","src":"5310:12:10"},"nodeType":"YulExpressionStatement","src":"5310:12:10"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"5287:2:10"},{"kind":"number","nodeType":"YulLiteral","src":"5291:4:10","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5283:3:10"},"nodeType":"YulFunctionCall","src":"5283:13:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5298:7:10"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5279:3:10"},"nodeType":"YulFunctionCall","src":"5279:27:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5272:6:10"},"nodeType":"YulFunctionCall","src":"5272:35:10"},"nodeType":"YulIf","src":"5269:55:10"},{"nodeType":"YulAssignment","src":"5333:83:10","value":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"5381:2:10"},{"kind":"number","nodeType":"YulLiteral","src":"5385:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5377:3:10"},"nodeType":"YulFunctionCall","src":"5377:11:10"},{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"5403:2:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5390:12:10"},"nodeType":"YulFunctionCall","src":"5390:16:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5408:7:10"}],"functionName":{"name":"abi_decode_available_length_bytes","nodeType":"YulIdentifier","src":"5343:33:10"},"nodeType":"YulFunctionCall","src":"5343:73:10"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5333:6:10"}]}]},"name":"abi_decode_tuple_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5018:9:10","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5029:7:10","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5041:6:10","type":""}],"src":"4972:450:10"},{"body":{"nodeType":"YulBlock","src":"5493:184:10","statements":[{"nodeType":"YulVariableDeclaration","src":"5503:10:10","value":{"kind":"number","nodeType":"YulLiteral","src":"5512:1:10","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"5507:1:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"5572:63:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5597:3:10"},{"name":"i","nodeType":"YulIdentifier","src":"5602:1:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5593:3:10"},"nodeType":"YulFunctionCall","src":"5593:11:10"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5616:3:10"},{"name":"i","nodeType":"YulIdentifier","src":"5621:1:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5612:3:10"},"nodeType":"YulFunctionCall","src":"5612:11:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5606:5:10"},"nodeType":"YulFunctionCall","src":"5606:18:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5586:6:10"},"nodeType":"YulFunctionCall","src":"5586:39:10"},"nodeType":"YulExpressionStatement","src":"5586:39:10"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5533:1:10"},{"name":"length","nodeType":"YulIdentifier","src":"5536:6:10"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5530:2:10"},"nodeType":"YulFunctionCall","src":"5530:13:10"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5544:19:10","statements":[{"nodeType":"YulAssignment","src":"5546:15:10","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5555:1:10"},{"kind":"number","nodeType":"YulLiteral","src":"5558:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5551:3:10"},"nodeType":"YulFunctionCall","src":"5551:10:10"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"5546:1:10"}]}]},"pre":{"nodeType":"YulBlock","src":"5526:3:10","statements":[]},"src":"5522:113:10"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5655:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"5660:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5651:3:10"},"nodeType":"YulFunctionCall","src":"5651:16:10"},{"kind":"number","nodeType":"YulLiteral","src":"5669:1:10","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5644:6:10"},"nodeType":"YulFunctionCall","src":"5644:27:10"},"nodeType":"YulExpressionStatement","src":"5644:27:10"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"5471:3:10","type":""},{"name":"dst","nodeType":"YulTypedName","src":"5476:3:10","type":""},{"name":"length","nodeType":"YulTypedName","src":"5481:6:10","type":""}],"src":"5427:250:10"},{"body":{"nodeType":"YulBlock","src":"5732:221:10","statements":[{"nodeType":"YulVariableDeclaration","src":"5742:26:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5762:5:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5756:5:10"},"nodeType":"YulFunctionCall","src":"5756:12:10"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"5746:6:10","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5784:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"5789:6:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5777:6:10"},"nodeType":"YulFunctionCall","src":"5777:19:10"},"nodeType":"YulExpressionStatement","src":"5777:19:10"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5844:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"5851:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5840:3:10"},"nodeType":"YulFunctionCall","src":"5840:16:10"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5862:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"5867:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5858:3:10"},"nodeType":"YulFunctionCall","src":"5858:14:10"},{"name":"length","nodeType":"YulIdentifier","src":"5874:6:10"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"5805:34:10"},"nodeType":"YulFunctionCall","src":"5805:76:10"},"nodeType":"YulExpressionStatement","src":"5805:76:10"},{"nodeType":"YulAssignment","src":"5890:57:10","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5905:3:10"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5918:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"5926:2:10","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5914:3:10"},"nodeType":"YulFunctionCall","src":"5914:15:10"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5935:2:10","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5931:3:10"},"nodeType":"YulFunctionCall","src":"5931:7:10"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5910:3:10"},"nodeType":"YulFunctionCall","src":"5910:29:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5901:3:10"},"nodeType":"YulFunctionCall","src":"5901:39:10"},{"kind":"number","nodeType":"YulLiteral","src":"5942:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5897:3:10"},"nodeType":"YulFunctionCall","src":"5897:50:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5890:3:10"}]}]},"name":"abi_encode_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5709:5:10","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5716:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5724:3:10","type":""}],"src":"5682:271:10"},{"body":{"nodeType":"YulBlock","src":"6079:99:10","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6096:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"6107:2:10","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6089:6:10"},"nodeType":"YulFunctionCall","src":"6089:21:10"},"nodeType":"YulExpressionStatement","src":"6089:21:10"},{"nodeType":"YulAssignment","src":"6119:53:10","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6145:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6157:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"6168:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6153:3:10"},"nodeType":"YulFunctionCall","src":"6153:18:10"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"6127:17:10"},"nodeType":"YulFunctionCall","src":"6127:45:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6119:4:10"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6048:9:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6059:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6070:4:10","type":""}],"src":"5958:220:10"},{"body":{"nodeType":"YulBlock","src":"6302:99:10","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6319:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"6330:2:10","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6312:6:10"},"nodeType":"YulFunctionCall","src":"6312:21:10"},"nodeType":"YulExpressionStatement","src":"6312:21:10"},{"nodeType":"YulAssignment","src":"6342:53:10","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6368:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6380:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"6391:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6376:3:10"},"nodeType":"YulFunctionCall","src":"6376:18:10"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"6350:17:10"},"nodeType":"YulFunctionCall","src":"6350:45:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6342:4:10"}]}]},"name":"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6271:9:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6282:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6293:4:10","type":""}],"src":"6183:218:10"},{"body":{"nodeType":"YulBlock","src":"6491:171:10","statements":[{"body":{"nodeType":"YulBlock","src":"6537:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6546:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6549:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6539:6:10"},"nodeType":"YulFunctionCall","src":"6539:12:10"},"nodeType":"YulExpressionStatement","src":"6539:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6512:7:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"6521:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6508:3:10"},"nodeType":"YulFunctionCall","src":"6508:23:10"},{"kind":"number","nodeType":"YulLiteral","src":"6533:2:10","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6504:3:10"},"nodeType":"YulFunctionCall","src":"6504:32:10"},"nodeType":"YulIf","src":"6501:52:10"},{"nodeType":"YulAssignment","src":"6562:38:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6590:9:10"}],"functionName":{"name":"abi_decode_uint16","nodeType":"YulIdentifier","src":"6572:17:10"},"nodeType":"YulFunctionCall","src":"6572:28:10"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6562:6:10"}]},{"nodeType":"YulAssignment","src":"6609:47:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6641:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"6652:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6637:3:10"},"nodeType":"YulFunctionCall","src":"6637:18:10"}],"functionName":{"name":"abi_decode_uint16","nodeType":"YulIdentifier","src":"6619:17:10"},"nodeType":"YulFunctionCall","src":"6619:37:10"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6609:6:10"}]}]},"name":"abi_decode_tuple_t_uint16t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6449:9:10","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6460:7:10","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6472:6:10","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6480:6:10","type":""}],"src":"6406:256:10"},{"body":{"nodeType":"YulBlock","src":"6768:102:10","statements":[{"nodeType":"YulAssignment","src":"6778:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6790:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"6801:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6786:3:10"},"nodeType":"YulFunctionCall","src":"6786:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6778:4:10"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6820:9:10"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6835:6:10"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6851:3:10","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"6856:1:10","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6847:3:10"},"nodeType":"YulFunctionCall","src":"6847:11:10"},{"kind":"number","nodeType":"YulLiteral","src":"6860:1:10","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6843:3:10"},"nodeType":"YulFunctionCall","src":"6843:19:10"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6831:3:10"},"nodeType":"YulFunctionCall","src":"6831:32:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6813:6:10"},"nodeType":"YulFunctionCall","src":"6813:51:10"},"nodeType":"YulExpressionStatement","src":"6813:51:10"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6737:9:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6748:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6759:4:10","type":""}],"src":"6667:203:10"},{"body":{"nodeType":"YulBlock","src":"7003:102:10","statements":[{"nodeType":"YulAssignment","src":"7013:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7025:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"7036:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7021:3:10"},"nodeType":"YulFunctionCall","src":"7021:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7013:4:10"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7055:9:10"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7070:6:10"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7086:3:10","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"7091:1:10","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7082:3:10"},"nodeType":"YulFunctionCall","src":"7082:11:10"},{"kind":"number","nodeType":"YulLiteral","src":"7095:1:10","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7078:3:10"},"nodeType":"YulFunctionCall","src":"7078:19:10"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7066:3:10"},"nodeType":"YulFunctionCall","src":"7066:32:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7048:6:10"},"nodeType":"YulFunctionCall","src":"7048:51:10"},"nodeType":"YulExpressionStatement","src":"7048:51:10"}]},"name":"abi_encode_tuple_t_contract$_ILayerZeroEndpoint_$1357__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6972:9:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6983:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6994:4:10","type":""}],"src":"6875:230:10"},{"body":{"nodeType":"YulBlock","src":"7248:484:10","statements":[{"body":{"nodeType":"YulBlock","src":"7295:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7304:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7307:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7297:6:10"},"nodeType":"YulFunctionCall","src":"7297:12:10"},"nodeType":"YulExpressionStatement","src":"7297:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7269:7:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"7278:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7265:3:10"},"nodeType":"YulFunctionCall","src":"7265:23:10"},{"kind":"number","nodeType":"YulLiteral","src":"7290:3:10","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7261:3:10"},"nodeType":"YulFunctionCall","src":"7261:33:10"},"nodeType":"YulIf","src":"7258:53:10"},{"nodeType":"YulAssignment","src":"7320:38:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7348:9:10"}],"functionName":{"name":"abi_decode_uint16","nodeType":"YulIdentifier","src":"7330:17:10"},"nodeType":"YulFunctionCall","src":"7330:28:10"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7320:6:10"}]},{"nodeType":"YulAssignment","src":"7367:47:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7399:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"7410:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7395:3:10"},"nodeType":"YulFunctionCall","src":"7395:18:10"}],"functionName":{"name":"abi_decode_uint16","nodeType":"YulIdentifier","src":"7377:17:10"},"nodeType":"YulFunctionCall","src":"7377:37:10"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7367:6:10"}]},{"nodeType":"YulAssignment","src":"7423:42:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7450:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"7461:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7446:3:10"},"nodeType":"YulFunctionCall","src":"7446:18:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7433:12:10"},"nodeType":"YulFunctionCall","src":"7433:32:10"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"7423:6:10"}]},{"nodeType":"YulVariableDeclaration","src":"7474:46:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7505:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"7516:2:10","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7501:3:10"},"nodeType":"YulFunctionCall","src":"7501:18:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7488:12:10"},"nodeType":"YulFunctionCall","src":"7488:32:10"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7478:6:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"7563:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7572:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7575:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7565:6:10"},"nodeType":"YulFunctionCall","src":"7565:12:10"},"nodeType":"YulExpressionStatement","src":"7565:12:10"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7535:6:10"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7551:2:10","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"7555:1:10","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7547:3:10"},"nodeType":"YulFunctionCall","src":"7547:10:10"},{"kind":"number","nodeType":"YulLiteral","src":"7559:1:10","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7543:3:10"},"nodeType":"YulFunctionCall","src":"7543:18:10"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7532:2:10"},"nodeType":"YulFunctionCall","src":"7532:30:10"},"nodeType":"YulIf","src":"7529:50:10"},{"nodeType":"YulVariableDeclaration","src":"7588:84:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7644:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"7655:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7640:3:10"},"nodeType":"YulFunctionCall","src":"7640:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7664:7:10"}],"functionName":{"name":"abi_decode_bytes_calldata","nodeType":"YulIdentifier","src":"7614:25:10"},"nodeType":"YulFunctionCall","src":"7614:58:10"},"variables":[{"name":"value3_1","nodeType":"YulTypedName","src":"7592:8:10","type":""},{"name":"value4_1","nodeType":"YulTypedName","src":"7602:8:10","type":""}]},{"nodeType":"YulAssignment","src":"7681:18:10","value":{"name":"value3_1","nodeType":"YulIdentifier","src":"7691:8:10"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"7681:6:10"}]},{"nodeType":"YulAssignment","src":"7708:18:10","value":{"name":"value4_1","nodeType":"YulIdentifier","src":"7718:8:10"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"7708:6:10"}]}]},"name":"abi_decode_tuple_t_uint16t_uint16t_uint256t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7182:9:10","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7193:7:10","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7205:6:10","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7213:6:10","type":""},{"name":"value2","nodeType":"YulTypedName","src":"7221:6:10","type":""},{"name":"value3","nodeType":"YulTypedName","src":"7229:6:10","type":""},{"name":"value4","nodeType":"YulTypedName","src":"7237:6:10","type":""}],"src":"7110:622:10"},{"body":{"nodeType":"YulBlock","src":"7839:222:10","statements":[{"body":{"nodeType":"YulBlock","src":"7885:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7894:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7897:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7887:6:10"},"nodeType":"YulFunctionCall","src":"7887:12:10"},"nodeType":"YulExpressionStatement","src":"7887:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7860:7:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"7869:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7856:3:10"},"nodeType":"YulFunctionCall","src":"7856:23:10"},{"kind":"number","nodeType":"YulLiteral","src":"7881:2:10","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7852:3:10"},"nodeType":"YulFunctionCall","src":"7852:32:10"},"nodeType":"YulIf","src":"7849:52:10"},{"nodeType":"YulAssignment","src":"7910:38:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7938:9:10"}],"functionName":{"name":"abi_decode_uint16","nodeType":"YulIdentifier","src":"7920:17:10"},"nodeType":"YulFunctionCall","src":"7920:28:10"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7910:6:10"}]},{"nodeType":"YulAssignment","src":"7957:47:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7989:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"8000:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7985:3:10"},"nodeType":"YulFunctionCall","src":"7985:18:10"}],"functionName":{"name":"abi_decode_uint16","nodeType":"YulIdentifier","src":"7967:17:10"},"nodeType":"YulFunctionCall","src":"7967:37:10"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7957:6:10"}]},{"nodeType":"YulAssignment","src":"8013:42:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8040:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"8051:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8036:3:10"},"nodeType":"YulFunctionCall","src":"8036:18:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8023:12:10"},"nodeType":"YulFunctionCall","src":"8023:32:10"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"8013:6:10"}]}]},"name":"abi_decode_tuple_t_uint16t_uint16t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7789:9:10","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7800:7:10","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7812:6:10","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7820:6:10","type":""},{"name":"value2","nodeType":"YulTypedName","src":"7828:6:10","type":""}],"src":"7737:324:10"},{"body":{"nodeType":"YulBlock","src":"8185:280:10","statements":[{"body":{"nodeType":"YulBlock","src":"8232:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8241:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8244:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8234:6:10"},"nodeType":"YulFunctionCall","src":"8234:12:10"},"nodeType":"YulExpressionStatement","src":"8234:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8206:7:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"8215:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8202:3:10"},"nodeType":"YulFunctionCall","src":"8202:23:10"},{"kind":"number","nodeType":"YulLiteral","src":"8227:3:10","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8198:3:10"},"nodeType":"YulFunctionCall","src":"8198:33:10"},"nodeType":"YulIf","src":"8195:53:10"},{"nodeType":"YulAssignment","src":"8257:38:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8285:9:10"}],"functionName":{"name":"abi_decode_uint16","nodeType":"YulIdentifier","src":"8267:17:10"},"nodeType":"YulFunctionCall","src":"8267:28:10"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8257:6:10"}]},{"nodeType":"YulAssignment","src":"8304:47:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8336:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"8347:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8332:3:10"},"nodeType":"YulFunctionCall","src":"8332:18:10"}],"functionName":{"name":"abi_decode_uint16","nodeType":"YulIdentifier","src":"8314:17:10"},"nodeType":"YulFunctionCall","src":"8314:37:10"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"8304:6:10"}]},{"nodeType":"YulAssignment","src":"8360:48:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8393:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"8404:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8389:3:10"},"nodeType":"YulFunctionCall","src":"8389:18:10"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"8370:18:10"},"nodeType":"YulFunctionCall","src":"8370:38:10"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"8360:6:10"}]},{"nodeType":"YulAssignment","src":"8417:42:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8444:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"8455:2:10","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8440:3:10"},"nodeType":"YulFunctionCall","src":"8440:18:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8427:12:10"},"nodeType":"YulFunctionCall","src":"8427:32:10"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"8417:6:10"}]}]},"name":"abi_decode_tuple_t_uint16t_uint16t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8127:9:10","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8138:7:10","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8150:6:10","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8158:6:10","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8166:6:10","type":""},{"name":"value3","nodeType":"YulTypedName","src":"8174:6:10","type":""}],"src":"8066:399:10"},{"body":{"nodeType":"YulBlock","src":"8644:180:10","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8661:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"8672:2:10","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8654:6:10"},"nodeType":"YulFunctionCall","src":"8654:21:10"},"nodeType":"YulExpressionStatement","src":"8654:21:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8695:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"8706:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8691:3:10"},"nodeType":"YulFunctionCall","src":"8691:18:10"},{"kind":"number","nodeType":"YulLiteral","src":"8711:2:10","type":"","value":"30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8684:6:10"},"nodeType":"YulFunctionCall","src":"8684:30:10"},"nodeType":"YulExpressionStatement","src":"8684:30:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8734:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"8745:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8730:3:10"},"nodeType":"YulFunctionCall","src":"8730:18:10"},{"hexValue":"4c7a4170703a20696e76616c696420656e64706f696e742063616c6c6572","kind":"string","nodeType":"YulLiteral","src":"8750:32:10","type":"","value":"LzApp: invalid endpoint caller"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8723:6:10"},"nodeType":"YulFunctionCall","src":"8723:60:10"},"nodeType":"YulExpressionStatement","src":"8723:60:10"},{"nodeType":"YulAssignment","src":"8792:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8804:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"8815:2:10","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8800:3:10"},"nodeType":"YulFunctionCall","src":"8800:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8792:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_c76d352ff891dcabaed1e1ebf3c88e97f49052956ad0c09feadb4b7d40c688f9__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8621:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8635:4:10","type":""}],"src":"8470:354:10"},{"body":{"nodeType":"YulBlock","src":"8884:325:10","statements":[{"nodeType":"YulAssignment","src":"8894:22:10","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8908:1:10","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"8911:4:10"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"8904:3:10"},"nodeType":"YulFunctionCall","src":"8904:12:10"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"8894:6:10"}]},{"nodeType":"YulVariableDeclaration","src":"8925:38:10","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"8955:4:10"},{"kind":"number","nodeType":"YulLiteral","src":"8961:1:10","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8951:3:10"},"nodeType":"YulFunctionCall","src":"8951:12:10"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"8929:18:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"9002:31:10","statements":[{"nodeType":"YulAssignment","src":"9004:27:10","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"9018:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"9026:4:10","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9014:3:10"},"nodeType":"YulFunctionCall","src":"9014:17:10"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"9004:6:10"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"8982:18:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8975:6:10"},"nodeType":"YulFunctionCall","src":"8975:26:10"},"nodeType":"YulIf","src":"8972:61:10"},{"body":{"nodeType":"YulBlock","src":"9092:111:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9113:1:10","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9120:3:10","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"9125:10:10","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9116:3:10"},"nodeType":"YulFunctionCall","src":"9116:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9106:6:10"},"nodeType":"YulFunctionCall","src":"9106:31:10"},"nodeType":"YulExpressionStatement","src":"9106:31:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9157:1:10","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"9160:4:10","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9150:6:10"},"nodeType":"YulFunctionCall","src":"9150:15:10"},"nodeType":"YulExpressionStatement","src":"9150:15:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9185:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9188:4:10","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9178:6:10"},"nodeType":"YulFunctionCall","src":"9178:15:10"},"nodeType":"YulExpressionStatement","src":"9178:15:10"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"9048:18:10"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"9071:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"9079:2:10","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9068:2:10"},"nodeType":"YulFunctionCall","src":"9068:14:10"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"9045:2:10"},"nodeType":"YulFunctionCall","src":"9045:38:10"},"nodeType":"YulIf","src":"9042:161:10"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"8864:4:10","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"8873:6:10","type":""}],"src":"8829:380:10"},{"body":{"nodeType":"YulBlock","src":"9361:124:10","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9384:3:10"},{"name":"value0","nodeType":"YulIdentifier","src":"9389:6:10"},{"name":"value1","nodeType":"YulIdentifier","src":"9397:6:10"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"9371:12:10"},"nodeType":"YulFunctionCall","src":"9371:33:10"},"nodeType":"YulExpressionStatement","src":"9371:33:10"},{"nodeType":"YulVariableDeclaration","src":"9413:26:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9427:3:10"},{"name":"value1","nodeType":"YulIdentifier","src":"9432:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9423:3:10"},"nodeType":"YulFunctionCall","src":"9423:16:10"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"9417:2:10","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"9455:2:10"},{"kind":"number","nodeType":"YulLiteral","src":"9459:1:10","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9448:6:10"},"nodeType":"YulFunctionCall","src":"9448:13:10"},"nodeType":"YulExpressionStatement","src":"9448:13:10"},{"nodeType":"YulAssignment","src":"9470:9:10","value":{"name":"_1","nodeType":"YulIdentifier","src":"9477:2:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9470:3:10"}]}]},"name":"abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9329:3:10","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9334:6:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9342:6:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9353:3:10","type":""}],"src":"9214:271:10"},{"body":{"nodeType":"YulBlock","src":"9664:228:10","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9681:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"9692:2:10","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9674:6:10"},"nodeType":"YulFunctionCall","src":"9674:21:10"},"nodeType":"YulExpressionStatement","src":"9674:21:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9715:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"9726:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9711:3:10"},"nodeType":"YulFunctionCall","src":"9711:18:10"},{"kind":"number","nodeType":"YulLiteral","src":"9731:2:10","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9704:6:10"},"nodeType":"YulFunctionCall","src":"9704:30:10"},"nodeType":"YulExpressionStatement","src":"9704:30:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9754:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"9765:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9750:3:10"},"nodeType":"YulFunctionCall","src":"9750:18:10"},{"hexValue":"4c7a4170703a20696e76616c696420736f757263652073656e64696e6720636f","kind":"string","nodeType":"YulLiteral","src":"9770:34:10","type":"","value":"LzApp: invalid source sending co"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9743:6:10"},"nodeType":"YulFunctionCall","src":"9743:62:10"},"nodeType":"YulExpressionStatement","src":"9743:62:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9825:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"9836:2:10","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9821:3:10"},"nodeType":"YulFunctionCall","src":"9821:18:10"},{"hexValue":"6e7472616374","kind":"string","nodeType":"YulLiteral","src":"9841:8:10","type":"","value":"ntract"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9814:6:10"},"nodeType":"YulFunctionCall","src":"9814:36:10"},"nodeType":"YulExpressionStatement","src":"9814:36:10"},{"nodeType":"YulAssignment","src":"9859:27:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9871:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"9882:3:10","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9867:3:10"},"nodeType":"YulFunctionCall","src":"9867:19:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9859:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_f2c5f1a596d749e8a7585a60b880c2626f8dc4e8dd0b6f11ae55e0b2b1061815__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9641:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9655:4:10","type":""}],"src":"9490:402:10"},{"body":{"nodeType":"YulBlock","src":"9996:89:10","statements":[{"nodeType":"YulAssignment","src":"10006:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10018:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"10029:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10014:3:10"},"nodeType":"YulFunctionCall","src":"10014:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10006:4:10"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10048:9:10"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10063:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"10071:6:10","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10059:3:10"},"nodeType":"YulFunctionCall","src":"10059:19:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10041:6:10"},"nodeType":"YulFunctionCall","src":"10041:38:10"},"nodeType":"YulExpressionStatement","src":"10041:38:10"}]},"name":"abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9965:9:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9976:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9987:4:10","type":""}],"src":"9897:188:10"},{"body":{"nodeType":"YulBlock","src":"10156:200:10","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10173:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"10178:6:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10166:6:10"},"nodeType":"YulFunctionCall","src":"10166:19:10"},"nodeType":"YulExpressionStatement","src":"10166:19:10"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10211:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"10216:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10207:3:10"},"nodeType":"YulFunctionCall","src":"10207:14:10"},{"name":"start","nodeType":"YulIdentifier","src":"10223:5:10"},{"name":"length","nodeType":"YulIdentifier","src":"10230:6:10"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"10194:12:10"},"nodeType":"YulFunctionCall","src":"10194:43:10"},"nodeType":"YulExpressionStatement","src":"10194:43:10"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10261:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"10266:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10257:3:10"},"nodeType":"YulFunctionCall","src":"10257:16:10"},{"kind":"number","nodeType":"YulLiteral","src":"10275:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10253:3:10"},"nodeType":"YulFunctionCall","src":"10253:27:10"},{"kind":"number","nodeType":"YulLiteral","src":"10282:1:10","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10246:6:10"},"nodeType":"YulFunctionCall","src":"10246:38:10"},"nodeType":"YulExpressionStatement","src":"10246:38:10"},{"nodeType":"YulAssignment","src":"10293:57:10","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10308:3:10"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10321:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"10329:2:10","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10317:3:10"},"nodeType":"YulFunctionCall","src":"10317:15:10"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10338:2:10","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"10334:3:10"},"nodeType":"YulFunctionCall","src":"10334:7:10"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10313:3:10"},"nodeType":"YulFunctionCall","src":"10313:29:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10304:3:10"},"nodeType":"YulFunctionCall","src":"10304:39:10"},{"kind":"number","nodeType":"YulLiteral","src":"10345:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10300:3:10"},"nodeType":"YulFunctionCall","src":"10300:50:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10293:3:10"}]}]},"name":"abi_encode_bytes_calldata","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"10125:5:10","type":""},{"name":"length","nodeType":"YulTypedName","src":"10132:6:10","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10140:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10148:3:10","type":""}],"src":"10090:266:10"},{"body":{"nodeType":"YulBlock","src":"10516:171:10","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10533:9:10"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10548:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"10556:6:10","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10544:3:10"},"nodeType":"YulFunctionCall","src":"10544:19:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10526:6:10"},"nodeType":"YulFunctionCall","src":"10526:38:10"},"nodeType":"YulExpressionStatement","src":"10526:38:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10584:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"10595:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10580:3:10"},"nodeType":"YulFunctionCall","src":"10580:18:10"},{"kind":"number","nodeType":"YulLiteral","src":"10600:2:10","type":"","value":"64"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10573:6:10"},"nodeType":"YulFunctionCall","src":"10573:30:10"},"nodeType":"YulExpressionStatement","src":"10573:30:10"},{"nodeType":"YulAssignment","src":"10612:69:10","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"10646:6:10"},{"name":"value2","nodeType":"YulIdentifier","src":"10654:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10666:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"10677:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10662:3:10"},"nodeType":"YulFunctionCall","src":"10662:18:10"}],"functionName":{"name":"abi_encode_bytes_calldata","nodeType":"YulIdentifier","src":"10620:25:10"},"nodeType":"YulFunctionCall","src":"10620:61:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10612:4:10"}]}]},"name":"abi_encode_tuple_t_uint16_t_bytes_calldata_ptr__to_t_uint16_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10469:9:10","type":""},{"name":"value2","nodeType":"YulTypedName","src":"10480:6:10","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10488:6:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10496:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10507:4:10","type":""}],"src":"10361:326:10"},{"body":{"nodeType":"YulBlock","src":"10839:178:10","statements":[{"nodeType":"YulVariableDeclaration","src":"10849:33:10","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10871:2:10","type":"","value":"96"},{"kind":"number","nodeType":"YulLiteral","src":"10875:1:10","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"10867:3:10"},"nodeType":"YulFunctionCall","src":"10867:10:10"},{"kind":"number","nodeType":"YulLiteral","src":"10879:1:10","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10863:3:10"},"nodeType":"YulFunctionCall","src":"10863:18:10"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"10859:3:10"},"nodeType":"YulFunctionCall","src":"10859:23:10"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"10853:2:10","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10898:3:10"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10911:2:10","type":"","value":"96"},{"name":"value0","nodeType":"YulIdentifier","src":"10915:6:10"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"10907:3:10"},"nodeType":"YulFunctionCall","src":"10907:15:10"},{"name":"_1","nodeType":"YulIdentifier","src":"10924:2:10"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10903:3:10"},"nodeType":"YulFunctionCall","src":"10903:24:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10891:6:10"},"nodeType":"YulFunctionCall","src":"10891:37:10"},"nodeType":"YulExpressionStatement","src":"10891:37:10"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10948:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"10953:2:10","type":"","value":"20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10944:3:10"},"nodeType":"YulFunctionCall","src":"10944:12:10"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10966:2:10","type":"","value":"96"},{"name":"value1","nodeType":"YulIdentifier","src":"10970:6:10"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"10962:3:10"},"nodeType":"YulFunctionCall","src":"10962:15:10"},{"name":"_1","nodeType":"YulIdentifier","src":"10979:2:10"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10958:3:10"},"nodeType":"YulFunctionCall","src":"10958:24:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10937:6:10"},"nodeType":"YulFunctionCall","src":"10937:46:10"},"nodeType":"YulExpressionStatement","src":"10937:46:10"},{"nodeType":"YulAssignment","src":"10992:19:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11003:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"11008:2:10","type":"","value":"40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10999:3:10"},"nodeType":"YulFunctionCall","src":"10999:12:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10992:3:10"}]}]},"name":"abi_encode_tuple_packed_t_address_t_address__to_t_address_t_address__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10807:3:10","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10812:6:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10820:6:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10831:3:10","type":""}],"src":"10692:325:10"},{"body":{"nodeType":"YulBlock","src":"11077:65:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11094:1:10","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"11097:3:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11087:6:10"},"nodeType":"YulFunctionCall","src":"11087:14:10"},"nodeType":"YulExpressionStatement","src":"11087:14:10"},{"nodeType":"YulAssignment","src":"11110:26:10","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11128:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11131:4:10","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"11118:9:10"},"nodeType":"YulFunctionCall","src":"11118:18:10"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"11110:4:10"}]}]},"name":"array_dataslot_bytes_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"11060:3:10","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"11068:4:10","type":""}],"src":"11022:120:10"},{"body":{"nodeType":"YulBlock","src":"11227:464:10","statements":[{"body":{"nodeType":"YulBlock","src":"11260:425:10","statements":[{"nodeType":"YulVariableDeclaration","src":"11274:11:10","value":{"kind":"number","nodeType":"YulLiteral","src":"11284:1:10","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"11278:2:10","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"11305:2:10"},{"name":"array","nodeType":"YulIdentifier","src":"11309:5:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11298:6:10"},"nodeType":"YulFunctionCall","src":"11298:17:10"},"nodeType":"YulExpressionStatement","src":"11298:17:10"},{"nodeType":"YulVariableDeclaration","src":"11328:31:10","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"11350:2:10"},{"kind":"number","nodeType":"YulLiteral","src":"11354:4:10","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"11340:9:10"},"nodeType":"YulFunctionCall","src":"11340:19:10"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"11332:4:10","type":""}]},{"nodeType":"YulVariableDeclaration","src":"11372:57:10","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"11395:4:10"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11405:1:10","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"11412:10:10"},{"kind":"number","nodeType":"YulLiteral","src":"11424:2:10","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11408:3:10"},"nodeType":"YulFunctionCall","src":"11408:19:10"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"11401:3:10"},"nodeType":"YulFunctionCall","src":"11401:27:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11391:3:10"},"nodeType":"YulFunctionCall","src":"11391:38:10"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"11376:11:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"11466:23:10","statements":[{"nodeType":"YulAssignment","src":"11468:19:10","value":{"name":"data","nodeType":"YulIdentifier","src":"11483:4:10"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"11468:11:10"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"11448:10:10"},{"kind":"number","nodeType":"YulLiteral","src":"11460:4:10","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11445:2:10"},"nodeType":"YulFunctionCall","src":"11445:20:10"},"nodeType":"YulIf","src":"11442:47:10"},{"nodeType":"YulVariableDeclaration","src":"11502:41:10","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"11516:4:10"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11526:1:10","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"11533:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"11538:2:10","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11529:3:10"},"nodeType":"YulFunctionCall","src":"11529:12:10"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"11522:3:10"},"nodeType":"YulFunctionCall","src":"11522:20:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11512:3:10"},"nodeType":"YulFunctionCall","src":"11512:31:10"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"11506:2:10","type":""}]},{"nodeType":"YulVariableDeclaration","src":"11556:24:10","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"11569:11:10"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"11560:5:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"11654:21:10","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"11663:5:10"},{"name":"_1","nodeType":"YulIdentifier","src":"11670:2:10"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"11656:6:10"},"nodeType":"YulFunctionCall","src":"11656:17:10"},"nodeType":"YulExpressionStatement","src":"11656:17:10"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"11604:5:10"},{"name":"_2","nodeType":"YulIdentifier","src":"11611:2:10"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11601:2:10"},"nodeType":"YulFunctionCall","src":"11601:13:10"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"11615:26:10","statements":[{"nodeType":"YulAssignment","src":"11617:22:10","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"11630:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"11637:1:10","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11626:3:10"},"nodeType":"YulFunctionCall","src":"11626:13:10"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"11617:5:10"}]}]},"pre":{"nodeType":"YulBlock","src":"11597:3:10","statements":[]},"src":"11593:82:10"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"11243:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"11248:2:10","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11240:2:10"},"nodeType":"YulFunctionCall","src":"11240:11:10"},"nodeType":"YulIf","src":"11237:448:10"}]},"name":"clean_up_bytearray_end_slots_bytes_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"11199:5:10","type":""},{"name":"len","nodeType":"YulTypedName","src":"11206:3:10","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"11211:10:10","type":""}],"src":"11147:544:10"},{"body":{"nodeType":"YulBlock","src":"11781:81:10","statements":[{"nodeType":"YulAssignment","src":"11791:65:10","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"11806:4:10"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11824:1:10","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"11827:3:10"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"11820:3:10"},"nodeType":"YulFunctionCall","src":"11820:11:10"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11837:1:10","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"11833:3:10"},"nodeType":"YulFunctionCall","src":"11833:6:10"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"11816:3:10"},"nodeType":"YulFunctionCall","src":"11816:24:10"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"11812:3:10"},"nodeType":"YulFunctionCall","src":"11812:29:10"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11802:3:10"},"nodeType":"YulFunctionCall","src":"11802:40:10"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11848:1:10","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"11851:3:10"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"11844:3:10"},"nodeType":"YulFunctionCall","src":"11844:11:10"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"11799:2:10"},"nodeType":"YulFunctionCall","src":"11799:57:10"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"11791:4:10"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"11758:4:10","type":""},{"name":"len","nodeType":"YulTypedName","src":"11764:3:10","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"11772:4:10","type":""}],"src":"11696:166:10"},{"body":{"nodeType":"YulBlock","src":"11961:1254:10","statements":[{"nodeType":"YulVariableDeclaration","src":"11971:24:10","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"11991:3:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11985:5:10"},"nodeType":"YulFunctionCall","src":"11985:10:10"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"11975:6:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"12038:22:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"12040:16:10"},"nodeType":"YulFunctionCall","src":"12040:18:10"},"nodeType":"YulExpressionStatement","src":"12040:18:10"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"12010:6:10"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12026:2:10","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"12030:1:10","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"12022:3:10"},"nodeType":"YulFunctionCall","src":"12022:10:10"},{"kind":"number","nodeType":"YulLiteral","src":"12034:1:10","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12018:3:10"},"nodeType":"YulFunctionCall","src":"12018:18:10"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12007:2:10"},"nodeType":"YulFunctionCall","src":"12007:30:10"},"nodeType":"YulIf","src":"12004:56:10"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"12112:4:10"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"12150:4:10"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"12144:5:10"},"nodeType":"YulFunctionCall","src":"12144:11:10"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"12118:25:10"},"nodeType":"YulFunctionCall","src":"12118:38:10"},{"name":"newLen","nodeType":"YulIdentifier","src":"12158:6:10"}],"functionName":{"name":"clean_up_bytearray_end_slots_bytes_storage","nodeType":"YulIdentifier","src":"12069:42:10"},"nodeType":"YulFunctionCall","src":"12069:96:10"},"nodeType":"YulExpressionStatement","src":"12069:96:10"},{"nodeType":"YulVariableDeclaration","src":"12174:18:10","value":{"kind":"number","nodeType":"YulLiteral","src":"12191:1:10","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"12178:9:10","type":""}]},{"nodeType":"YulVariableDeclaration","src":"12201:23:10","value":{"kind":"number","nodeType":"YulLiteral","src":"12220:4:10","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"12205:11:10","type":""}]},{"nodeType":"YulAssignment","src":"12233:24:10","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"12246:11:10"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"12233:9:10"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"12303:655:10","statements":[{"nodeType":"YulVariableDeclaration","src":"12317:35:10","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"12336:6:10"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12348:2:10","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"12344:3:10"},"nodeType":"YulFunctionCall","src":"12344:7:10"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12332:3:10"},"nodeType":"YulFunctionCall","src":"12332:20:10"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"12321:7:10","type":""}]},{"nodeType":"YulVariableDeclaration","src":"12365:48:10","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"12408:4:10"}],"functionName":{"name":"array_dataslot_bytes_storage","nodeType":"YulIdentifier","src":"12379:28:10"},"nodeType":"YulFunctionCall","src":"12379:34:10"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"12369:6:10","type":""}]},{"nodeType":"YulVariableDeclaration","src":"12426:10:10","value":{"kind":"number","nodeType":"YulLiteral","src":"12435:1:10","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"12430:1:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"12513:172:10","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"12538:6:10"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"12556:3:10"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"12561:9:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12552:3:10"},"nodeType":"YulFunctionCall","src":"12552:19:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12546:5:10"},"nodeType":"YulFunctionCall","src":"12546:26:10"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"12531:6:10"},"nodeType":"YulFunctionCall","src":"12531:42:10"},"nodeType":"YulExpressionStatement","src":"12531:42:10"},{"nodeType":"YulAssignment","src":"12590:24:10","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"12604:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"12612:1:10","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12600:3:10"},"nodeType":"YulFunctionCall","src":"12600:14:10"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"12590:6:10"}]},{"nodeType":"YulAssignment","src":"12631:40:10","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"12648:9:10"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"12659:11:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12644:3:10"},"nodeType":"YulFunctionCall","src":"12644:27:10"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"12631:9:10"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"12460:1:10"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"12463:7:10"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"12457:2:10"},"nodeType":"YulFunctionCall","src":"12457:14:10"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"12472:28:10","statements":[{"nodeType":"YulAssignment","src":"12474:24:10","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"12483:1:10"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"12486:11:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12479:3:10"},"nodeType":"YulFunctionCall","src":"12479:19:10"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"12474:1:10"}]}]},"pre":{"nodeType":"YulBlock","src":"12453:3:10","statements":[]},"src":"12449:236:10"},{"body":{"nodeType":"YulBlock","src":"12733:166:10","statements":[{"nodeType":"YulVariableDeclaration","src":"12751:43:10","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"12778:3:10"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"12783:9:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12774:3:10"},"nodeType":"YulFunctionCall","src":"12774:19:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12768:5:10"},"nodeType":"YulFunctionCall","src":"12768:26:10"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"12755:9:10","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"12818:6:10"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"12830:9:10"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12857:1:10","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"12860:6:10"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"12853:3:10"},"nodeType":"YulFunctionCall","src":"12853:14:10"},{"kind":"number","nodeType":"YulLiteral","src":"12869:3:10","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12849:3:10"},"nodeType":"YulFunctionCall","src":"12849:24:10"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12879:1:10","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"12875:3:10"},"nodeType":"YulFunctionCall","src":"12875:6:10"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"12845:3:10"},"nodeType":"YulFunctionCall","src":"12845:37:10"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"12841:3:10"},"nodeType":"YulFunctionCall","src":"12841:42:10"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12826:3:10"},"nodeType":"YulFunctionCall","src":"12826:58:10"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"12811:6:10"},"nodeType":"YulFunctionCall","src":"12811:74:10"},"nodeType":"YulExpressionStatement","src":"12811:74:10"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"12704:7:10"},{"name":"newLen","nodeType":"YulIdentifier","src":"12713:6:10"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"12701:2:10"},"nodeType":"YulFunctionCall","src":"12701:19:10"},"nodeType":"YulIf","src":"12698:201:10"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"12919:4:10"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12933:1:10","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"12936:6:10"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"12929:3:10"},"nodeType":"YulFunctionCall","src":"12929:14:10"},{"kind":"number","nodeType":"YulLiteral","src":"12945:1:10","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12925:3:10"},"nodeType":"YulFunctionCall","src":"12925:22:10"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"12912:6:10"},"nodeType":"YulFunctionCall","src":"12912:36:10"},"nodeType":"YulExpressionStatement","src":"12912:36:10"}]},"nodeType":"YulCase","src":"12296:662:10","value":{"kind":"number","nodeType":"YulLiteral","src":"12301:1:10","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"12975:234:10","statements":[{"nodeType":"YulVariableDeclaration","src":"12989:14:10","value":{"kind":"number","nodeType":"YulLiteral","src":"13002:1:10","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"12993:5:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"13038:67:10","statements":[{"nodeType":"YulAssignment","src":"13056:35:10","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"13075:3:10"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"13080:9:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13071:3:10"},"nodeType":"YulFunctionCall","src":"13071:19:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13065:5:10"},"nodeType":"YulFunctionCall","src":"13065:26:10"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"13056:5:10"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"13019:6:10"},"nodeType":"YulIf","src":"13016:89:10"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"13125:4:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13184:5:10"},{"name":"newLen","nodeType":"YulIdentifier","src":"13191:6:10"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"13131:52:10"},"nodeType":"YulFunctionCall","src":"13131:67:10"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"13118:6:10"},"nodeType":"YulFunctionCall","src":"13118:81:10"},"nodeType":"YulExpressionStatement","src":"13118:81:10"}]},"nodeType":"YulCase","src":"12967:242:10","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"12276:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"12284:2:10","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12273:2:10"},"nodeType":"YulFunctionCall","src":"12273:14:10"},"nodeType":"YulSwitch","src":"12266:943:10"}]},"name":"copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"11946:4:10","type":""},{"name":"src","nodeType":"YulTypedName","src":"11952:3:10","type":""}],"src":"11867:1348:10"},{"body":{"nodeType":"YulBlock","src":"13394:228:10","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13411:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"13422:2:10","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13404:6:10"},"nodeType":"YulFunctionCall","src":"13404:21:10"},"nodeType":"YulExpressionStatement","src":"13404:21:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13445:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"13456:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13441:3:10"},"nodeType":"YulFunctionCall","src":"13441:18:10"},{"kind":"number","nodeType":"YulLiteral","src":"13461:2:10","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13434:6:10"},"nodeType":"YulFunctionCall","src":"13434:30:10"},"nodeType":"YulExpressionStatement","src":"13434:30:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13484:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"13495:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13480:3:10"},"nodeType":"YulFunctionCall","src":"13480:18:10"},{"hexValue":"4e6f6e626c6f636b696e674c7a4170703a2063616c6c6572206d757374206265","kind":"string","nodeType":"YulLiteral","src":"13500:34:10","type":"","value":"NonblockingLzApp: caller must be"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13473:6:10"},"nodeType":"YulFunctionCall","src":"13473:62:10"},"nodeType":"YulExpressionStatement","src":"13473:62:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13555:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"13566:2:10","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13551:3:10"},"nodeType":"YulFunctionCall","src":"13551:18:10"},{"hexValue":"204c7a417070","kind":"string","nodeType":"YulLiteral","src":"13571:8:10","type":"","value":" LzApp"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13544:6:10"},"nodeType":"YulFunctionCall","src":"13544:36:10"},"nodeType":"YulExpressionStatement","src":"13544:36:10"},{"nodeType":"YulAssignment","src":"13589:27:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13601:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"13612:3:10","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13597:3:10"},"nodeType":"YulFunctionCall","src":"13597:19:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13589:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_040dbcd22d0c850129389688c2109073ca44dde7f3a3f87432ca92b23d42a4fa__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13371:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13385:4:10","type":""}],"src":"13220:402:10"},{"body":{"nodeType":"YulBlock","src":"13801:179:10","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13818:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"13829:2:10","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13811:6:10"},"nodeType":"YulFunctionCall","src":"13811:21:10"},"nodeType":"YulExpressionStatement","src":"13811:21:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13852:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"13863:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13848:3:10"},"nodeType":"YulFunctionCall","src":"13848:18:10"},{"kind":"number","nodeType":"YulLiteral","src":"13868:2:10","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13841:6:10"},"nodeType":"YulFunctionCall","src":"13841:30:10"},"nodeType":"YulExpressionStatement","src":"13841:30:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13891:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"13902:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13887:3:10"},"nodeType":"YulFunctionCall","src":"13887:18:10"},{"hexValue":"4c7a4170703a206e6f20747275737465642070617468207265636f7264","kind":"string","nodeType":"YulLiteral","src":"13907:31:10","type":"","value":"LzApp: no trusted path record"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13880:6:10"},"nodeType":"YulFunctionCall","src":"13880:59:10"},"nodeType":"YulExpressionStatement","src":"13880:59:10"},{"nodeType":"YulAssignment","src":"13948:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13960:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"13971:2:10","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13956:3:10"},"nodeType":"YulFunctionCall","src":"13956:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13948:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_090ffd986411f3003f8dc74b3284ca36e66b7183a1b08562ef7e5313ae219552__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13778:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13792:4:10","type":""}],"src":"13627:353:10"},{"body":{"nodeType":"YulBlock","src":"14017:95:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14034:1:10","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14041:3:10","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"14046:10:10","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"14037:3:10"},"nodeType":"YulFunctionCall","src":"14037:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14027:6:10"},"nodeType":"YulFunctionCall","src":"14027:31:10"},"nodeType":"YulExpressionStatement","src":"14027:31:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14074:1:10","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"14077:4:10","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14067:6:10"},"nodeType":"YulFunctionCall","src":"14067:15:10"},"nodeType":"YulExpressionStatement","src":"14067:15:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14098:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14101:4:10","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14091:6:10"},"nodeType":"YulFunctionCall","src":"14091:15:10"},"nodeType":"YulExpressionStatement","src":"14091:15:10"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"13985:127:10"},{"body":{"nodeType":"YulBlock","src":"14166:79:10","statements":[{"nodeType":"YulAssignment","src":"14176:17:10","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"14188:1:10"},{"name":"y","nodeType":"YulIdentifier","src":"14191:1:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14184:3:10"},"nodeType":"YulFunctionCall","src":"14184:9:10"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"14176:4:10"}]},{"body":{"nodeType":"YulBlock","src":"14217:22:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"14219:16:10"},"nodeType":"YulFunctionCall","src":"14219:18:10"},"nodeType":"YulExpressionStatement","src":"14219:18:10"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"14208:4:10"},{"name":"x","nodeType":"YulIdentifier","src":"14214:1:10"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14205:2:10"},"nodeType":"YulFunctionCall","src":"14205:11:10"},"nodeType":"YulIf","src":"14202:37:10"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"14148:1:10","type":""},{"name":"y","nodeType":"YulTypedName","src":"14151:1:10","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"14157:4:10","type":""}],"src":"14117:128:10"},{"body":{"nodeType":"YulBlock","src":"14425:177:10","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14448:3:10"},{"name":"value0","nodeType":"YulIdentifier","src":"14453:6:10"},{"name":"value1","nodeType":"YulIdentifier","src":"14461:6:10"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"14435:12:10"},"nodeType":"YulFunctionCall","src":"14435:33:10"},"nodeType":"YulExpressionStatement","src":"14435:33:10"},{"nodeType":"YulVariableDeclaration","src":"14477:26:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14491:3:10"},{"name":"value1","nodeType":"YulIdentifier","src":"14496:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14487:3:10"},"nodeType":"YulFunctionCall","src":"14487:16:10"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"14481:2:10","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"14519:2:10"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14531:2:10","type":"","value":"96"},{"name":"value2","nodeType":"YulIdentifier","src":"14535:6:10"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"14527:3:10"},"nodeType":"YulFunctionCall","src":"14527:15:10"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14556:2:10","type":"","value":"96"},{"kind":"number","nodeType":"YulLiteral","src":"14560:1:10","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"14552:3:10"},"nodeType":"YulFunctionCall","src":"14552:10:10"},{"kind":"number","nodeType":"YulLiteral","src":"14564:1:10","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14548:3:10"},"nodeType":"YulFunctionCall","src":"14548:18:10"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"14544:3:10"},"nodeType":"YulFunctionCall","src":"14544:23:10"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14523:3:10"},"nodeType":"YulFunctionCall","src":"14523:45:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14512:6:10"},"nodeType":"YulFunctionCall","src":"14512:57:10"},"nodeType":"YulExpressionStatement","src":"14512:57:10"},{"nodeType":"YulAssignment","src":"14578:18:10","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"14589:2:10"},{"kind":"number","nodeType":"YulLiteral","src":"14593:2:10","type":"","value":"20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14585:3:10"},"nodeType":"YulFunctionCall","src":"14585:11:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14578:3:10"}]}]},"name":"abi_encode_tuple_packed_t_bytes_calldata_ptr_t_address__to_t_bytes_memory_ptr_t_address__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14385:3:10","type":""},{"name":"value2","nodeType":"YulTypedName","src":"14390:6:10","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14398:6:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14406:6:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14417:3:10","type":""}],"src":"14250:352:10"},{"body":{"nodeType":"YulBlock","src":"14816:289:10","statements":[{"nodeType":"YulVariableDeclaration","src":"14826:16:10","value":{"kind":"number","nodeType":"YulLiteral","src":"14836:6:10","type":"","value":"0xffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"14830:2:10","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14858:9:10"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14873:6:10"},{"name":"_1","nodeType":"YulIdentifier","src":"14881:2:10"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14869:3:10"},"nodeType":"YulFunctionCall","src":"14869:15:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14851:6:10"},"nodeType":"YulFunctionCall","src":"14851:34:10"},"nodeType":"YulExpressionStatement","src":"14851:34:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14905:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"14916:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14901:3:10"},"nodeType":"YulFunctionCall","src":"14901:18:10"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"14925:6:10"},{"name":"_1","nodeType":"YulIdentifier","src":"14933:2:10"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14921:3:10"},"nodeType":"YulFunctionCall","src":"14921:15:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14894:6:10"},"nodeType":"YulFunctionCall","src":"14894:43:10"},"nodeType":"YulExpressionStatement","src":"14894:43:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14957:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"14968:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14953:3:10"},"nodeType":"YulFunctionCall","src":"14953:18:10"},{"name":"value2","nodeType":"YulIdentifier","src":"14973:6:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14946:6:10"},"nodeType":"YulFunctionCall","src":"14946:34:10"},"nodeType":"YulExpressionStatement","src":"14946:34:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15000:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"15011:2:10","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14996:3:10"},"nodeType":"YulFunctionCall","src":"14996:18:10"},{"kind":"number","nodeType":"YulLiteral","src":"15016:3:10","type":"","value":"128"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14989:6:10"},"nodeType":"YulFunctionCall","src":"14989:31:10"},"nodeType":"YulExpressionStatement","src":"14989:31:10"},{"nodeType":"YulAssignment","src":"15029:70:10","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"15063:6:10"},{"name":"value4","nodeType":"YulIdentifier","src":"15071:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15083:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"15094:3:10","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15079:3:10"},"nodeType":"YulFunctionCall","src":"15079:19:10"}],"functionName":{"name":"abi_encode_bytes_calldata","nodeType":"YulIdentifier","src":"15037:25:10"},"nodeType":"YulFunctionCall","src":"15037:62:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15029:4:10"}]}]},"name":"abi_encode_tuple_t_uint16_t_uint16_t_uint256_t_bytes_calldata_ptr__to_t_uint16_t_uint16_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14753:9:10","type":""},{"name":"value4","nodeType":"YulTypedName","src":"14764:6:10","type":""},{"name":"value3","nodeType":"YulTypedName","src":"14772:6:10","type":""},{"name":"value2","nodeType":"YulTypedName","src":"14780:6:10","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14788:6:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14796:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14807:4:10","type":""}],"src":"14607:498:10"},{"body":{"nodeType":"YulBlock","src":"15284:225:10","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15301:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"15312:2:10","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15294:6:10"},"nodeType":"YulFunctionCall","src":"15294:21:10"},"nodeType":"YulExpressionStatement","src":"15294:21:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15335:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"15346:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15331:3:10"},"nodeType":"YulFunctionCall","src":"15331:18:10"},{"kind":"number","nodeType":"YulLiteral","src":"15351:2:10","type":"","value":"35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15324:6:10"},"nodeType":"YulFunctionCall","src":"15324:30:10"},"nodeType":"YulExpressionStatement","src":"15324:30:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15374:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"15385:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15370:3:10"},"nodeType":"YulFunctionCall","src":"15370:18:10"},{"hexValue":"4e6f6e626c6f636b696e674c7a4170703a206e6f2073746f726564206d657373","kind":"string","nodeType":"YulLiteral","src":"15390:34:10","type":"","value":"NonblockingLzApp: no stored mess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15363:6:10"},"nodeType":"YulFunctionCall","src":"15363:62:10"},"nodeType":"YulExpressionStatement","src":"15363:62:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15445:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"15456:2:10","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15441:3:10"},"nodeType":"YulFunctionCall","src":"15441:18:10"},{"hexValue":"616765","kind":"string","nodeType":"YulLiteral","src":"15461:5:10","type":"","value":"age"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15434:6:10"},"nodeType":"YulFunctionCall","src":"15434:33:10"},"nodeType":"YulExpressionStatement","src":"15434:33:10"},{"nodeType":"YulAssignment","src":"15476:27:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15488:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"15499:3:10","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15484:3:10"},"nodeType":"YulFunctionCall","src":"15484:19:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15476:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_2f696afe693778252c14fa484dbc5c908ccf2058495ef32014aba88a3b963894__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15261:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15275:4:10","type":""}],"src":"15110:399:10"},{"body":{"nodeType":"YulBlock","src":"15688:223:10","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15705:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"15716:2:10","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15698:6:10"},"nodeType":"YulFunctionCall","src":"15698:21:10"},"nodeType":"YulExpressionStatement","src":"15698:21:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15739:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"15750:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15735:3:10"},"nodeType":"YulFunctionCall","src":"15735:18:10"},{"kind":"number","nodeType":"YulLiteral","src":"15755:2:10","type":"","value":"33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15728:6:10"},"nodeType":"YulFunctionCall","src":"15728:30:10"},"nodeType":"YulExpressionStatement","src":"15728:30:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15778:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"15789:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15774:3:10"},"nodeType":"YulFunctionCall","src":"15774:18:10"},{"hexValue":"4e6f6e626c6f636b696e674c7a4170703a20696e76616c6964207061796c6f61","kind":"string","nodeType":"YulLiteral","src":"15794:34:10","type":"","value":"NonblockingLzApp: invalid payloa"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15767:6:10"},"nodeType":"YulFunctionCall","src":"15767:62:10"},"nodeType":"YulExpressionStatement","src":"15767:62:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15849:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"15860:2:10","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15845:3:10"},"nodeType":"YulFunctionCall","src":"15845:18:10"},{"hexValue":"64","kind":"string","nodeType":"YulLiteral","src":"15865:3:10","type":"","value":"d"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15838:6:10"},"nodeType":"YulFunctionCall","src":"15838:31:10"},"nodeType":"YulExpressionStatement","src":"15838:31:10"},{"nodeType":"YulAssignment","src":"15878:27:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15890:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"15901:3:10","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15886:3:10"},"nodeType":"YulFunctionCall","src":"15886:19:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15878:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_e38e13663a917dea0c771faed9aebf77b2adba5435a5cc4f7207d4f2c63ce6a3__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15665:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15679:4:10","type":""}],"src":"15514:397:10"},{"body":{"nodeType":"YulBlock","src":"16125:284:10","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16142:9:10"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16157:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"16165:6:10","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16153:3:10"},"nodeType":"YulFunctionCall","src":"16153:19:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16135:6:10"},"nodeType":"YulFunctionCall","src":"16135:38:10"},"nodeType":"YulExpressionStatement","src":"16135:38:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16193:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"16204:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16189:3:10"},"nodeType":"YulFunctionCall","src":"16189:18:10"},{"kind":"number","nodeType":"YulLiteral","src":"16209:3:10","type":"","value":"128"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16182:6:10"},"nodeType":"YulFunctionCall","src":"16182:31:10"},"nodeType":"YulExpressionStatement","src":"16182:31:10"},{"nodeType":"YulAssignment","src":"16222:70:10","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"16256:6:10"},{"name":"value2","nodeType":"YulIdentifier","src":"16264:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16276:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"16287:3:10","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16272:3:10"},"nodeType":"YulFunctionCall","src":"16272:19:10"}],"functionName":{"name":"abi_encode_bytes_calldata","nodeType":"YulIdentifier","src":"16230:25:10"},"nodeType":"YulFunctionCall","src":"16230:62:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16222:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16312:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"16323:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16308:3:10"},"nodeType":"YulFunctionCall","src":"16308:18:10"},{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"16332:6:10"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16348:2:10","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"16352:1:10","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"16344:3:10"},"nodeType":"YulFunctionCall","src":"16344:10:10"},{"kind":"number","nodeType":"YulLiteral","src":"16356:1:10","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16340:3:10"},"nodeType":"YulFunctionCall","src":"16340:18:10"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16328:3:10"},"nodeType":"YulFunctionCall","src":"16328:31:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16301:6:10"},"nodeType":"YulFunctionCall","src":"16301:59:10"},"nodeType":"YulExpressionStatement","src":"16301:59:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16380:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"16391:2:10","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16376:3:10"},"nodeType":"YulFunctionCall","src":"16376:18:10"},{"name":"value4","nodeType":"YulIdentifier","src":"16396:6:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16369:6:10"},"nodeType":"YulFunctionCall","src":"16369:34:10"},"nodeType":"YulExpressionStatement","src":"16369:34:10"}]},"name":"abi_encode_tuple_t_uint16_t_bytes_calldata_ptr_t_uint64_t_bytes32__to_t_uint16_t_bytes_memory_ptr_t_uint64_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16062:9:10","type":""},{"name":"value4","nodeType":"YulTypedName","src":"16073:6:10","type":""},{"name":"value3","nodeType":"YulTypedName","src":"16081:6:10","type":""},{"name":"value2","nodeType":"YulTypedName","src":"16089:6:10","type":""},{"name":"value1","nodeType":"YulTypedName","src":"16097:6:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16105:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16116:4:10","type":""}],"src":"15916:493:10"},{"body":{"nodeType":"YulBlock","src":"16567:205:10","statements":[{"nodeType":"YulAssignment","src":"16577:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16589:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"16600:2:10","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16585:3:10"},"nodeType":"YulFunctionCall","src":"16585:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16577:4:10"}]},{"nodeType":"YulVariableDeclaration","src":"16612:16:10","value":{"kind":"number","nodeType":"YulLiteral","src":"16622:6:10","type":"","value":"0xffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"16616:2:10","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16644:9:10"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16659:6:10"},{"name":"_1","nodeType":"YulIdentifier","src":"16667:2:10"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16655:3:10"},"nodeType":"YulFunctionCall","src":"16655:15:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16637:6:10"},"nodeType":"YulFunctionCall","src":"16637:34:10"},"nodeType":"YulExpressionStatement","src":"16637:34:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16691:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"16702:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16687:3:10"},"nodeType":"YulFunctionCall","src":"16687:18:10"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"16711:6:10"},{"name":"_1","nodeType":"YulIdentifier","src":"16719:2:10"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16707:3:10"},"nodeType":"YulFunctionCall","src":"16707:15:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16680:6:10"},"nodeType":"YulFunctionCall","src":"16680:43:10"},"nodeType":"YulExpressionStatement","src":"16680:43:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16743:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"16754:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16739:3:10"},"nodeType":"YulFunctionCall","src":"16739:18:10"},{"name":"value2","nodeType":"YulIdentifier","src":"16759:6:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16732:6:10"},"nodeType":"YulFunctionCall","src":"16732:34:10"},"nodeType":"YulExpressionStatement","src":"16732:34:10"}]},"name":"abi_encode_tuple_t_uint16_t_uint16_t_uint256__to_t_uint16_t_uint16_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16520:9:10","type":""},{"name":"value2","nodeType":"YulTypedName","src":"16531:6:10","type":""},{"name":"value1","nodeType":"YulTypedName","src":"16539:6:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16547:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16558:4:10","type":""}],"src":"16414:358:10"},{"body":{"nodeType":"YulBlock","src":"16878:1101:10","statements":[{"body":{"nodeType":"YulBlock","src":"16919:22:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"16921:16:10"},"nodeType":"YulFunctionCall","src":"16921:18:10"},"nodeType":"YulExpressionStatement","src":"16921:18:10"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"16894:3:10"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16907:2:10","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"16911:1:10","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"16903:3:10"},"nodeType":"YulFunctionCall","src":"16903:10:10"},{"kind":"number","nodeType":"YulLiteral","src":"16915:1:10","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16899:3:10"},"nodeType":"YulFunctionCall","src":"16899:18:10"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16891:2:10"},"nodeType":"YulFunctionCall","src":"16891:27:10"},"nodeType":"YulIf","src":"16888:53:10"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"16993:4:10"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"17031:4:10"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"17025:5:10"},"nodeType":"YulFunctionCall","src":"17025:11:10"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"16999:25:10"},"nodeType":"YulFunctionCall","src":"16999:38:10"},{"name":"len","nodeType":"YulIdentifier","src":"17039:3:10"}],"functionName":{"name":"clean_up_bytearray_end_slots_bytes_storage","nodeType":"YulIdentifier","src":"16950:42:10"},"nodeType":"YulFunctionCall","src":"16950:93:10"},"nodeType":"YulExpressionStatement","src":"16950:93:10"},{"nodeType":"YulVariableDeclaration","src":"17052:18:10","value":{"kind":"number","nodeType":"YulLiteral","src":"17069:1:10","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"17056:9:10","type":""}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"17113:608:10","statements":[{"nodeType":"YulVariableDeclaration","src":"17127:32:10","value":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"17146:3:10"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17155:2:10","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"17151:3:10"},"nodeType":"YulFunctionCall","src":"17151:7:10"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"17142:3:10"},"nodeType":"YulFunctionCall","src":"17142:17:10"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"17131:7:10","type":""}]},{"nodeType":"YulVariableDeclaration","src":"17172:48:10","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"17215:4:10"}],"functionName":{"name":"array_dataslot_bytes_storage","nodeType":"YulIdentifier","src":"17186:28:10"},"nodeType":"YulFunctionCall","src":"17186:34:10"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"17176:6:10","type":""}]},{"nodeType":"YulVariableDeclaration","src":"17233:18:10","value":{"name":"srcOffset","nodeType":"YulIdentifier","src":"17242:9:10"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"17237:1:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"17321:172:10","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"17346:6:10"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"17371:3:10"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"17376:9:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17367:3:10"},"nodeType":"YulFunctionCall","src":"17367:19:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"17354:12:10"},"nodeType":"YulFunctionCall","src":"17354:33:10"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"17339:6:10"},"nodeType":"YulFunctionCall","src":"17339:49:10"},"nodeType":"YulExpressionStatement","src":"17339:49:10"},{"nodeType":"YulAssignment","src":"17405:24:10","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"17419:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"17427:1:10","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17415:3:10"},"nodeType":"YulFunctionCall","src":"17415:14:10"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"17405:6:10"}]},{"nodeType":"YulAssignment","src":"17446:33:10","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"17463:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"17474:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17459:3:10"},"nodeType":"YulFunctionCall","src":"17459:20:10"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"17446:9:10"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"17275:1:10"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"17278:7:10"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"17272:2:10"},"nodeType":"YulFunctionCall","src":"17272:14:10"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"17287:21:10","statements":[{"nodeType":"YulAssignment","src":"17289:17:10","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"17298:1:10"},{"kind":"number","nodeType":"YulLiteral","src":"17301:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17294:3:10"},"nodeType":"YulFunctionCall","src":"17294:12:10"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"17289:1:10"}]}]},"pre":{"nodeType":"YulBlock","src":"17268:3:10","statements":[]},"src":"17264:229:10"},{"body":{"nodeType":"YulBlock","src":"17538:127:10","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"17563:6:10"},{"arguments":[{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"17592:3:10"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"17597:9:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17588:3:10"},"nodeType":"YulFunctionCall","src":"17588:19:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"17575:12:10"},"nodeType":"YulFunctionCall","src":"17575:33:10"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17626:1:10","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"17629:3:10"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"17622:3:10"},"nodeType":"YulFunctionCall","src":"17622:11:10"},{"kind":"number","nodeType":"YulLiteral","src":"17635:3:10","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"17618:3:10"},"nodeType":"YulFunctionCall","src":"17618:21:10"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17645:1:10","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"17641:3:10"},"nodeType":"YulFunctionCall","src":"17641:6:10"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"17614:3:10"},"nodeType":"YulFunctionCall","src":"17614:34:10"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"17610:3:10"},"nodeType":"YulFunctionCall","src":"17610:39:10"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"17571:3:10"},"nodeType":"YulFunctionCall","src":"17571:79:10"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"17556:6:10"},"nodeType":"YulFunctionCall","src":"17556:95:10"},"nodeType":"YulExpressionStatement","src":"17556:95:10"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"17512:7:10"},{"name":"len","nodeType":"YulIdentifier","src":"17521:3:10"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"17509:2:10"},"nodeType":"YulFunctionCall","src":"17509:16:10"},"nodeType":"YulIf","src":"17506:159:10"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"17685:4:10"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17699:1:10","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"17702:3:10"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"17695:3:10"},"nodeType":"YulFunctionCall","src":"17695:11:10"},{"kind":"number","nodeType":"YulLiteral","src":"17708:1:10","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17691:3:10"},"nodeType":"YulFunctionCall","src":"17691:19:10"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"17678:6:10"},"nodeType":"YulFunctionCall","src":"17678:33:10"},"nodeType":"YulExpressionStatement","src":"17678:33:10"}]},"nodeType":"YulCase","src":"17106:615:10","value":{"kind":"number","nodeType":"YulLiteral","src":"17111:1:10","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"17738:235:10","statements":[{"nodeType":"YulVariableDeclaration","src":"17752:14:10","value":{"kind":"number","nodeType":"YulLiteral","src":"17765:1:10","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"17756:5:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"17798:74:10","statements":[{"nodeType":"YulAssignment","src":"17816:42:10","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"17842:3:10"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"17847:9:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17838:3:10"},"nodeType":"YulFunctionCall","src":"17838:19:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"17825:12:10"},"nodeType":"YulFunctionCall","src":"17825:33:10"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"17816:5:10"}]}]},"condition":{"name":"len","nodeType":"YulIdentifier","src":"17782:3:10"},"nodeType":"YulIf","src":"17779:93:10"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"17892:4:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17951:5:10"},{"name":"len","nodeType":"YulIdentifier","src":"17958:3:10"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"17898:52:10"},"nodeType":"YulFunctionCall","src":"17898:64:10"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"17885:6:10"},"nodeType":"YulFunctionCall","src":"17885:78:10"},"nodeType":"YulExpressionStatement","src":"17885:78:10"}]},"nodeType":"YulCase","src":"17730:243:10","value":"default"}],"expression":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"17089:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"17094:2:10","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"17086:2:10"},"nodeType":"YulFunctionCall","src":"17086:11:10"},"nodeType":"YulSwitch","src":"17079:894:10"}]},"name":"copy_byte_array_to_storage_from_t_bytes_calldata_ptr_to_t_bytes_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"16858:4:10","type":""},{"name":"src","nodeType":"YulTypedName","src":"16864:3:10","type":""},{"name":"len","nodeType":"YulTypedName","src":"16869:3:10","type":""}],"src":"16777:1202:10"},{"body":{"nodeType":"YulBlock","src":"18158:228:10","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18175:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"18186:2:10","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18168:6:10"},"nodeType":"YulFunctionCall","src":"18168:21:10"},"nodeType":"YulExpressionStatement","src":"18168:21:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18209:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"18220:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18205:3:10"},"nodeType":"YulFunctionCall","src":"18205:18:10"},{"kind":"number","nodeType":"YulLiteral","src":"18225:2:10","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18198:6:10"},"nodeType":"YulFunctionCall","src":"18198:30:10"},"nodeType":"YulExpressionStatement","src":"18198:30:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18248:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"18259:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18244:3:10"},"nodeType":"YulFunctionCall","src":"18244:18:10"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"18264:34:10","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18237:6:10"},"nodeType":"YulFunctionCall","src":"18237:62:10"},"nodeType":"YulExpressionStatement","src":"18237:62:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18319:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"18330:2:10","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18315:3:10"},"nodeType":"YulFunctionCall","src":"18315:18:10"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"18335:8:10","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18308:6:10"},"nodeType":"YulFunctionCall","src":"18308:36:10"},"nodeType":"YulExpressionStatement","src":"18308:36:10"},{"nodeType":"YulAssignment","src":"18353:27:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18365:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"18376:3:10","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18361:3:10"},"nodeType":"YulFunctionCall","src":"18361:19:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18353:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18135:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18149:4:10","type":""}],"src":"17984:402:10"},{"body":{"nodeType":"YulBlock","src":"18572:275:10","statements":[{"nodeType":"YulAssignment","src":"18582:27:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18594:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"18605:3:10","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18590:3:10"},"nodeType":"YulFunctionCall","src":"18590:19:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18582:4:10"}]},{"nodeType":"YulVariableDeclaration","src":"18618:16:10","value":{"kind":"number","nodeType":"YulLiteral","src":"18628:6:10","type":"","value":"0xffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"18622:2:10","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18650:9:10"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18665:6:10"},{"name":"_1","nodeType":"YulIdentifier","src":"18673:2:10"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18661:3:10"},"nodeType":"YulFunctionCall","src":"18661:15:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18643:6:10"},"nodeType":"YulFunctionCall","src":"18643:34:10"},"nodeType":"YulExpressionStatement","src":"18643:34:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18697:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"18708:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18693:3:10"},"nodeType":"YulFunctionCall","src":"18693:18:10"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"18717:6:10"},{"name":"_1","nodeType":"YulIdentifier","src":"18725:2:10"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18713:3:10"},"nodeType":"YulFunctionCall","src":"18713:15:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18686:6:10"},"nodeType":"YulFunctionCall","src":"18686:43:10"},"nodeType":"YulExpressionStatement","src":"18686:43:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18749:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"18760:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18745:3:10"},"nodeType":"YulFunctionCall","src":"18745:18:10"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"18769:6:10"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18785:3:10","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"18790:1:10","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"18781:3:10"},"nodeType":"YulFunctionCall","src":"18781:11:10"},{"kind":"number","nodeType":"YulLiteral","src":"18794:1:10","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18777:3:10"},"nodeType":"YulFunctionCall","src":"18777:19:10"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18765:3:10"},"nodeType":"YulFunctionCall","src":"18765:32:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18738:6:10"},"nodeType":"YulFunctionCall","src":"18738:60:10"},"nodeType":"YulExpressionStatement","src":"18738:60:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18818:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"18829:2:10","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18814:3:10"},"nodeType":"YulFunctionCall","src":"18814:18:10"},{"name":"value3","nodeType":"YulIdentifier","src":"18834:6:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18807:6:10"},"nodeType":"YulFunctionCall","src":"18807:34:10"},"nodeType":"YulExpressionStatement","src":"18807:34:10"}]},"name":"abi_encode_tuple_t_uint16_t_uint16_t_address_t_uint256__to_t_uint16_t_uint16_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18517:9:10","type":""},{"name":"value3","nodeType":"YulTypedName","src":"18528:6:10","type":""},{"name":"value2","nodeType":"YulTypedName","src":"18536:6:10","type":""},{"name":"value1","nodeType":"YulTypedName","src":"18544:6:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"18552:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18563:4:10","type":""}],"src":"18391:456:10"},{"body":{"nodeType":"YulBlock","src":"18937:235:10","statements":[{"nodeType":"YulAssignment","src":"18947:61:10","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"19000:6:10"}],"functionName":{"name":"array_allocation_size_bytes","nodeType":"YulIdentifier","src":"18972:27:10"},"nodeType":"YulFunctionCall","src":"18972:35:10"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"18956:15:10"},"nodeType":"YulFunctionCall","src":"18956:52:10"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"18947:5:10"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"19024:5:10"},{"name":"length","nodeType":"YulIdentifier","src":"19031:6:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19017:6:10"},"nodeType":"YulFunctionCall","src":"19017:21:10"},"nodeType":"YulExpressionStatement","src":"19017:21:10"},{"body":{"nodeType":"YulBlock","src":"19076:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19085:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19088:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"19078:6:10"},"nodeType":"YulFunctionCall","src":"19078:12:10"},"nodeType":"YulExpressionStatement","src":"19078:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"19057:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"19062:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19053:3:10"},"nodeType":"YulFunctionCall","src":"19053:16:10"},{"name":"end","nodeType":"YulIdentifier","src":"19071:3:10"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19050:2:10"},"nodeType":"YulFunctionCall","src":"19050:25:10"},"nodeType":"YulIf","src":"19047:45:10"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"19136:3:10"},{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"19145:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"19152:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19141:3:10"},"nodeType":"YulFunctionCall","src":"19141:16:10"},{"name":"length","nodeType":"YulIdentifier","src":"19159:6:10"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"19101:34:10"},"nodeType":"YulFunctionCall","src":"19101:65:10"},"nodeType":"YulExpressionStatement","src":"19101:65:10"}]},"name":"abi_decode_available_length_bytes_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"18906:3:10","type":""},{"name":"length","nodeType":"YulTypedName","src":"18911:6:10","type":""},{"name":"end","nodeType":"YulTypedName","src":"18919:3:10","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"18927:5:10","type":""}],"src":"18852:320:10"},{"body":{"nodeType":"YulBlock","src":"19267:367:10","statements":[{"body":{"nodeType":"YulBlock","src":"19313:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19322:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19325:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"19315:6:10"},"nodeType":"YulFunctionCall","src":"19315:12:10"},"nodeType":"YulExpressionStatement","src":"19315:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"19288:7:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"19297:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19284:3:10"},"nodeType":"YulFunctionCall","src":"19284:23:10"},{"kind":"number","nodeType":"YulLiteral","src":"19309:2:10","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"19280:3:10"},"nodeType":"YulFunctionCall","src":"19280:32:10"},"nodeType":"YulIf","src":"19277:52:10"},{"nodeType":"YulVariableDeclaration","src":"19338:30:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19358:9:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19352:5:10"},"nodeType":"YulFunctionCall","src":"19352:16:10"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"19342:6:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"19411:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19420:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19423:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"19413:6:10"},"nodeType":"YulFunctionCall","src":"19413:12:10"},"nodeType":"YulExpressionStatement","src":"19413:12:10"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"19383:6:10"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19399:2:10","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"19403:1:10","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"19395:3:10"},"nodeType":"YulFunctionCall","src":"19395:10:10"},{"kind":"number","nodeType":"YulLiteral","src":"19407:1:10","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19391:3:10"},"nodeType":"YulFunctionCall","src":"19391:18:10"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19380:2:10"},"nodeType":"YulFunctionCall","src":"19380:30:10"},"nodeType":"YulIf","src":"19377:50:10"},{"nodeType":"YulVariableDeclaration","src":"19436:32:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19450:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"19461:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19446:3:10"},"nodeType":"YulFunctionCall","src":"19446:22:10"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"19440:2:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"19516:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19525:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19528:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"19518:6:10"},"nodeType":"YulFunctionCall","src":"19518:12:10"},"nodeType":"YulExpressionStatement","src":"19518:12:10"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"19495:2:10"},{"kind":"number","nodeType":"YulLiteral","src":"19499:4:10","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19491:3:10"},"nodeType":"YulFunctionCall","src":"19491:13:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"19506:7:10"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"19487:3:10"},"nodeType":"YulFunctionCall","src":"19487:27:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"19480:6:10"},"nodeType":"YulFunctionCall","src":"19480:35:10"},"nodeType":"YulIf","src":"19477:55:10"},{"nodeType":"YulAssignment","src":"19541:87:10","value":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"19600:2:10"},{"kind":"number","nodeType":"YulLiteral","src":"19604:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19596:3:10"},"nodeType":"YulFunctionCall","src":"19596:11:10"},{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"19615:2:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19609:5:10"},"nodeType":"YulFunctionCall","src":"19609:9:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"19620:7:10"}],"functionName":{"name":"abi_decode_available_length_bytes_fromMemory","nodeType":"YulIdentifier","src":"19551:44:10"},"nodeType":"YulFunctionCall","src":"19551:77:10"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"19541:6:10"}]}]},"name":"abi_decode_tuple_t_bytes_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19233:9:10","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"19244:7:10","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"19256:6:10","type":""}],"src":"19177:457:10"},{"body":{"nodeType":"YulBlock","src":"19856:340:10","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19873:9:10"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"19888:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"19896:6:10","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19884:3:10"},"nodeType":"YulFunctionCall","src":"19884:19:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19866:6:10"},"nodeType":"YulFunctionCall","src":"19866:38:10"},"nodeType":"YulExpressionStatement","src":"19866:38:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19924:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"19935:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19920:3:10"},"nodeType":"YulFunctionCall","src":"19920:18:10"},{"kind":"number","nodeType":"YulLiteral","src":"19940:3:10","type":"","value":"128"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19913:6:10"},"nodeType":"YulFunctionCall","src":"19913:31:10"},"nodeType":"YulExpressionStatement","src":"19913:31:10"},{"nodeType":"YulVariableDeclaration","src":"19953:60:10","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"19985:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19997:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"20008:3:10","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19993:3:10"},"nodeType":"YulFunctionCall","src":"19993:19:10"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"19967:17:10"},"nodeType":"YulFunctionCall","src":"19967:46:10"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"19957:6:10","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20033:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"20044:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20029:3:10"},"nodeType":"YulFunctionCall","src":"20029:18:10"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"20053:6:10"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20069:2:10","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"20073:1:10","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"20065:3:10"},"nodeType":"YulFunctionCall","src":"20065:10:10"},{"kind":"number","nodeType":"YulLiteral","src":"20077:1:10","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20061:3:10"},"nodeType":"YulFunctionCall","src":"20061:18:10"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"20049:3:10"},"nodeType":"YulFunctionCall","src":"20049:31:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20022:6:10"},"nodeType":"YulFunctionCall","src":"20022:59:10"},"nodeType":"YulExpressionStatement","src":"20022:59:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20101:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"20112:2:10","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20097:3:10"},"nodeType":"YulFunctionCall","src":"20097:18:10"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"20121:6:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"20129:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20117:3:10"},"nodeType":"YulFunctionCall","src":"20117:22:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20090:6:10"},"nodeType":"YulFunctionCall","src":"20090:50:10"},"nodeType":"YulExpressionStatement","src":"20090:50:10"},{"nodeType":"YulAssignment","src":"20149:41:10","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"20175:6:10"},{"name":"tail_1","nodeType":"YulIdentifier","src":"20183:6:10"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"20157:17:10"},"nodeType":"YulFunctionCall","src":"20157:33:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20149:4:10"}]}]},"name":"abi_encode_tuple_t_uint16_t_bytes_memory_ptr_t_uint64_t_bytes_memory_ptr__to_t_uint16_t_bytes_memory_ptr_t_uint64_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19801:9:10","type":""},{"name":"value3","nodeType":"YulTypedName","src":"19812:6:10","type":""},{"name":"value2","nodeType":"YulTypedName","src":"19820:6:10","type":""},{"name":"value1","nodeType":"YulTypedName","src":"19828:6:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"19836:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19847:4:10","type":""}],"src":"19639:557:10"},{"body":{"nodeType":"YulBlock","src":"20375:182:10","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20392:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"20403:2:10","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20385:6:10"},"nodeType":"YulFunctionCall","src":"20385:21:10"},"nodeType":"YulExpressionStatement","src":"20385:21:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20426:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"20437:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20422:3:10"},"nodeType":"YulFunctionCall","src":"20422:18:10"},{"kind":"number","nodeType":"YulLiteral","src":"20442:2:10","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20415:6:10"},"nodeType":"YulFunctionCall","src":"20415:30:10"},"nodeType":"YulExpressionStatement","src":"20415:30:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20465:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"20476:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20461:3:10"},"nodeType":"YulFunctionCall","src":"20461:18:10"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"20481:34:10","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20454:6:10"},"nodeType":"YulFunctionCall","src":"20454:62:10"},"nodeType":"YulExpressionStatement","src":"20454:62:10"},{"nodeType":"YulAssignment","src":"20525:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20537:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"20548:2:10","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20533:3:10"},"nodeType":"YulFunctionCall","src":"20533:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20525:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20352:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20366:4:10","type":""}],"src":"20201:356:10"},{"body":{"nodeType":"YulBlock","src":"20736:238:10","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20753:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"20764:2:10","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20746:6:10"},"nodeType":"YulFunctionCall","src":"20746:21:10"},"nodeType":"YulExpressionStatement","src":"20746:21:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20787:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"20798:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20783:3:10"},"nodeType":"YulFunctionCall","src":"20783:18:10"},{"kind":"number","nodeType":"YulLiteral","src":"20803:2:10","type":"","value":"48"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20776:6:10"},"nodeType":"YulFunctionCall","src":"20776:30:10"},"nodeType":"YulExpressionStatement","src":"20776:30:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20826:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"20837:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20822:3:10"},"nodeType":"YulFunctionCall","src":"20822:18:10"},{"hexValue":"4c7a4170703a2064657374696e6174696f6e20636861696e206973206e6f7420","kind":"string","nodeType":"YulLiteral","src":"20842:34:10","type":"","value":"LzApp: destination chain is not "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20815:6:10"},"nodeType":"YulFunctionCall","src":"20815:62:10"},"nodeType":"YulExpressionStatement","src":"20815:62:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20897:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"20908:2:10","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20893:3:10"},"nodeType":"YulFunctionCall","src":"20893:18:10"},{"hexValue":"61207472757374656420736f75726365","kind":"string","nodeType":"YulLiteral","src":"20913:18:10","type":"","value":"a trusted source"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20886:6:10"},"nodeType":"YulFunctionCall","src":"20886:46:10"},"nodeType":"YulExpressionStatement","src":"20886:46:10"},{"nodeType":"YulAssignment","src":"20941:27:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20953:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"20964:3:10","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20949:3:10"},"nodeType":"YulFunctionCall","src":"20949:19:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20941:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_65511ce9fb02a17101879c9b581e54d0cddc37b781936a67d4a6ef307ad5afd7__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20713:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20727:4:10","type":""}],"src":"20562:412:10"},{"body":{"nodeType":"YulBlock","src":"21288:531:10","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21305:9:10"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"21320:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"21328:6:10","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"21316:3:10"},"nodeType":"YulFunctionCall","src":"21316:19:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21298:6:10"},"nodeType":"YulFunctionCall","src":"21298:38:10"},"nodeType":"YulExpressionStatement","src":"21298:38:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21356:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"21367:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21352:3:10"},"nodeType":"YulFunctionCall","src":"21352:18:10"},{"kind":"number","nodeType":"YulLiteral","src":"21372:3:10","type":"","value":"192"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21345:6:10"},"nodeType":"YulFunctionCall","src":"21345:31:10"},"nodeType":"YulExpressionStatement","src":"21345:31:10"},{"nodeType":"YulVariableDeclaration","src":"21385:60:10","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"21417:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21429:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"21440:3:10","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21425:3:10"},"nodeType":"YulFunctionCall","src":"21425:19:10"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"21399:17:10"},"nodeType":"YulFunctionCall","src":"21399:46:10"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"21389:6:10","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21465:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"21476:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21461:3:10"},"nodeType":"YulFunctionCall","src":"21461:18:10"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"21485:6:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"21493:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21481:3:10"},"nodeType":"YulFunctionCall","src":"21481:22:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21454:6:10"},"nodeType":"YulFunctionCall","src":"21454:50:10"},"nodeType":"YulExpressionStatement","src":"21454:50:10"},{"nodeType":"YulVariableDeclaration","src":"21513:47:10","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"21545:6:10"},{"name":"tail_1","nodeType":"YulIdentifier","src":"21553:6:10"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"21527:17:10"},"nodeType":"YulFunctionCall","src":"21527:33:10"},"variables":[{"name":"tail_2","nodeType":"YulTypedName","src":"21517:6:10","type":""}]},{"nodeType":"YulVariableDeclaration","src":"21569:29:10","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21587:3:10","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"21592:1:10","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"21583:3:10"},"nodeType":"YulFunctionCall","src":"21583:11:10"},{"kind":"number","nodeType":"YulLiteral","src":"21596:1:10","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21579:3:10"},"nodeType":"YulFunctionCall","src":"21579:19:10"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"21573:2:10","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21618:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"21629:2:10","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21614:3:10"},"nodeType":"YulFunctionCall","src":"21614:18:10"},{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"21638:6:10"},{"name":"_1","nodeType":"YulIdentifier","src":"21646:2:10"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"21634:3:10"},"nodeType":"YulFunctionCall","src":"21634:15:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21607:6:10"},"nodeType":"YulFunctionCall","src":"21607:43:10"},"nodeType":"YulExpressionStatement","src":"21607:43:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21670:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"21681:3:10","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21666:3:10"},"nodeType":"YulFunctionCall","src":"21666:19:10"},{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"21691:6:10"},{"name":"_1","nodeType":"YulIdentifier","src":"21699:2:10"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"21687:3:10"},"nodeType":"YulFunctionCall","src":"21687:15:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21659:6:10"},"nodeType":"YulFunctionCall","src":"21659:44:10"},"nodeType":"YulExpressionStatement","src":"21659:44:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21723:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"21734:3:10","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21719:3:10"},"nodeType":"YulFunctionCall","src":"21719:19:10"},{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"21744:6:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"21752:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21740:3:10"},"nodeType":"YulFunctionCall","src":"21740:22:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21712:6:10"},"nodeType":"YulFunctionCall","src":"21712:51:10"},"nodeType":"YulExpressionStatement","src":"21712:51:10"},{"nodeType":"YulAssignment","src":"21772:41:10","value":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"21798:6:10"},{"name":"tail_2","nodeType":"YulIdentifier","src":"21806:6:10"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"21780:17:10"},"nodeType":"YulFunctionCall","src":"21780:33:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21772:4:10"}]}]},"name":"abi_encode_tuple_t_uint16_t_bytes_memory_ptr_t_bytes_memory_ptr_t_address_payable_t_address_t_bytes_memory_ptr__to_t_uint16_t_bytes_memory_ptr_t_bytes_memory_ptr_t_address_payable_t_address_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21217:9:10","type":""},{"name":"value5","nodeType":"YulTypedName","src":"21228:6:10","type":""},{"name":"value4","nodeType":"YulTypedName","src":"21236:6:10","type":""},{"name":"value3","nodeType":"YulTypedName","src":"21244:6:10","type":""},{"name":"value2","nodeType":"YulTypedName","src":"21252:6:10","type":""},{"name":"value1","nodeType":"YulTypedName","src":"21260:6:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"21268:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21279:4:10","type":""}],"src":"20979:840:10"},{"body":{"nodeType":"YulBlock","src":"21915:367:10","statements":[{"body":{"nodeType":"YulBlock","src":"21961:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21970:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21973:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21963:6:10"},"nodeType":"YulFunctionCall","src":"21963:12:10"},"nodeType":"YulExpressionStatement","src":"21963:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"21936:7:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"21945:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21932:3:10"},"nodeType":"YulFunctionCall","src":"21932:23:10"},{"kind":"number","nodeType":"YulLiteral","src":"21957:2:10","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"21928:3:10"},"nodeType":"YulFunctionCall","src":"21928:32:10"},"nodeType":"YulIf","src":"21925:52:10"},{"nodeType":"YulVariableDeclaration","src":"21986:30:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22006:9:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22000:5:10"},"nodeType":"YulFunctionCall","src":"22000:16:10"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"21990:6:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"22059:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22068:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22071:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22061:6:10"},"nodeType":"YulFunctionCall","src":"22061:12:10"},"nodeType":"YulExpressionStatement","src":"22061:12:10"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"22031:6:10"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22047:2:10","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"22051:1:10","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"22043:3:10"},"nodeType":"YulFunctionCall","src":"22043:10:10"},{"kind":"number","nodeType":"YulLiteral","src":"22055:1:10","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22039:3:10"},"nodeType":"YulFunctionCall","src":"22039:18:10"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"22028:2:10"},"nodeType":"YulFunctionCall","src":"22028:30:10"},"nodeType":"YulIf","src":"22025:50:10"},{"nodeType":"YulVariableDeclaration","src":"22084:32:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22098:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"22109:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22094:3:10"},"nodeType":"YulFunctionCall","src":"22094:22:10"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"22088:2:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"22164:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22173:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22176:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22166:6:10"},"nodeType":"YulFunctionCall","src":"22166:12:10"},"nodeType":"YulExpressionStatement","src":"22166:12:10"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"22143:2:10"},{"kind":"number","nodeType":"YulLiteral","src":"22147:4:10","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22139:3:10"},"nodeType":"YulFunctionCall","src":"22139:13:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"22154:7:10"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"22135:3:10"},"nodeType":"YulFunctionCall","src":"22135:27:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"22128:6:10"},"nodeType":"YulFunctionCall","src":"22128:35:10"},"nodeType":"YulIf","src":"22125:55:10"},{"nodeType":"YulAssignment","src":"22189:87:10","value":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"22248:2:10"},{"kind":"number","nodeType":"YulLiteral","src":"22252:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22244:3:10"},"nodeType":"YulFunctionCall","src":"22244:11:10"},{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"22263:2:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22257:5:10"},"nodeType":"YulFunctionCall","src":"22257:9:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"22268:7:10"}],"functionName":{"name":"abi_decode_available_length_bytes_fromMemory","nodeType":"YulIdentifier","src":"22199:44:10"},"nodeType":"YulFunctionCall","src":"22199:77:10"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"22189:6:10"}]}]},"name":"abi_decode_tuple_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21881:9:10","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"21892:7:10","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"21904:6:10","type":""}],"src":"21824:458:10"},{"body":{"nodeType":"YulBlock","src":"22383:1254:10","statements":[{"nodeType":"YulVariableDeclaration","src":"22393:24:10","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"22413:3:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22407:5:10"},"nodeType":"YulFunctionCall","src":"22407:10:10"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"22397:6:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"22460:22:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"22462:16:10"},"nodeType":"YulFunctionCall","src":"22462:18:10"},"nodeType":"YulExpressionStatement","src":"22462:18:10"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"22432:6:10"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22448:2:10","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"22452:1:10","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"22444:3:10"},"nodeType":"YulFunctionCall","src":"22444:10:10"},{"kind":"number","nodeType":"YulLiteral","src":"22456:1:10","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22440:3:10"},"nodeType":"YulFunctionCall","src":"22440:18:10"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"22429:2:10"},"nodeType":"YulFunctionCall","src":"22429:30:10"},"nodeType":"YulIf","src":"22426:56:10"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"22534:4:10"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"22572:4:10"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"22566:5:10"},"nodeType":"YulFunctionCall","src":"22566:11:10"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"22540:25:10"},"nodeType":"YulFunctionCall","src":"22540:38:10"},{"name":"newLen","nodeType":"YulIdentifier","src":"22580:6:10"}],"functionName":{"name":"clean_up_bytearray_end_slots_bytes_storage","nodeType":"YulIdentifier","src":"22491:42:10"},"nodeType":"YulFunctionCall","src":"22491:96:10"},"nodeType":"YulExpressionStatement","src":"22491:96:10"},{"nodeType":"YulVariableDeclaration","src":"22596:18:10","value":{"kind":"number","nodeType":"YulLiteral","src":"22613:1:10","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"22600:9:10","type":""}]},{"nodeType":"YulVariableDeclaration","src":"22623:23:10","value":{"kind":"number","nodeType":"YulLiteral","src":"22642:4:10","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"22627:11:10","type":""}]},{"nodeType":"YulAssignment","src":"22655:24:10","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"22668:11:10"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"22655:9:10"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"22725:655:10","statements":[{"nodeType":"YulVariableDeclaration","src":"22739:35:10","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"22758:6:10"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22770:2:10","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"22766:3:10"},"nodeType":"YulFunctionCall","src":"22766:7:10"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"22754:3:10"},"nodeType":"YulFunctionCall","src":"22754:20:10"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"22743:7:10","type":""}]},{"nodeType":"YulVariableDeclaration","src":"22787:48:10","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"22830:4:10"}],"functionName":{"name":"array_dataslot_bytes_storage","nodeType":"YulIdentifier","src":"22801:28:10"},"nodeType":"YulFunctionCall","src":"22801:34:10"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"22791:6:10","type":""}]},{"nodeType":"YulVariableDeclaration","src":"22848:10:10","value":{"kind":"number","nodeType":"YulLiteral","src":"22857:1:10","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"22852:1:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"22935:172:10","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"22960:6:10"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"22978:3:10"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"22983:9:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22974:3:10"},"nodeType":"YulFunctionCall","src":"22974:19:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22968:5:10"},"nodeType":"YulFunctionCall","src":"22968:26:10"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"22953:6:10"},"nodeType":"YulFunctionCall","src":"22953:42:10"},"nodeType":"YulExpressionStatement","src":"22953:42:10"},{"nodeType":"YulAssignment","src":"23012:24:10","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"23026:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"23034:1:10","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23022:3:10"},"nodeType":"YulFunctionCall","src":"23022:14:10"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"23012:6:10"}]},{"nodeType":"YulAssignment","src":"23053:40:10","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"23070:9:10"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"23081:11:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23066:3:10"},"nodeType":"YulFunctionCall","src":"23066:27:10"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"23053:9:10"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"22882:1:10"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"22885:7:10"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"22879:2:10"},"nodeType":"YulFunctionCall","src":"22879:14:10"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"22894:28:10","statements":[{"nodeType":"YulAssignment","src":"22896:24:10","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"22905:1:10"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"22908:11:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22901:3:10"},"nodeType":"YulFunctionCall","src":"22901:19:10"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"22896:1:10"}]}]},"pre":{"nodeType":"YulBlock","src":"22875:3:10","statements":[]},"src":"22871:236:10"},{"body":{"nodeType":"YulBlock","src":"23155:166:10","statements":[{"nodeType":"YulVariableDeclaration","src":"23173:43:10","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"23200:3:10"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"23205:9:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23196:3:10"},"nodeType":"YulFunctionCall","src":"23196:19:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"23190:5:10"},"nodeType":"YulFunctionCall","src":"23190:26:10"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"23177:9:10","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"23240:6:10"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"23252:9:10"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23279:1:10","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"23282:6:10"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"23275:3:10"},"nodeType":"YulFunctionCall","src":"23275:14:10"},{"kind":"number","nodeType":"YulLiteral","src":"23291:3:10","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"23271:3:10"},"nodeType":"YulFunctionCall","src":"23271:24:10"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23301:1:10","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"23297:3:10"},"nodeType":"YulFunctionCall","src":"23297:6:10"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"23267:3:10"},"nodeType":"YulFunctionCall","src":"23267:37:10"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"23263:3:10"},"nodeType":"YulFunctionCall","src":"23263:42:10"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"23248:3:10"},"nodeType":"YulFunctionCall","src":"23248:58:10"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"23233:6:10"},"nodeType":"YulFunctionCall","src":"23233:74:10"},"nodeType":"YulExpressionStatement","src":"23233:74:10"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"23126:7:10"},{"name":"newLen","nodeType":"YulIdentifier","src":"23135:6:10"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"23123:2:10"},"nodeType":"YulFunctionCall","src":"23123:19:10"},"nodeType":"YulIf","src":"23120:201:10"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"23341:4:10"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23355:1:10","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"23358:6:10"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"23351:3:10"},"nodeType":"YulFunctionCall","src":"23351:14:10"},{"kind":"number","nodeType":"YulLiteral","src":"23367:1:10","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23347:3:10"},"nodeType":"YulFunctionCall","src":"23347:22:10"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"23334:6:10"},"nodeType":"YulFunctionCall","src":"23334:36:10"},"nodeType":"YulExpressionStatement","src":"23334:36:10"}]},"nodeType":"YulCase","src":"22718:662:10","value":{"kind":"number","nodeType":"YulLiteral","src":"22723:1:10","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"23397:234:10","statements":[{"nodeType":"YulVariableDeclaration","src":"23411:14:10","value":{"kind":"number","nodeType":"YulLiteral","src":"23424:1:10","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"23415:5:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"23460:67:10","statements":[{"nodeType":"YulAssignment","src":"23478:35:10","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"23497:3:10"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"23502:9:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23493:3:10"},"nodeType":"YulFunctionCall","src":"23493:19:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"23487:5:10"},"nodeType":"YulFunctionCall","src":"23487:26:10"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"23478:5:10"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"23441:6:10"},"nodeType":"YulIf","src":"23438:89:10"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"23547:4:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23606:5:10"},{"name":"newLen","nodeType":"YulIdentifier","src":"23613:6:10"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"23553:52:10"},"nodeType":"YulFunctionCall","src":"23553:67:10"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"23540:6:10"},"nodeType":"YulFunctionCall","src":"23540:81:10"},"nodeType":"YulExpressionStatement","src":"23540:81:10"}]},"nodeType":"YulCase","src":"23389:242:10","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"22698:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"22706:2:10","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"22695:2:10"},"nodeType":"YulFunctionCall","src":"22695:14:10"},"nodeType":"YulSwitch","src":"22688:943:10"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"22368:4:10","type":""},{"name":"src","nodeType":"YulTypedName","src":"22374:3:10","type":""}],"src":"22287:1350:10"},{"body":{"nodeType":"YulBlock","src":"23690:77:10","statements":[{"nodeType":"YulAssignment","src":"23700:16:10","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"23711:1:10"},{"name":"y","nodeType":"YulIdentifier","src":"23714:1:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23707:3:10"},"nodeType":"YulFunctionCall","src":"23707:9:10"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"23700:3:10"}]},{"body":{"nodeType":"YulBlock","src":"23739:22:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"23741:16:10"},"nodeType":"YulFunctionCall","src":"23741:18:10"},"nodeType":"YulExpressionStatement","src":"23741:18:10"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"23731:1:10"},{"name":"sum","nodeType":"YulIdentifier","src":"23734:3:10"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"23728:2:10"},"nodeType":"YulFunctionCall","src":"23728:10:10"},"nodeType":"YulIf","src":"23725:36:10"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"23673:1:10","type":""},{"name":"y","nodeType":"YulTypedName","src":"23676:1:10","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"23682:3:10","type":""}],"src":"23642:125:10"},{"body":{"nodeType":"YulBlock","src":"23946:164:10","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23963:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"23974:2:10","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23956:6:10"},"nodeType":"YulFunctionCall","src":"23956:21:10"},"nodeType":"YulExpressionStatement","src":"23956:21:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23997:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"24008:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23993:3:10"},"nodeType":"YulFunctionCall","src":"23993:18:10"},{"kind":"number","nodeType":"YulLiteral","src":"24013:2:10","type":"","value":"14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23986:6:10"},"nodeType":"YulFunctionCall","src":"23986:30:10"},"nodeType":"YulExpressionStatement","src":"23986:30:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24036:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"24047:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24032:3:10"},"nodeType":"YulFunctionCall","src":"24032:18:10"},{"hexValue":"736c6963655f6f766572666c6f77","kind":"string","nodeType":"YulLiteral","src":"24052:16:10","type":"","value":"slice_overflow"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24025:6:10"},"nodeType":"YulFunctionCall","src":"24025:44:10"},"nodeType":"YulExpressionStatement","src":"24025:44:10"},{"nodeType":"YulAssignment","src":"24078:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24090:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"24101:2:10","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24086:3:10"},"nodeType":"YulFunctionCall","src":"24086:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24078:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_5d3d629f76473d94377d221b1f1c8f2161f7b65cab69e095662ec5d0e026c17e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23923:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23937:4:10","type":""}],"src":"23772:338:10"},{"body":{"nodeType":"YulBlock","src":"24289:167:10","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24306:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"24317:2:10","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24299:6:10"},"nodeType":"YulFunctionCall","src":"24299:21:10"},"nodeType":"YulExpressionStatement","src":"24299:21:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24340:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"24351:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24336:3:10"},"nodeType":"YulFunctionCall","src":"24336:18:10"},{"kind":"number","nodeType":"YulLiteral","src":"24356:2:10","type":"","value":"17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24329:6:10"},"nodeType":"YulFunctionCall","src":"24329:30:10"},"nodeType":"YulExpressionStatement","src":"24329:30:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24379:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"24390:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24375:3:10"},"nodeType":"YulFunctionCall","src":"24375:18:10"},{"hexValue":"736c6963655f6f75744f66426f756e6473","kind":"string","nodeType":"YulLiteral","src":"24395:19:10","type":"","value":"slice_outOfBounds"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24368:6:10"},"nodeType":"YulFunctionCall","src":"24368:47:10"},"nodeType":"YulExpressionStatement","src":"24368:47:10"},{"nodeType":"YulAssignment","src":"24424:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24436:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"24447:2:10","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24432:3:10"},"nodeType":"YulFunctionCall","src":"24432:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24424:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_cca2258dcc0d08c244435525255fbef9116c9a31b4c29471218f002bbbceb7a0__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24266:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24280:4:10","type":""}],"src":"24115:341:10"},{"body":{"nodeType":"YulBlock","src":"24598:150:10","statements":[{"nodeType":"YulVariableDeclaration","src":"24608:27:10","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"24628:6:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"24622:5:10"},"nodeType":"YulFunctionCall","src":"24622:13:10"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"24612:6:10","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"24683:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"24691:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24679:3:10"},"nodeType":"YulFunctionCall","src":"24679:17:10"},{"name":"pos","nodeType":"YulIdentifier","src":"24698:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"24703:6:10"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"24644:34:10"},"nodeType":"YulFunctionCall","src":"24644:66:10"},"nodeType":"YulExpressionStatement","src":"24644:66:10"},{"nodeType":"YulAssignment","src":"24719:23:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24730:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"24735:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24726:3:10"},"nodeType":"YulFunctionCall","src":"24726:16:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"24719:3:10"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"24574:3:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"24579:6:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"24590:3:10","type":""}],"src":"24461:287:10"},{"body":{"nodeType":"YulBlock","src":"25016:456:10","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25033:9:10"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"25048:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"25056:6:10","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"25044:3:10"},"nodeType":"YulFunctionCall","src":"25044:19:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25026:6:10"},"nodeType":"YulFunctionCall","src":"25026:38:10"},"nodeType":"YulExpressionStatement","src":"25026:38:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25084:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"25095:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25080:3:10"},"nodeType":"YulFunctionCall","src":"25080:18:10"},{"kind":"number","nodeType":"YulLiteral","src":"25100:3:10","type":"","value":"160"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25073:6:10"},"nodeType":"YulFunctionCall","src":"25073:31:10"},"nodeType":"YulExpressionStatement","src":"25073:31:10"},{"nodeType":"YulVariableDeclaration","src":"25113:60:10","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"25145:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25157:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"25168:3:10","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25153:3:10"},"nodeType":"YulFunctionCall","src":"25153:19:10"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"25127:17:10"},"nodeType":"YulFunctionCall","src":"25127:46:10"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"25117:6:10","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25193:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"25204:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25189:3:10"},"nodeType":"YulFunctionCall","src":"25189:18:10"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"25213:6:10"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25229:2:10","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"25233:1:10","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"25225:3:10"},"nodeType":"YulFunctionCall","src":"25225:10:10"},{"kind":"number","nodeType":"YulLiteral","src":"25237:1:10","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"25221:3:10"},"nodeType":"YulFunctionCall","src":"25221:18:10"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"25209:3:10"},"nodeType":"YulFunctionCall","src":"25209:31:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25182:6:10"},"nodeType":"YulFunctionCall","src":"25182:59:10"},"nodeType":"YulExpressionStatement","src":"25182:59:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25261:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"25272:2:10","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25257:3:10"},"nodeType":"YulFunctionCall","src":"25257:18:10"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"25281:6:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"25289:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"25277:3:10"},"nodeType":"YulFunctionCall","src":"25277:22:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25250:6:10"},"nodeType":"YulFunctionCall","src":"25250:50:10"},"nodeType":"YulExpressionStatement","src":"25250:50:10"},{"nodeType":"YulVariableDeclaration","src":"25309:47:10","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"25341:6:10"},{"name":"tail_1","nodeType":"YulIdentifier","src":"25349:6:10"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"25323:17:10"},"nodeType":"YulFunctionCall","src":"25323:33:10"},"variables":[{"name":"tail_2","nodeType":"YulTypedName","src":"25313:6:10","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25376:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"25387:3:10","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25372:3:10"},"nodeType":"YulFunctionCall","src":"25372:19:10"},{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"25397:6:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"25405:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"25393:3:10"},"nodeType":"YulFunctionCall","src":"25393:22:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25365:6:10"},"nodeType":"YulFunctionCall","src":"25365:51:10"},"nodeType":"YulExpressionStatement","src":"25365:51:10"},{"nodeType":"YulAssignment","src":"25425:41:10","value":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"25451:6:10"},{"name":"tail_2","nodeType":"YulIdentifier","src":"25459:6:10"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"25433:17:10"},"nodeType":"YulFunctionCall","src":"25433:33:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25425:4:10"}]}]},"name":"abi_encode_tuple_t_uint16_t_bytes_memory_ptr_t_uint64_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_uint16_t_bytes_memory_ptr_t_uint64_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24953:9:10","type":""},{"name":"value4","nodeType":"YulTypedName","src":"24964:6:10","type":""},{"name":"value3","nodeType":"YulTypedName","src":"24972:6:10","type":""},{"name":"value2","nodeType":"YulTypedName","src":"24980:6:10","type":""},{"name":"value1","nodeType":"YulTypedName","src":"24988:6:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"24996:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25007:4:10","type":""}],"src":"24753:719:10"},{"body":{"nodeType":"YulBlock","src":"25651:182:10","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25668:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"25679:2:10","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25661:6:10"},"nodeType":"YulFunctionCall","src":"25661:21:10"},"nodeType":"YulExpressionStatement","src":"25661:21:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25702:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"25713:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25698:3:10"},"nodeType":"YulFunctionCall","src":"25698:18:10"},{"kind":"number","nodeType":"YulLiteral","src":"25718:2:10","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25691:6:10"},"nodeType":"YulFunctionCall","src":"25691:30:10"},"nodeType":"YulExpressionStatement","src":"25691:30:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25741:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"25752:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25737:3:10"},"nodeType":"YulFunctionCall","src":"25737:18:10"},{"hexValue":"4c7a4170703a207061796c6f61642073697a6520697320746f6f206c61726765","kind":"string","nodeType":"YulLiteral","src":"25757:34:10","type":"","value":"LzApp: payload size is too large"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25730:6:10"},"nodeType":"YulFunctionCall","src":"25730:62:10"},"nodeType":"YulExpressionStatement","src":"25730:62:10"},{"nodeType":"YulAssignment","src":"25801:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25813:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"25824:2:10","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25809:3:10"},"nodeType":"YulFunctionCall","src":"25809:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25801:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_fdfeef12c0e20d028b50cab1ee288ba9867f56b726ecc8cd0c9ed3048ec177dd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25628:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25642:4:10","type":""}],"src":"25477:356:10"}]},"contents":"{\n    { }\n    function abi_decode_uint16(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffff))) { revert(0, 0) }\n    }\n    function abi_decode_bytes_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, sub(shl(64, 1), 1)) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_uint64(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(64, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint16t_bytes_calldata_ptrt_uint64t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_uint16(headStart)\n        let offset := calldataload(add(headStart, 32))\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        let value1_1, value2_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value1 := value1_1\n        value2 := value2_1\n        value3 := abi_decode_uint64(add(headStart, 64))\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(0, 0) }\n        let value4_1, value5_1 := abi_decode_bytes_calldata(add(headStart, offset_1), dataEnd)\n        value4 := value4_1\n        value5 := value5_1\n    }\n    function abi_decode_tuple_t_uint16(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_uint16(headStart)\n    }\n    function abi_decode_tuple_t_uint16t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_uint16(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint16t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_uint16(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, sub(shl(64, 1), 1)) { revert(0, 0) }\n        let value1_1, value2_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value1 := value1_1\n        value2 := value2_1\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_bytes(length) -> size\n    {\n        if gt(length, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        size := add(and(add(length, 31), not(31)), 0x20)\n    }\n    function abi_decode_available_length_bytes(src, length, end) -> array\n    {\n        array := allocate_memory(array_allocation_size_bytes(length))\n        mstore(array, length)\n        if gt(add(src, length), end) { revert(0, 0) }\n        calldatacopy(add(array, 0x20), src, length)\n        mstore(add(add(array, length), 0x20), 0)\n    }\n    function abi_decode_tuple_t_uint16t_bytes_memory_ptrt_uint64(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_uint16(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, sub(shl(64, 1), 1)) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        value1 := abi_decode_available_length_bytes(add(_1, 32), calldataload(_1), dataEnd)\n        value2 := abi_decode_uint64(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, sub(shl(64, 1), 1)) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        value0 := abi_decode_available_length_bytes(add(_1, 32), calldataload(_1), dataEnd)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint16t_uint16(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_uint16(headStart)\n        value1 := abi_decode_uint16(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_ILayerZeroEndpoint_$1357__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint16t_uint16t_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_uint16(headStart)\n        value1 := abi_decode_uint16(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, sub(shl(64, 1), 1)) { revert(0, 0) }\n        let value3_1, value4_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value3 := value3_1\n        value4 := value4_1\n    }\n    function abi_decode_tuple_t_uint16t_uint16t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_uint16(headStart)\n        value1 := abi_decode_uint16(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_uint16t_uint16t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_uint16(headStart)\n        value1 := abi_decode_uint16(add(headStart, 32))\n        value2 := abi_decode_address(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n    }\n    function abi_encode_tuple_t_stringliteral_c76d352ff891dcabaed1e1ebf3c88e97f49052956ad0c09feadb4b7d40c688f9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"LzApp: invalid endpoint caller\")\n        tail := add(headStart, 96)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        calldatacopy(pos, value0, value1)\n        let _1 := add(pos, value1)\n        mstore(_1, 0)\n        end := _1\n    }\n    function abi_encode_tuple_t_stringliteral_f2c5f1a596d749e8a7585a60b880c2626f8dc4e8dd0b6f11ae55e0b2b1061815__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"LzApp: invalid source sending co\")\n        mstore(add(headStart, 96), \"ntract\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffff))\n    }\n    function abi_encode_bytes_calldata(start, length, pos) -> end\n    {\n        mstore(pos, length)\n        calldatacopy(add(pos, 0x20), start, length)\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_uint16_t_bytes_calldata_ptr__to_t_uint16_t_bytes_memory_ptr__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, 0xffff))\n        mstore(add(headStart, 32), 64)\n        tail := abi_encode_bytes_calldata(value1, value2, add(headStart, 64))\n    }\n    function abi_encode_tuple_packed_t_address_t_address__to_t_address_t_address__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let _1 := not(sub(shl(96, 1), 1))\n        mstore(pos, and(shl(96, value0), _1))\n        mstore(add(pos, 20), and(shl(96, value1), _1))\n        end := add(pos, 40)\n    }\n    function array_dataslot_bytes_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_bytes_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_bytes_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_bytes_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_040dbcd22d0c850129389688c2109073ca44dde7f3a3f87432ca92b23d42a4fa__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"NonblockingLzApp: caller must be\")\n        mstore(add(headStart, 96), \" LzApp\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_090ffd986411f3003f8dc74b3284ca36e66b7183a1b08562ef7e5313ae219552__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"LzApp: no trusted path record\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_packed_t_bytes_calldata_ptr_t_address__to_t_bytes_memory_ptr_t_address__nonPadded_inplace_fromStack_reversed(pos, value2, value1, value0) -> end\n    {\n        calldatacopy(pos, value0, value1)\n        let _1 := add(pos, value1)\n        mstore(_1, and(shl(96, value2), not(sub(shl(96, 1), 1))))\n        end := add(_1, 20)\n    }\n    function abi_encode_tuple_t_uint16_t_uint16_t_uint256_t_bytes_calldata_ptr__to_t_uint16_t_uint16_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := 0xffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_bytes_calldata(value3, value4, add(headStart, 128))\n    }\n    function abi_encode_tuple_t_stringliteral_2f696afe693778252c14fa484dbc5c908ccf2058495ef32014aba88a3b963894__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"NonblockingLzApp: no stored mess\")\n        mstore(add(headStart, 96), \"age\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e38e13663a917dea0c771faed9aebf77b2adba5435a5cc4f7207d4f2c63ce6a3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"NonblockingLzApp: invalid payloa\")\n        mstore(add(headStart, 96), \"d\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint16_t_bytes_calldata_ptr_t_uint64_t_bytes32__to_t_uint16_t_bytes_memory_ptr_t_uint64_t_bytes32__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, 0xffff))\n        mstore(add(headStart, 32), 128)\n        tail := abi_encode_bytes_calldata(value1, value2, add(headStart, 128))\n        mstore(add(headStart, 64), and(value3, sub(shl(64, 1), 1)))\n        mstore(add(headStart, 96), value4)\n    }\n    function abi_encode_tuple_t_uint16_t_uint16_t_uint256__to_t_uint16_t_uint16_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function copy_byte_array_to_storage_from_t_bytes_calldata_ptr_to_t_bytes_storage(slot, src, len)\n    {\n        if gt(len, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_bytes_storage(slot, extract_byte_array_length(sload(slot)), len)\n        let srcOffset := 0\n        switch gt(len, 31)\n        case 1 {\n            let loopEnd := and(len, not(31))\n            let dstPtr := array_dataslot_bytes_storage(slot)\n            let i := srcOffset\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, calldataload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, len)\n            {\n                sstore(dstPtr, and(calldataload(add(src, srcOffset)), not(shr(and(shl(3, len), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, len), 1))\n        }\n        default {\n            let value := 0\n            if len\n            {\n                value := calldataload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, len))\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint16_t_uint16_t_address_t_uint256__to_t_uint16_t_uint16_t_address_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := 0xffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_decode_available_length_bytes_fromMemory(src, length, end) -> array\n    {\n        array := allocate_memory(array_allocation_size_bytes(length))\n        mstore(array, length)\n        if gt(add(src, length), end) { revert(0, 0) }\n        copy_memory_to_memory_with_cleanup(src, add(array, 0x20), length)\n    }\n    function abi_decode_tuple_t_bytes_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := mload(headStart)\n        if gt(offset, sub(shl(64, 1), 1)) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        value0 := abi_decode_available_length_bytes_fromMemory(add(_1, 32), mload(_1), dataEnd)\n    }\n    function abi_encode_tuple_t_uint16_t_bytes_memory_ptr_t_uint64_t_bytes_memory_ptr__to_t_uint16_t_bytes_memory_ptr_t_uint64_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, 0xffff))\n        mstore(add(headStart, 32), 128)\n        let tail_1 := abi_encode_string(value1, add(headStart, 128))\n        mstore(add(headStart, 64), and(value2, sub(shl(64, 1), 1)))\n        mstore(add(headStart, 96), sub(tail_1, headStart))\n        tail := abi_encode_string(value3, tail_1)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_65511ce9fb02a17101879c9b581e54d0cddc37b781936a67d4a6ef307ad5afd7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 48)\n        mstore(add(headStart, 64), \"LzApp: destination chain is not \")\n        mstore(add(headStart, 96), \"a trusted source\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint16_t_bytes_memory_ptr_t_bytes_memory_ptr_t_address_payable_t_address_t_bytes_memory_ptr__to_t_uint16_t_bytes_memory_ptr_t_bytes_memory_ptr_t_address_payable_t_address_t_bytes_memory_ptr__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, 0xffff))\n        mstore(add(headStart, 32), 192)\n        let tail_1 := abi_encode_string(value1, add(headStart, 192))\n        mstore(add(headStart, 64), sub(tail_1, headStart))\n        let tail_2 := abi_encode_string(value2, tail_1)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(add(headStart, 96), and(value3, _1))\n        mstore(add(headStart, 128), and(value4, _1))\n        mstore(add(headStart, 160), sub(tail_2, headStart))\n        tail := abi_encode_string(value5, tail_2)\n    }\n    function abi_decode_tuple_t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := mload(headStart)\n        if gt(offset, sub(shl(64, 1), 1)) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        value0 := abi_decode_available_length_bytes_fromMemory(add(_1, 32), mload(_1), dataEnd)\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_bytes_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_bytes_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_5d3d629f76473d94377d221b1f1c8f2161f7b65cab69e095662ec5d0e026c17e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"slice_overflow\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_cca2258dcc0d08c244435525255fbef9116c9a31b4c29471218f002bbbceb7a0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"slice_outOfBounds\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_uint16_t_bytes_memory_ptr_t_uint64_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_uint16_t_bytes_memory_ptr_t_uint64_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, 0xffff))\n        mstore(add(headStart, 32), 160)\n        let tail_1 := abi_encode_string(value1, add(headStart, 160))\n        mstore(add(headStart, 64), and(value2, sub(shl(64, 1), 1)))\n        mstore(add(headStart, 96), sub(tail_1, headStart))\n        let tail_2 := abi_encode_string(value3, tail_1)\n        mstore(add(headStart, 128), sub(tail_2, headStart))\n        tail := abi_encode_string(value4, tail_2)\n    }\n    function abi_encode_tuple_t_stringliteral_fdfeef12c0e20d028b50cab1ee288ba9867f56b726ecc8cd0c9ed3048ec177dd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"LzApp: payload size is too large\")\n        tail := add(headStart, 96)\n    }\n}","id":10,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"451":[{"length":32,"start":1058},{"length":32,"start":1328},{"length":32,"start":1919},{"length":32,"start":2087},{"length":32,"start":2378},{"length":32,"start":3600},{"length":32,"start":4618},{"length":32,"start":5259}]},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x146 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0x1D3567 EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0x7E0DB17 EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0xDF37483 EQ PUSH2 0x18D JUMPI DUP1 PUSH4 0x10DDB137 EQ PUSH2 0x1AD JUMPI DUP1 PUSH4 0x3D8B38F6 EQ PUSH2 0x1CD JUMPI DUP1 PUSH4 0x3F1F4FA4 EQ PUSH2 0x202 JUMPI DUP1 PUSH4 0x42D65A8D EQ PUSH2 0x23D JUMPI DUP1 PUSH4 0x5B8C41E6 EQ PUSH2 0x25D JUMPI DUP1 PUSH4 0x5CDF1649 EQ PUSH2 0x2AC JUMPI DUP1 PUSH4 0x66792BA1 EQ PUSH2 0x2CC JUMPI DUP1 PUSH4 0x66AD5C8A EQ PUSH2 0x2DF JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2FF JUMPI DUP1 PUSH4 0x73D4A13A EQ PUSH2 0x314 JUMPI DUP1 PUSH4 0x7533D788 EQ PUSH2 0x336 JUMPI DUP1 PUSH4 0x8CFD8F5C EQ PUSH2 0x356 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x38E JUMPI DUP1 PUSH4 0x950C8A74 EQ PUSH2 0x3B0 JUMPI DUP1 PUSH4 0x9F38369A EQ PUSH2 0x3D0 JUMPI DUP1 PUSH4 0xA6C3D165 EQ PUSH2 0x3F0 JUMPI DUP1 PUSH4 0xB353AAA7 EQ PUSH2 0x410 JUMPI DUP1 PUSH4 0xBAF3292D EQ PUSH2 0x444 JUMPI DUP1 PUSH4 0xC4461834 EQ PUSH2 0x464 JUMPI DUP1 PUSH4 0xCBED8B9C EQ PUSH2 0x47A JUMPI DUP1 PUSH4 0xD1DEBA1F EQ PUSH2 0x49A JUMPI DUP1 PUSH4 0xDF2A5B3B EQ PUSH2 0x4AD JUMPI DUP1 PUSH4 0xEB8D72B7 EQ PUSH2 0x4CD JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4ED JUMPI DUP1 PUSH4 0xF5ECBDBC EQ PUSH2 0x50D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x157 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16B PUSH2 0x166 CALLDATASIZE PUSH1 0x4 PUSH2 0x1898 JUMP JUMPDEST PUSH2 0x52D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x179 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16B PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x192B JUMP JUMPDEST PUSH2 0x75E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x199 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16B PUSH2 0x1A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1946 JUMP JUMPDEST PUSH2 0x7E7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16B PUSH2 0x1C8 CALLDATASIZE PUSH1 0x4 PUSH2 0x192B JUMP JUMPDEST PUSH2 0x806 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1ED PUSH2 0x1E8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1970 JUMP JUMPDEST PUSH2 0x85E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22F PUSH2 0x21D CALLDATASIZE PUSH1 0x4 PUSH2 0x192B JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x249 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16B PUSH2 0x258 CALLDATASIZE PUSH1 0x4 PUSH2 0x1970 JUMP JUMPDEST PUSH2 0x92B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x269 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22F PUSH2 0x278 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A6D JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 DUP5 MLOAD DUP1 DUP7 ADD DUP5 ADD DUP1 MLOAD SWAP3 DUP2 MSTORE SWAP1 DUP5 ADD SWAP6 DUP5 ADD SWAP6 SWAP1 SWAP6 KECCAK256 SWAP5 MSTORE SWAP3 SWAP1 MSTORE DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16B PUSH2 0x2C7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AF5 JUMP JUMPDEST PUSH2 0x9B1 JUMP JUMPDEST PUSH2 0x16B PUSH2 0x2DA CALLDATASIZE PUSH1 0x4 PUSH2 0x1B10 JUMP JUMPDEST PUSH2 0xA0E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16B PUSH2 0x2FA CALLDATASIZE PUSH1 0x4 PUSH2 0x1898 JUMP JUMPDEST PUSH2 0xA55 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16B PUSH2 0xB31 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x320 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x329 PUSH2 0xB45 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F9 SWAP2 SWAP1 PUSH2 0x1BB0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x342 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x329 PUSH2 0x351 CALLDATASIZE PUSH1 0x4 PUSH2 0x192B JUMP JUMPDEST PUSH2 0xBD3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x362 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22F PUSH2 0x371 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BC3 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A3 PUSH2 0xBEC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F9 SWAP2 SWAP1 PUSH2 0x1BF6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 SLOAD PUSH2 0x3A3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x329 PUSH2 0x3EB CALLDATASIZE PUSH1 0x4 PUSH2 0x192B JUMP JUMPDEST PUSH2 0xBFB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16B PUSH2 0x40B CALLDATASIZE PUSH1 0x4 PUSH2 0x1970 JUMP JUMPDEST PUSH2 0xD0A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A3 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x450 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16B PUSH2 0x45F CALLDATASIZE PUSH1 0x4 PUSH2 0x1AF5 JUMP JUMPDEST PUSH2 0xD93 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x470 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22F PUSH2 0x2710 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x486 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16B PUSH2 0x495 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C0A JUMP JUMPDEST PUSH2 0xDF1 JUMP JUMPDEST PUSH2 0x16B PUSH2 0x4A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1898 JUMP JUMPDEST PUSH2 0xE86 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16B PUSH2 0x4C8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C78 JUMP JUMPDEST PUSH2 0x109C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16B PUSH2 0x4E8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1970 JUMP JUMPDEST PUSH2 0x1106 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16B PUSH2 0x508 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AF5 JUMP JUMPDEST PUSH2 0x1160 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x519 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x329 PUSH2 0x528 CALLDATASIZE PUSH1 0x4 PUSH2 0x1CB4 JUMP JUMPDEST PUSH2 0x11D9 JUMP JUMPDEST CALLER PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x5AA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C7A4170703A20696E76616C696420656E64706F696E742063616C6C65720000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFFFF DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH2 0x5C8 SWAP1 PUSH2 0x1CFF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5F4 SWAP1 PUSH2 0x1CFF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x641 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x616 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x641 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x624 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP1 MLOAD DUP7 DUP7 SWAP1 POP EQ DUP1 ISZERO PUSH2 0x65C JUMPI POP PUSH1 0x0 DUP2 MLOAD GT JUMPDEST DUP1 ISZERO PUSH2 0x684 JUMPI POP DUP1 MLOAD PUSH1 0x20 DUP3 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x67A SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH2 0x1D39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 EQ JUMPDEST PUSH2 0x6DF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C7A4170703A20696E76616C696420736F757263652073656E64696E6720636F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1B9D1C9858DD PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5A1 JUMP JUMPDEST PUSH2 0x755 DUP8 DUP8 DUP8 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP11 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP9 DUP2 MSTORE DUP11 SWAP4 POP SWAP2 POP DUP9 SWAP1 DUP9 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x128A SWAP3 POP POP POP JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x766 PUSH2 0x1303 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x7E0DB17 PUSH1 0xE0 SHL DUP2 MSTORE PUSH2 0xFFFF DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x7E0DB17 SWAP1 PUSH1 0x24 ADD JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7E0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x7EF PUSH2 0x1303 JUMP JUMPDEST PUSH2 0xFFFF SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMP JUMPDEST PUSH2 0x80E PUSH2 0x1303 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x10DDB137 PUSH1 0xE0 SHL DUP2 MSTORE PUSH2 0xFFFF DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x10DDB137 SWAP1 PUSH1 0x24 ADD PUSH2 0x7B2 JUMP JUMPDEST PUSH2 0xFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP3 SWAP2 SWAP1 PUSH2 0x87F SWAP1 PUSH2 0x1CFF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8AB SWAP1 PUSH2 0x1CFF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8F8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8CD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8F8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8DB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x90F SWAP3 SWAP2 SWAP1 PUSH2 0x1D39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP2 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x933 PUSH2 0x1303 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x42D65A8D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x42D65A8D SWAP1 PUSH2 0x983 SWAP1 DUP7 SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x1D72 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x99D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x755 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH2 0x9B9 PUSH2 0x1303 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT PUSH1 0x60 DUP4 DUP2 SHL DUP3 AND PUSH1 0x20 DUP5 ADD MSTORE ADDRESS SWAP1 SHL AND PUSH1 0x34 DUP3 ADD MSTORE PUSH1 0x48 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x7 SLOAD PUSH2 0xFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE KECCAK256 SWAP1 PUSH2 0xA0A SWAP1 DUP3 PUSH2 0x1DEB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xA21 SWAP2 SWAP1 PUSH2 0x1BB0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE PUSH1 0x7 SLOAD PUSH1 0x20 DUP5 ADD SWAP1 SWAP3 MSTORE PUSH1 0x0 DUP1 DUP5 MSTORE SWAP1 SWAP4 POP PUSH2 0xA0A SWAP3 PUSH2 0xFFFF SWAP1 SWAP3 AND SWAP2 DUP5 SWAP2 CALLER SWAP2 CALLVALUE PUSH2 0x1362 JUMP JUMPDEST CALLER ADDRESS EQ PUSH2 0xAB3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F6E626C6F636B696E674C7A4170703A2063616C6C6572206D757374206265 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x204C7A41707 PUSH1 0xD4 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5A1 JUMP JUMPDEST PUSH2 0xB29 DUP7 DUP7 DUP7 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP10 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP8 DUP2 MSTORE DUP10 SWAP4 POP SWAP2 POP DUP8 SWAP1 DUP8 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x1507 SWAP3 POP POP POP JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xB39 PUSH2 0x1303 JUMP JUMPDEST PUSH2 0xB43 PUSH1 0x0 PUSH2 0x1528 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH2 0xB52 SWAP1 PUSH2 0x1CFF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB7E SWAP1 PUSH2 0x1CFF JUMP JUMPDEST DUP1 ISZERO PUSH2 0xBCB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xBA0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xBCB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xBAE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0xB52 SWAP1 PUSH2 0x1CFF JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0xFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x60 SWAP3 SWAP2 SWAP1 PUSH2 0xC1E SWAP1 PUSH2 0x1CFF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xC4A SWAP1 PUSH2 0x1CFF JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC97 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC6C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC97 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC7A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xCEF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C7A4170703A206E6F20747275737465642070617468207265636F7264000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5A1 JUMP JUMPDEST PUSH2 0x924 PUSH1 0x0 PUSH1 0x14 DUP4 MLOAD PUSH2 0xD02 SWAP2 SWAP1 PUSH2 0x1EBA JUMP JUMPDEST DUP4 SWAP2 SWAP1 PUSH2 0x1578 JUMP JUMPDEST PUSH2 0xD12 PUSH2 0x1303 JUMP JUMPDEST DUP2 DUP2 ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xD27 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1ED3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH2 0xFFFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE KECCAK256 SWAP1 PUSH2 0xD52 SWAP1 DUP3 PUSH2 0x1DEB JUMP JUMPDEST POP PUSH32 0x8C0400CFE2D1199B1A725C78960BCC2A344D869B80590D0F2BD005DB15A572CE DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0xD86 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH2 0xD9B PUSH2 0x1303 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x5DB758E995A17EC1AD84BDEF7E8C3293A0BD6179BCCE400DFF5D4C3D87DB726B SWAP1 PUSH2 0xDE6 SWAP1 DUP4 SWAP1 PUSH2 0x1BF6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0xDF9 PUSH2 0x1303 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x32FB62E7 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0xCBED8B9C SWAP1 PUSH2 0xE4D SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1EF4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE7B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xFFFF DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP1 MLOAD PUSH2 0xEA9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH2 0x1D39 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 SWAP3 DUP2 SWAP1 SUB DUP4 ADD SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 POP DUP1 PUSH2 0xF29 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F6E626C6F636B696E674C7A4170703A206E6F2073746F726564206D657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x616765 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5A1 JUMP JUMPDEST DUP1 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0xF3A SWAP3 SWAP2 SWAP1 PUSH2 0x1D39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 EQ PUSH2 0xF99 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F6E626C6F636B696E674C7A4170703A20696E76616C6964207061796C6F61 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0xFA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5A1 JUMP JUMPDEST PUSH2 0xFFFF DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP1 MLOAD PUSH2 0xFBC SWAP1 DUP10 SWAP1 DUP10 SWAP1 PUSH2 0x1D39 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 SWAP3 DUP2 SWAP1 SUB DUP4 ADD DUP2 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP1 DUP5 MSTORE DUP3 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x1F DUP9 ADD DUP3 SWAP1 DIV DUP3 MUL DUP4 ADD DUP3 ADD SWAP1 MSTORE DUP7 DUP3 MSTORE PUSH2 0x1054 SWAP2 DUP10 SWAP2 DUP10 SWAP1 DUP10 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP11 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP9 DUP2 MSTORE DUP11 SWAP4 POP SWAP2 POP DUP9 SWAP1 DUP9 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x1507 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0xC264D91F3ADC5588250E1551F547752CA0CFA8F6B530D243B9F9F4CAB10EA8E5 DUP8 DUP8 DUP8 DUP8 DUP6 PUSH1 0x40 MLOAD PUSH2 0x108B SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F2D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x10A4 PUSH2 0x1303 JUMP JUMPDEST PUSH2 0xFFFF DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD SWAP3 DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP2 ADD DUP3 SWAP1 MSTORE PUSH32 0x9D5C7C0B934DA8FEFA9C7760C98383778A12DFBFC0C3B3106518F43FB9508AC0 SWAP1 PUSH1 0x60 ADD PUSH2 0xD86 JUMP JUMPDEST PUSH2 0x110E PUSH2 0x1303 JUMP JUMPDEST PUSH2 0xFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x112C DUP3 DUP5 DUP4 PUSH2 0x1F68 JUMP JUMPDEST POP PUSH32 0xFA41487AD5D6728F0B19276FA1EDDC16558578F5109FC39D2DC33C3230470DAB DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0xD86 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D72 JUMP JUMPDEST PUSH2 0x1168 PUSH2 0x1303 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x11CD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5A1 JUMP JUMPDEST PUSH2 0x11D6 DUP2 PUSH2 0x1528 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3D7B2F6F PUSH1 0xE2 SHL DUP2 MSTORE PUSH2 0xFFFF DUP1 DUP7 AND PUSH1 0x4 DUP4 ADD MSTORE DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE ADDRESS PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xF5ECBDBC SWAP1 PUSH1 0x84 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1259 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x1281 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2051 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x12ED GAS PUSH1 0x96 PUSH4 0x66AD5C8A PUSH1 0xE0 SHL DUP10 DUP10 DUP10 DUP10 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x12B2 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2099 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE ADDRESS SWAP3 SWAP2 SWAP1 PUSH2 0x1685 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 PUSH2 0xB29 JUMPI PUSH2 0xB29 DUP7 DUP7 DUP7 DUP7 DUP6 PUSH2 0x170F JUMP JUMPDEST CALLER PUSH2 0x130C PUSH2 0xBEC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xB43 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5A1 JUMP JUMPDEST PUSH2 0xFFFF DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH2 0x1380 SWAP1 PUSH2 0x1CFF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x13AC SWAP1 PUSH2 0x1CFF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x13F9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x13CE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x13F9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x13DC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x146A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C7A4170703A2064657374696E6174696F6E20636861696E206973206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x61207472757374656420736F75726365 PUSH1 0x80 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5A1 JUMP JUMPDEST PUSH2 0x1475 DUP8 DUP8 MLOAD PUSH2 0x17AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0xC58031 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0xC5803100 SWAP1 DUP5 SWAP1 PUSH2 0x14CC SWAP1 DUP12 SWAP1 DUP7 SWAP1 DUP13 SWAP1 DUP13 SWAP1 DUP13 SWAP1 DUP13 SWAP1 PUSH1 0x4 ADD PUSH2 0x20D7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x14E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x14F9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x151B SWAP2 SWAP1 PUSH2 0x2051 JUMP JUMPDEST PUSH1 0x6 SWAP1 PUSH2 0x7E0 SWAP1 DUP3 PUSH2 0x1DEB JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH2 0x1586 DUP2 PUSH1 0x1F PUSH2 0x213E JUMP JUMPDEST LT ISZERO PUSH2 0x15C5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x736C6963655F6F766572666C6F77 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5A1 JUMP JUMPDEST PUSH2 0x15CF DUP3 DUP5 PUSH2 0x213E JUMP JUMPDEST DUP5 MLOAD LT ISZERO PUSH2 0x1613 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x736C6963655F6F75744F66426F756E6473 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5A1 JUMP JUMPDEST PUSH1 0x60 DUP3 ISZERO DUP1 ISZERO PUSH2 0x1632 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x0 DUP3 MSTORE PUSH1 0x20 DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x167C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F DUP5 AND DUP1 ISZERO PUSH1 0x20 MUL DUP2 DUP5 ADD ADD DUP6 DUP2 ADD DUP8 DUP4 ISZERO PUSH1 0x20 MUL DUP5 DUP12 ADD ADD ADD JUMPDEST DUP2 DUP4 LT ISZERO PUSH2 0x166B JUMPI DUP1 MLOAD DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x1653 JUMP JUMPDEST POP POP DUP6 DUP5 MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x40 MSTORE POP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 DUP1 PUSH1 0x0 DUP7 PUSH2 0xFFFF AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x16AA JUMPI PUSH2 0x16AA PUSH2 0x19C2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x16D4 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 DUP8 MLOAD PUSH1 0x20 DUP10 ADD PUSH1 0x0 DUP14 DUP14 CALL SWAP2 POP RETURNDATASIZE SWAP3 POP DUP7 DUP4 GT ISZERO PUSH2 0x16F6 JUMPI DUP7 SWAP3 POP JUMPDEST DUP3 DUP2 MSTORE DUP3 PUSH1 0x0 PUSH1 0x20 DUP4 ADD RETURNDATACOPY SWAP1 SWAP9 SWAP1 SWAP8 POP SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP2 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x5 PUSH1 0x0 DUP8 PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1740 SWAP2 SWAP1 PUSH2 0x2151 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB PUSH1 0x20 SWAP1 DUP2 ADD DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP2 MSTORE KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH32 0xE183F33DE2837795525B4792CA4CD60535BD77C53B7E7030060BFCF5734D6B0C SWAP1 PUSH2 0x179D SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH2 0x216D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH2 0xFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 DUP2 SWAP1 SUB PUSH2 0x17CD JUMPI POP PUSH2 0x2710 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x181D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C7A4170703A207061796C6F61642073697A6520697320746F6F206C61726765 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5A1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0x1834 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x184B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1862 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x187A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1834 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x18B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x18BA DUP8 PUSH2 0x1822 JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x18D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x18E2 DUP11 DUP4 DUP12 ADD PUSH2 0x1839 JUMP JUMPDEST SWAP1 SWAP8 POP SWAP6 POP DUP6 SWAP2 POP PUSH2 0x18F6 PUSH1 0x40 DUP11 ADD PUSH2 0x1881 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x190C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1919 DUP10 DUP3 DUP11 ADD PUSH2 0x1839 JUMP JUMPDEST SWAP8 SWAP11 SWAP7 SWAP10 POP SWAP5 SWAP8 POP SWAP3 SWAP6 SWAP4 SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x193D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x924 DUP3 PUSH2 0x1822 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1959 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1962 DUP4 PUSH2 0x1822 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1985 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x198E DUP5 PUSH2 0x1822 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x19A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x19B5 DUP7 DUP3 DUP8 ADD PUSH2 0x1839 JUMP JUMPDEST SWAP5 SWAP8 SWAP1 SWAP7 POP SWAP4 SWAP5 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1A00 JUMPI PUSH2 0x1A00 PUSH2 0x19C2 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x1A21 JUMPI PUSH2 0x1A21 PUSH2 0x19C2 JUMP JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A42 PUSH2 0x1A3D DUP5 PUSH2 0x1A08 JUMP JUMPDEST PUSH2 0x19D8 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE DUP4 DUP4 DUP4 ADD GT ISZERO PUSH2 0x1A56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP3 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1A82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A8B DUP5 PUSH2 0x1822 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1AA6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 ADD PUSH1 0x1F DUP2 ADD DUP7 SGT PUSH2 0x1AB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1AC6 DUP7 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x1A2F JUMP JUMPDEST SWAP3 POP POP PUSH2 0x1AD5 PUSH1 0x40 DUP6 ADD PUSH2 0x1881 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1834 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B07 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x924 DUP3 PUSH2 0x1ADE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1B38 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x1B49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B58 DUP5 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x1A2F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1B7B JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1B63 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1B9C DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1B60 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x924 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1B84 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BD6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1BDF DUP4 PUSH2 0x1822 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BED PUSH1 0x20 DUP5 ADD PUSH2 0x1822 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1C22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C2B DUP7 PUSH2 0x1822 JUMP JUMPDEST SWAP5 POP PUSH2 0x1C39 PUSH1 0x20 DUP8 ADD PUSH2 0x1822 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1C5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C67 DUP9 DUP3 DUP10 ADD PUSH2 0x1839 JUMP JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP SWAP3 SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1C8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C96 DUP5 PUSH2 0x1822 JUMP JUMPDEST SWAP3 POP PUSH2 0x1CA4 PUSH1 0x20 DUP6 ADD PUSH2 0x1822 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1CCA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1CD3 DUP6 PUSH2 0x1822 JUMP JUMPDEST SWAP4 POP PUSH2 0x1CE1 PUSH1 0x20 DUP7 ADD PUSH2 0x1822 JUMP JUMPDEST SWAP3 POP PUSH2 0x1CEF PUSH1 0x40 DUP7 ADD PUSH2 0x1ADE JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP3 SWAP4 PUSH1 0x60 ADD CALLDATALOAD SWAP3 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1D13 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1D33 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 DUP4 DUP3 CALLDATACOPY PUSH1 0x0 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 DUP4 MSTORE DUP2 DUP2 PUSH1 0x20 DUP6 ADD CALLDATACOPY POP PUSH1 0x0 DUP3 DUP3 ADD PUSH1 0x20 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP2 ADD ADD SWAP1 JUMP JUMPDEST PUSH2 0xFFFF DUP5 AND DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x1281 PUSH1 0x40 DUP4 ADD DUP5 DUP7 PUSH2 0x1D49 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x181D JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x1DB7 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xB29 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1DC3 JUMP JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND PUSH1 0x1 SWAP2 SWAP1 SWAP2 SHL OR SWAP1 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1E04 JUMPI PUSH2 0x1E04 PUSH2 0x19C2 JUMP JUMPDEST PUSH2 0x1E18 DUP2 PUSH2 0x1E12 DUP5 SLOAD PUSH2 0x1CFF JUMP JUMPDEST DUP5 PUSH2 0x1D90 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1E47 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x1E35 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH2 0x1E3F DUP6 DUP3 PUSH2 0x1DD6 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0xB29 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1E76 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x1E57 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x1E94 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x1ECD JUMPI PUSH2 0x1ECD PUSH2 0x1EA4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP5 DUP3 CALLDATACOPY PUSH1 0x60 SWAP2 SWAP1 SWAP2 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND SWAP2 ADD SWAP1 DUP2 MSTORE PUSH1 0x14 ADD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP1 DUP9 AND DUP4 MSTORE DUP1 DUP8 AND PUSH1 0x20 DUP5 ADD MSTORE POP DUP5 PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1F22 PUSH1 0x80 DUP4 ADD DUP5 DUP7 PUSH2 0x1D49 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xFFFF DUP7 AND DUP2 MSTORE PUSH1 0x80 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x1F4B PUSH1 0x80 DUP4 ADD DUP7 DUP9 PUSH2 0x1D49 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP5 SWAP1 SWAP5 AND PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT ISZERO PUSH2 0x1F7F JUMPI PUSH2 0x1F7F PUSH2 0x19C2 JUMP JUMPDEST PUSH2 0x1F93 DUP4 PUSH2 0x1F8D DUP4 SLOAD PUSH2 0x1CFF JUMP JUMPDEST DUP4 PUSH2 0x1D90 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP5 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1FC1 JUMPI PUSH1 0x0 DUP6 ISZERO PUSH2 0x1FAF JUMPI POP DUP4 DUP3 ADD CALLDATALOAD JUMPDEST PUSH2 0x1FB9 DUP7 DUP3 PUSH2 0x1DD6 JUMP JUMPDEST DUP5 SSTORE POP PUSH2 0x7E0 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP1 DUP4 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1FF2 JUMPI DUP7 DUP6 ADD CALLDATALOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x1FD2 JUMP JUMPDEST POP DUP7 DUP3 LT ISZERO PUSH2 0x200F JUMPI PUSH1 0x0 NOT PUSH1 0xF8 DUP9 PUSH1 0x3 SHL AND SHR NOT DUP5 DUP8 ADD CALLDATALOAD AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP6 PUSH1 0x1 SHL ADD DUP4 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x202F PUSH2 0x1A3D DUP5 PUSH2 0x1A08 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE DUP4 DUP4 DUP4 ADD GT ISZERO PUSH2 0x2043 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x924 DUP4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1B60 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2063 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2079 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x208A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B58 DUP5 DUP3 MLOAD PUSH1 0x20 DUP5 ADD PUSH2 0x2021 JUMP JUMPDEST PUSH2 0xFFFF DUP6 AND DUP2 MSTORE PUSH1 0x80 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x20B6 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x1B84 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP6 AND PUSH1 0x40 DUP5 ADD MSTORE DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x1F22 DUP2 DUP6 PUSH2 0x1B84 JUMP JUMPDEST PUSH2 0xFFFF DUP8 AND DUP2 MSTORE PUSH1 0xC0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x20F4 PUSH1 0xC0 DUP4 ADD DUP9 PUSH2 0x1B84 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x2106 DUP2 DUP9 PUSH2 0x1B84 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x60 DUP7 ADD MSTORE DUP7 AND PUSH1 0x80 DUP6 ADD MSTORE DUP4 DUP2 SUB PUSH1 0xA0 DUP6 ADD MSTORE SWAP1 POP PUSH2 0x2131 DUP2 DUP6 PUSH2 0x1B84 JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x1ECD JUMPI PUSH2 0x1ECD PUSH2 0x1EA4 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x2163 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1B60 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xFFFF DUP7 AND DUP2 MSTORE PUSH1 0xA0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x218A PUSH1 0xA0 DUP4 ADD DUP8 PUSH2 0x1B84 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP7 AND PUSH1 0x40 DUP5 ADD MSTORE DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x21AB DUP2 DUP7 PUSH2 0x1B84 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x21BF DUP2 DUP6 PUSH2 0x1B84 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFB CALLER PUSH30 0x3F3212FE145603F0E641EE588D5A8E28D3D51F69D9038937DA086E7F1064 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"407:1143:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1256:825:2;;;;;;;;;;-1:-1:-1;1256:825:2;;;;;:::i;:::-;;:::i;:::-;;4791:121;;;;;;;;;;-1:-1:-1;4791:121:2;;;;;:::i;:::-;;:::i;6649:140::-;;;;;;;;;;-1:-1:-1;6649:140:2;;;;;:::i;:::-;;:::i;4918:127::-;;;;;;;;;;-1:-1:-1;4918:127:2;;;;;:::i;:::-;;:::i;6884:247::-;;;;;;;;;;-1:-1:-1;6884:247:2;;;;;:::i;:::-;;:::i;:::-;;;2670:14:10;;2663:22;2645:41;;2633:2;2618:18;6884:247:2;;;;;;;;810:53;;;;;;;;;;-1:-1:-1;810:53:2;;;;;:::i;:::-;;;;;;;;;;;;;;;;;2843:25:10;;;2831:2;2816:18;810:53:2;2697:177:10;5051:176:2;;;;;;;;;;-1:-1:-1;5051:176:2;;;;;:::i;:::-;;:::i;622:85:3:-;;;;;;;;;;-1:-1:-1;622:85:3;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1380:167:9;;;;;;;;;;-1:-1:-1;1380:167:9;;;;;:::i;:::-;;:::i;1160:212::-;;;;;;:::i;:::-;;:::i;1955:380:3:-;;;;;;;;;;-1:-1:-1;1955:380:3;;;;;:::i;:::-;;:::i;1824:101:7:-;;;;;;;;;;;;;:::i;457:43:9:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;682:51:2:-;;;;;;;;;;-1:-1:-1;682:51:2;;;;;:::i;:::-;;:::i;739:65::-;;;;;;;;;;-1:-1:-1;739:65:2;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;1201:85:7;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;869:23:2:-;;;;;;;;;;-1:-1:-1;869:23:2;;;;-1:-1:-1;;;;;869:23:2;;;5864:326;;;;;;;;;;-1:-1:-1;5864:326:2;;;;;:::i;:::-;;:::i;5580:278::-;;;;;;;;;;-1:-1:-1;5580:278:2;;;;;:::i;:::-;;:::i;630:46::-;;;;;;;;;;;;;;;6196:133;;;;;;;;;;-1:-1:-1;6196:133:2;;;;;:::i;:::-;;:::i;568:55::-;;;;;;;;;;;;618:5;568:55;;4545:240;;;;;;;;;;-1:-1:-1;4545:240:2;;;;;:::i;:::-;;:::i;2554:795:3:-;;;;;;:::i;:::-;;:::i;6335:255:2:-;;;;;;;;;;-1:-1:-1;6335:255:2;;;;;:::i;:::-;;:::i;5370:204::-;;;;;;;;;;-1:-1:-1;5370:204:2;;;;;:::i;:::-;;:::i;2074:198:7:-;;;;;;;;;;-1:-1:-1;2074:198:7;;;;;:::i;:::-;;:::i;4239:247:2:-;;;;;;;;;;-1:-1:-1;4239:247:2;;;;;:::i;:::-;;:::i;1256:825::-;719:10:8;1532::2;-1:-1:-1;;;;;1508:35:2;;1500:78;;;;-1:-1:-1;;;1500:78:2;;8672:2:10;1500:78:2;;;8654:21:10;8711:2;8691:18;;;8684:30;8750:32;8730:18;;;8723:60;8800:18;;1500:78:2;;;;;;;;;1618:32;;;1589:26;1618:32;;;:19;:32;;;;;1589:61;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1835:13;:20;1813:11;;:18;;:42;:70;;;;;1882:1;1859:13;:20;:24;1813:70;:124;;;;-1:-1:-1;1913:24:2;;;;;;1887:22;;;;1897:11;;;;1887:22;:::i;:::-;;;;;;;;:50;1813:124;1792:209;;;;-1:-1:-1;;;1792:209:2;;9692:2:10;1792:209:2;;;9674:21:10;9731:2;9711:18;;;9704:30;9770:34;9750:18;;;9743:62;-1:-1:-1;;;9821:18:10;;;9814:36;9867:19;;1792:209:2;9490:402:10;1792:209:2;2012:62;2031:11;2044;;2012:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2012:62:2;;;;;;;;;;;;;;;;;;;;;;2057:6;;-1:-1:-1;2012:62:2;-1:-1:-1;2065:8:2;;;;;;2012:62;;2065:8;;;;2012:62;;;;;;;;;-1:-1:-1;2012:18:2;;-1:-1:-1;;;2012:62:2:i;:::-;1425:656;1256:825;;;;;;:::o;4791:121::-;1094:13:7;:11;:13::i;:::-;4870:35:2::1;::::0;-1:-1:-1;;;4870:35:2;;10071:6:10;10059:19;;4870:35:2::1;::::0;::::1;10041:38:10::0;4870:10:2::1;-1:-1:-1::0;;;;;4870:25:2::1;::::0;::::1;::::0;10014:18:10;;4870:35:2::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;4791:121:::0;:::o;6649:140::-;1094:13:7;:11;:13::i;:::-;6739:35:2::1;::::0;;::::1;;::::0;;;:22:::1;:35;::::0;;;;:43;6649:140::o;4918:127::-;1094:13:7;:11;:13::i;:::-;5000:38:2::1;::::0;-1:-1:-1;;;5000:38:2;;10071:6:10;10059:19;;5000:38:2::1;::::0;::::1;10041::10::0;5000:10:2::1;-1:-1:-1::0;;;;;5000:28:2::1;::::0;::::1;::::0;10014:18:10;;5000:38:2::1;9897:188:10::0;6884:247:2;7025:32;;;6980:4;7025:32;;;:19;:32;;;;;6996:61;;6980:4;;7025:32;6996:61;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7112:11;;7102:22;;;;;;;:::i;:::-;;;;;;;;7084:13;7074:24;;;;;;:50;7067:57;;;6884:247;;;;;;:::o;5051:176::-;1094:13:7;:11;:13::i;:::-;5165:55:2::1;::::0;-1:-1:-1;;;5165:55:2;;-1:-1:-1;;;;;5165:10:2::1;:29;::::0;::::1;::::0;:55:::1;::::0;5195:11;;5208;;;;5165:55:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;1380:167:9::0;1094:13:7;:11;:13::i;:::-;1489:47:9::1;::::0;-1:-1:-1;;;;;;10871:2:10;10907:15;;;10903:24;;1489:47:9::1;::::0;::::1;10891:37:10::0;1530:4:9::1;10962:15:10::0;;10958:24;10944:12;;;10937:46;10999:12;;1489:47:9::1;::::0;;-1:-1:-1;;1489:47:9;;::::1;::::0;;;;;;1474:11:::1;::::0;::::1;;1454:32;::::0;;;:19:::1;1489:47;1454:32:::0;;;:82:::1;::::0;:32;:82:::1;:::i;:::-;;1380:167:::0;:::o;1160:212::-;1224:20;1258:8;1247:20;;;;;;;;:::i;:::-;;;;-1:-1:-1;;1247:20:9;;;;;;1286:11;;1247:20;1343:9;;;;;1286:11;1343:9;;;1247:20;;-1:-1:-1;1278:86:9;;1286:11;;;;;1247:20;;1316:10;;1354:9;1278:7;:86::i;1955:380:3:-;719:10:8;2205:4:3;2181:29;2173:80;;;;-1:-1:-1;;;2173:80:3;;13422:2:10;2173:80:3;;;13404:21:10;13461:2;13441:18;;;13434:30;13500:34;13480:18;;;13473:62;-1:-1:-1;;;13551:18:10;;;13544:36;13597:19;;2173:80:3;13220:402:10;2173:80:3;2263:65;2285:11;2298;;2263:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2263:65:3;;;;;;;;;;;;;;;;;;;;;;2311:6;;-1:-1:-1;2263:65:3;-1:-1:-1;2319:8:3;;;;;;2263:65;;2319:8;;;;2263:65;;;;;;;;;-1:-1:-1;2263:21:3;;-1:-1:-1;;;2263:65:3:i;:::-;1955:380;;;;;;:::o;1824:101:7:-;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;:::-;1824:101::o:0;457:43:9:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;682:51:2:-;;;;;;;;;;;;;;;;:::i;1201:85:7:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:7;;1201:85::o;5864:326:2:-;5987:35;;;5967:17;5987:35;;;:19;:35;;;;;5967:55;;5943:12;;5967:17;5987:35;5967:55;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6040:4;:11;6055:1;6040:16;6032:58;;;;-1:-1:-1;;;6032:58:2;;13829:2:10;6032:58:2;;;13811:21:10;13868:2;13848:18;;;13841:30;13907:31;13887:18;;;13880:59;13956:18;;6032:58:2;13627:353:10;6032:58:2;6107:31;6118:1;6135:2;6121:4;:11;:16;;;;:::i;:::-;6107:4;;:31;:10;:31::i;5580:278::-;1094:13:7;:11;:13::i;:::-;5751:14:2::1;;5775:4;5734:47;;;;;;;;;;:::i;:::-;;::::0;;-1:-1:-1;;5734:47:2;;::::1;::::0;;;;;;5696:35:::1;::::0;::::1;;::::0;;;:19:::1;5734:47;5696:35:::0;;;:85:::1;::::0;:35;:85:::1;:::i;:::-;;5796:55;5820:14;5836;;5796:55;;;;;;;;:::i;:::-;;;;;;;;5580:278:::0;;;:::o;6196:133::-;1094:13:7;:11;:13::i;:::-;6265:8:2::1;:20:::0;;-1:-1:-1;;;;;;6265:20:2::1;-1:-1:-1::0;;;;;6265:20:2;::::1;;::::0;;6300:22:::1;::::0;::::1;::::0;::::1;::::0;6265:20;;6300:22:::1;:::i;:::-;;;;;;;;6196:133:::0;:::o;4545:240::-;1094:13:7;:11;:13::i;:::-;4716:62:2::1;::::0;-1:-1:-1;;;4716:62:2;;-1:-1:-1;;;;;4716:10:2::1;:20;::::0;::::1;::::0;:62:::1;::::0;4737:8;;4747;;4757:11;;4770:7;;;;4716:62:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;4545:240:::0;;;;;:::o;2554:795:3:-;2801:27;;;2779:19;2801:27;;;:14;:27;;;;;;:40;;;;2829:11;;;;2801:40;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2801:48:3;;;;;;;;;;;;-1:-1:-1;2801:48:3;2859:73;;;;-1:-1:-1;;;2859:73:3;;15312:2:10;2859:73:3;;;15294:21:10;15351:2;15331:18;;;15324:30;15390:34;15370:18;;;15363:62;-1:-1:-1;;;15441:18:10;;;15434:33;15484:19;;2859:73:3;15110:399:10;2859:73:3;2973:11;2960:8;;2950:19;;;;;;;:::i;:::-;;;;;;;;:34;2942:80;;;;-1:-1:-1;;;2942:80:3;;15716:2:10;2942:80:3;;;15698:21:10;15755:2;15735:18;;;15728:30;15794:34;15774:18;;;15767:62;-1:-1:-1;;;15845:18:10;;;15838:31;15886:19;;2942:80:3;15514:397:10;2942:80:3;3068:27;;;3127:1;3068:27;;;:14;:27;;;;;;:40;;;;3096:11;;;;3068:40;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3068:48:3;;;;;;;;;;;;:61;;;;3196:65;;;;;;;;;;;;;;;;;;;3218:11;;3231;;3196:65;;;;;;3231:11;3196:65;;3231:11;3196:65;;;;;;;;;-1:-1:-1;;3196:65:3;;;;;;;;;;;;;;;;;;;;;;3244:6;;-1:-1:-1;3196:65:3;-1:-1:-1;3252:8:3;;;;;;3196:65;;3252:8;;;;3196:65;;;;;;;;;-1:-1:-1;3196:21:3;;-1:-1:-1;;;3196:65:3:i;:::-;3276:66;3296:11;3309;;3322:6;3330:11;3276:66;;;;;;;;;;:::i;:::-;;;;;;;;2725:624;2554:795;;;;;;:::o;6335:255:2:-;1094:13:7;:11;:13::i;:::-;6470:28:2::1;::::0;;::::1;;::::0;;;:15:::1;:28;::::0;;;;;;;:41;;::::1;::::0;;;;;;;;;;:51;;;6536:47;;16637:34:10;;;16687:18;;16680:43;;;;16739:18;;;16732:34;;;6536:47:2::1;::::0;16600:2:10;16585:18;6536:47:2::1;16414:358:10::0;5370:204:2;1094:13:7;:11;:13::i;:::-;5470:35:2::1;::::0;::::1;;::::0;;;:19:::1;:35;::::0;;;;:43:::1;5508:5:::0;;5470:35;:43:::1;:::i;:::-;;5528:39;5545:14;5561:5;;5528:39;;;;;;;;:::i;2074:198:7:-:0;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2162:22:7;::::1;2154:73;;;::::0;-1:-1:-1;;;2154:73:7;;18186:2:10;2154:73:7::1;::::0;::::1;18168:21:10::0;18225:2;18205:18;;;18198:30;18264:34;18244:18;;;18237:62;-1:-1:-1;;;18315:18:10;;;18308:36;18361:19;;2154:73:7::1;17984:402:10::0;2154:73:7::1;2237:28;2256:8;2237:18;:28::i;:::-;2074:198:::0;:::o;4239:247:2:-;4411:68;;-1:-1:-1;;;4411:68:2;;18628:6:10;18661:15;;;4411:68:2;;;18643:34:10;18713:15;;18693:18;;;18686:43;4460:4:2;18745:18:10;;;18738:60;18814:18;;;18807:34;;;4380:12:2;;4411:10;-1:-1:-1;;;;;4411:20:2;;;;18590:19:10;;4411:68:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4411:68:2;;;;;;;;;;;;:::i;:::-;4404:75;4239:247;-1:-1:-1;;;;;4239:247:2:o;985:592:3:-;1172:12;1186:19;1209:199;1256:9;1279:3;1319:34;;;1355:11;1368;1381:6;1389:8;1296:102;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;1296:102:3;;;;;;;;;;;;;;-1:-1:-1;;;;;1296:102:3;-1:-1:-1;;;;;;1296:102:3;;;;;;;;;;1217:4;;1209:199;;:33;:199::i;:::-;1171:237;;;;1466:7;1461:110;;1489:71;1509:11;1522;1535:6;1543:8;1553:6;1489:19;:71::i;1359:130:7:-;719:10:8;1422:7:7;:5;:7::i;:::-;-1:-1:-1;;;;;1422:23:7;;1414:68;;;;-1:-1:-1;;;1414:68:7;;20403:2:10;1414:68:7;;;20385:21:10;;;20422:18;;;20415:30;20481:34;20461:18;;;20454:62;20533:18;;1414:68:7;20201:356:10;2403:602:2;2679:32;;;2650:26;2679:32;;;:19;:32;;;;;2650:61;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2729:13;:20;2753:1;2729:25;2721:86;;;;-1:-1:-1;;;2721:86:2;;20764:2:10;2721:86:2;;;20746:21:10;20803:2;20783:18;;;20776:30;20842:34;20822:18;;;20815:62;-1:-1:-1;;;20893:18:10;;;20886:46;20949:19;;2721:86:2;20562:412:10;2721:86:2;2817:47;2835:11;2848:8;:15;2817:17;:47::i;:::-;2874:124;;-1:-1:-1;;;2874:124:2;;-1:-1:-1;;;;;2874:10:2;:15;;;;2897:10;;2874:124;;2909:11;;2922:13;;2937:8;;2947:14;;2963:18;;2983:14;;2874:124;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2640:365;2403:602;;;;;;:::o;995:157:9:-;1125:8;1114:30;;;;;;;;;;;;:::i;:::-;1107:4;;:37;;:4;:37;:::i;2426:187:7:-;2499:16;2518:6;;-1:-1:-1;;;;;2534:17:7;;;-1:-1:-1;;;;;;2534:17:7;;;;;;2566:40;;2518:6;;;;;;;2566:40;;2499:16;2566:40;2489:124;2426:187;:::o;9258:2770:0:-;9374:12;9422:7;9406:12;9422:7;9416:2;9406:12;:::i;:::-;:23;;9398:50;;;;-1:-1:-1;;;9398:50:0;;23974:2:10;9398:50:0;;;23956:21:10;24013:2;23993:18;;;23986:30;-1:-1:-1;;;24032:18:10;;;24025:44;24086:18;;9398:50:0;23772:338:10;9398:50:0;9483:16;9492:7;9483:6;:16;:::i;:::-;9466:6;:13;:33;;9458:63;;;;-1:-1:-1;;;9458:63:0;;24317:2:10;9458:63:0;;;24299:21:10;24356:2;24336:18;;;24329:30;-1:-1:-1;;;24375:18:10;;;24368:47;24432:18;;9458:63:0;24115:341:10;9458:63:0;9532:22;9595:15;;9623:1967;;;;11731:4;11725:11;11712:24;;11917:1;11906:9;11899:20;11965:4;11954:9;11950:20;11944:4;11937:34;9588:2397;;9623:1967;9805:4;9799:11;9786:24;;10464:2;10455:7;10451:16;10846:9;10839:17;10833:4;10829:28;10817:9;10806;10802:25;10798:60;10894:7;10890:2;10886:16;11146:6;11132:9;11125:17;11119:4;11115:28;11103:9;11095:6;11091:22;11087:57;11083:70;10920:425;11179:3;11175:2;11172:11;10920:425;;;11317:9;;11306:21;;11220:4;11212:13;;;;11252;10920:425;;;-1:-1:-1;;11363:26:0;;;11571:2;11554:11;-1:-1:-1;;11550:25:0;11544:4;11537:39;-1:-1:-1;9588:2397:0;-1:-1:-1;12012:9:0;9258:2770;-1:-1:-1;;;;9258:2770:0:o;1111:1274:1:-;1265:4;1271:12;1331;1353:13;1376:24;1413:8;1403:19;;-1:-1:-1;;;;;1403:19:1;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1403:19:1;;1376:46;;1919:1;1890;1853:9;1847:16;1815:4;1804:9;1800:20;1766:1;1728:7;1699:4;1677:267;1665:279;;2011:16;2000:27;;2055:8;2046:7;2043:21;2040:76;;;2094:8;2083:19;;2040:76;2201:7;2188:11;2181:28;2321:7;2318:1;2311:4;2298:11;2294:22;2279:50;2356:8;;;;-1:-1:-1;1111:1274:1;-1:-1:-1;;;;;;1111:1274:1:o;1583:366:3:-;1852:8;1842:19;;;;;;1791:14;:27;1806:11;1791:27;;;;;;;;;;;;;;;1819:11;1791:40;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1791:48:3;;;;;;;;;:70;;;;1876:66;;;;1890:11;;1903;;1832:6;;1924:8;;1934:7;;1876:66;:::i;:::-;;;;;;;;1583:366;;;;;:::o;3742:395:2:-;3864:35;;;3840:21;3864:35;;;:22;:35;;;;;;;3913:21;;;3909:135;;-1:-1:-1;618:5:2;3909:135;4077:16;4061:12;:32;;4053:77;;;;-1:-1:-1;;;4053:77:2;;25679:2:10;4053:77:2;;;25661:21:10;;;25698:18;;;25691:30;25757:34;25737:18;;;25730:62;25809:18;;4053:77:2;25477:356:10;4053:77:2;3830:307;3742:395;;:::o;14:159:10:-;81:20;;141:6;130:18;;120:29;;110:57;;163:1;160;153:12;110:57;14:159;;;:::o;178:347::-;229:8;239:6;293:3;286:4;278:6;274:17;270:27;260:55;;311:1;308;301:12;260:55;-1:-1:-1;334:20:10;;-1:-1:-1;;;;;366:30:10;;363:50;;;409:1;406;399:12;363:50;446:4;438:6;434:17;422:29;;498:3;491:4;482:6;474;470:19;466:30;463:39;460:59;;;515:1;512;505:12;460:59;178:347;;;;;:::o;530:171::-;597:20;;-1:-1:-1;;;;;646:30:10;;636:41;;626:69;;691:1;688;681:12;706:862;812:6;820;828;836;844;852;905:3;893:9;884:7;880:23;876:33;873:53;;;922:1;919;912:12;873:53;945:28;963:9;945:28;:::i;:::-;935:38;-1:-1:-1;1024:2:10;1009:18;;996:32;-1:-1:-1;;;;;1077:14:10;;;1074:34;;;1104:1;1101;1094:12;1074:34;1143:58;1193:7;1184:6;1173:9;1169:22;1143:58;:::i;:::-;1220:8;;-1:-1:-1;1117:84:10;-1:-1:-1;1117:84:10;;-1:-1:-1;1274:37:10;1307:2;1292:18;;1274:37;:::i;:::-;1264:47;;1364:2;1353:9;1349:18;1336:32;1320:48;;1393:2;1383:8;1380:16;1377:36;;;1409:1;1406;1399:12;1377:36;;1448:60;1500:7;1489:8;1478:9;1474:24;1448:60;:::i;:::-;706:862;;;;-1:-1:-1;706:862:10;;-1:-1:-1;706:862:10;;1527:8;;706:862;-1:-1:-1;;;706:862:10:o;1573:184::-;1631:6;1684:2;1672:9;1663:7;1659:23;1655:32;1652:52;;;1700:1;1697;1690:12;1652:52;1723:28;1741:9;1723:28;:::i;1762:252::-;1829:6;1837;1890:2;1878:9;1869:7;1865:23;1861:32;1858:52;;;1906:1;1903;1896:12;1858:52;1929:28;1947:9;1929:28;:::i;:::-;1919:38;2004:2;1989:18;;;;1976:32;;-1:-1:-1;;;1762:252:10:o;2019:481::-;2097:6;2105;2113;2166:2;2154:9;2145:7;2141:23;2137:32;2134:52;;;2182:1;2179;2172:12;2134:52;2205:28;2223:9;2205:28;:::i;:::-;2195:38;-1:-1:-1;2284:2:10;2269:18;;2256:32;-1:-1:-1;;;;;2300:30:10;;2297:50;;;2343:1;2340;2333:12;2297:50;2382:58;2432:7;2423:6;2412:9;2408:22;2382:58;:::i;:::-;2019:481;;2459:8;;-1:-1:-1;2356:84:10;;-1:-1:-1;;;;2019:481:10:o;2879:127::-;2940:10;2935:3;2931:20;2928:1;2921:31;2971:4;2968:1;2961:15;2995:4;2992:1;2985:15;3011:275;3082:2;3076:9;3147:2;3128:13;;-1:-1:-1;;3124:27:10;3112:40;;-1:-1:-1;;;;;3167:34:10;;3203:22;;;3164:62;3161:88;;;3229:18;;:::i;:::-;3265:2;3258:22;3011:275;;-1:-1:-1;3011:275:10:o;3291:186::-;3339:4;-1:-1:-1;;;;;3361:30:10;;3358:56;;;3394:18;;:::i;:::-;-1:-1:-1;3460:2:10;3439:15;-1:-1:-1;;3435:29:10;3466:4;3431:40;;3291:186::o;3482:336::-;3546:5;3575:52;3591:35;3619:6;3591:35;:::i;:::-;3575:52;:::i;:::-;3566:61;;3650:6;3643:5;3636:21;3690:3;3681:6;3676:3;3672:16;3669:25;3666:45;;;3707:1;3704;3697:12;3666:45;3756:6;3751:3;3744:4;3737:5;3733:16;3720:43;3810:1;3803:4;3794:6;3787:5;3783:18;3779:29;3772:40;3482:336;;;;;:::o;3823:593::-;3907:6;3915;3923;3976:2;3964:9;3955:7;3951:23;3947:32;3944:52;;;3992:1;3989;3982:12;3944:52;4015:28;4033:9;4015:28;:::i;:::-;4005:38;-1:-1:-1;4094:2:10;4079:18;;4066:32;-1:-1:-1;;;;;4110:30:10;;4107:50;;;4153:1;4150;4143:12;4107:50;4176:22;;4229:4;4221:13;;4217:27;-1:-1:-1;4207:55:10;;4258:1;4255;4248:12;4207:55;4281:73;4346:7;4341:2;4328:16;4323:2;4319;4315:11;4281:73;:::i;:::-;4271:83;;;4373:37;4406:2;4395:9;4391:18;4373:37;:::i;:::-;4363:47;;3823:593;;;;;:::o;4603:173::-;4671:20;;-1:-1:-1;;;;;4720:31:10;;4710:42;;4700:70;;4766:1;4763;4756:12;4781:186;4840:6;4893:2;4881:9;4872:7;4868:23;4864:32;4861:52;;;4909:1;4906;4899:12;4861:52;4932:29;4951:9;4932:29;:::i;4972:450::-;5041:6;5094:2;5082:9;5073:7;5069:23;5065:32;5062:52;;;5110:1;5107;5100:12;5062:52;5137:23;;-1:-1:-1;;;;;5172:30:10;;5169:50;;;5215:1;5212;5205:12;5169:50;5238:22;;5291:4;5283:13;;5279:27;-1:-1:-1;5269:55:10;;5320:1;5317;5310:12;5269:55;5343:73;5408:7;5403:2;5390:16;5385:2;5381;5377:11;5343:73;:::i;:::-;5333:83;4972:450;-1:-1:-1;;;;4972:450:10:o;5427:250::-;5512:1;5522:113;5536:6;5533:1;5530:13;5522:113;;;5612:11;;;5606:18;5593:11;;;5586:39;5558:2;5551:10;5522:113;;;-1:-1:-1;;5669:1:10;5651:16;;5644:27;5427:250::o;5682:271::-;5724:3;5762:5;5756:12;5789:6;5784:3;5777:19;5805:76;5874:6;5867:4;5862:3;5858:14;5851:4;5844:5;5840:16;5805:76;:::i;:::-;5935:2;5914:15;-1:-1:-1;;5910:29:10;5901:39;;;;5942:4;5897:50;;5682:271;-1:-1:-1;;5682:271:10:o;5958:220::-;6107:2;6096:9;6089:21;6070:4;6127:45;6168:2;6157:9;6153:18;6145:6;6127:45;:::i;6406:256::-;6472:6;6480;6533:2;6521:9;6512:7;6508:23;6504:32;6501:52;;;6549:1;6546;6539:12;6501:52;6572:28;6590:9;6572:28;:::i;:::-;6562:38;;6619:37;6652:2;6641:9;6637:18;6619:37;:::i;:::-;6609:47;;6406:256;;;;;:::o;6667:203::-;-1:-1:-1;;;;;6831:32:10;;;;6813:51;;6801:2;6786:18;;6667:203::o;7110:622::-;7205:6;7213;7221;7229;7237;7290:3;7278:9;7269:7;7265:23;7261:33;7258:53;;;7307:1;7304;7297:12;7258:53;7330:28;7348:9;7330:28;:::i;:::-;7320:38;;7377:37;7410:2;7399:9;7395:18;7377:37;:::i;:::-;7367:47;-1:-1:-1;7461:2:10;7446:18;;7433:32;;-1:-1:-1;7516:2:10;7501:18;;7488:32;-1:-1:-1;;;;;7532:30:10;;7529:50;;;7575:1;7572;7565:12;7529:50;7614:58;7664:7;7655:6;7644:9;7640:22;7614:58;:::i;:::-;7110:622;;;;-1:-1:-1;7110:622:10;;-1:-1:-1;7691:8:10;;7588:84;7110:622;-1:-1:-1;;;7110:622:10:o;7737:324::-;7812:6;7820;7828;7881:2;7869:9;7860:7;7856:23;7852:32;7849:52;;;7897:1;7894;7887:12;7849:52;7920:28;7938:9;7920:28;:::i;:::-;7910:38;;7967:37;8000:2;7989:9;7985:18;7967:37;:::i;:::-;7957:47;;8051:2;8040:9;8036:18;8023:32;8013:42;;7737:324;;;;;:::o;8066:399::-;8150:6;8158;8166;8174;8227:3;8215:9;8206:7;8202:23;8198:33;8195:53;;;8244:1;8241;8234:12;8195:53;8267:28;8285:9;8267:28;:::i;:::-;8257:38;;8314:37;8347:2;8336:9;8332:18;8314:37;:::i;:::-;8304:47;;8370:38;8404:2;8393:9;8389:18;8370:38;:::i;:::-;8066:399;;;;-1:-1:-1;8360:48:10;;8455:2;8440:18;8427:32;;-1:-1:-1;;8066:399:10:o;8829:380::-;8908:1;8904:12;;;;8951;;;8972:61;;9026:4;9018:6;9014:17;9004:27;;8972:61;9079:2;9071:6;9068:14;9048:18;9045:38;9042:161;;9125:10;9120:3;9116:20;9113:1;9106:31;9160:4;9157:1;9150:15;9188:4;9185:1;9178:15;9042:161;;8829:380;;;:::o;9214:271::-;9397:6;9389;9384:3;9371:33;9353:3;9423:16;;9448:13;;;9423:16;9214:271;-1:-1:-1;9214:271:10:o;10090:266::-;10178:6;10173:3;10166:19;10230:6;10223:5;10216:4;10211:3;10207:14;10194:43;-1:-1:-1;10282:1:10;10257:16;;;10275:4;10253:27;;;10246:38;;;;10338:2;10317:15;;;-1:-1:-1;;10313:29:10;10304:39;;;10300:50;;10090:266::o;10361:326::-;10556:6;10548;10544:19;10533:9;10526:38;10600:2;10595;10584:9;10580:18;10573:30;10507:4;10620:61;10677:2;10666:9;10662:18;10654:6;10646;10620:61;:::i;11147:544::-;11248:2;11243:3;11240:11;11237:448;;;11284:1;11309:5;11305:2;11298:17;11354:4;11350:2;11340:19;11424:2;11412:10;11408:19;11405:1;11401:27;11395:4;11391:38;11460:4;11448:10;11445:20;11442:47;;;-1:-1:-1;11483:4:10;11442:47;11538:2;11533:3;11529:12;11526:1;11522:20;11516:4;11512:31;11502:41;;11593:82;11611:2;11604:5;11601:13;11593:82;;;11656:17;;;11637:1;11626:13;11593:82;;11696:166;-1:-1:-1;;11824:1:10;11820:11;;;11816:24;11812:29;11802:40;11848:1;11844:11;;;;11799:57;;11696:166::o;11867:1348::-;11985:10;;-1:-1:-1;;;;;12007:30:10;;12004:56;;;12040:18;;:::i;:::-;12069:96;12158:6;12118:38;12150:4;12144:11;12118:38;:::i;:::-;12112:4;12069:96;:::i;:::-;12220:4;;12284:2;12273:14;;12301:1;12296:662;;;;13002:1;13019:6;13016:89;;;-1:-1:-1;13071:19:10;;;13065:26;13016:89;13131:67;13191:6;13184:5;13131:67;:::i;:::-;13125:4;13118:81;;12266:943;;12296:662;11094:1;11087:14;;;11131:4;11118:18;;-1:-1:-1;;12332:20:10;;;12449:236;12463:7;12460:1;12457:14;12449:236;;;12552:19;;;12546:26;12531:42;;12644:27;;;;12612:1;12600:14;;;;12479:19;;12449:236;;;12453:3;12713:6;12704:7;12701:19;12698:201;;;12774:19;;;12768:26;-1:-1:-1;;12857:1:10;12853:14;;;12869:3;12849:24;12845:37;12841:42;12826:58;12811:74;;12698:201;-1:-1:-1;;;;;12945:1:10;12929:14;;;12925:22;12912:36;;-1:-1:-1;11867:1348:10:o;13985:127::-;14046:10;14041:3;14037:20;14034:1;14027:31;14077:4;14074:1;14067:15;14101:4;14098:1;14091:15;14117:128;14184:9;;;14205:11;;;14202:37;;;14219:18;;:::i;:::-;14117:128;;;;:::o;14250:352::-;14461:6;14453;14448:3;14435:33;14556:2;14527:15;;;;-1:-1:-1;;;;;;14523:45:10;14487:16;;14512:57;;;14593:2;14585:11;;14250:352;-1:-1:-1;14250:352:10:o;14607:498::-;14807:4;14836:6;14881:2;14873:6;14869:15;14858:9;14851:34;14933:2;14925:6;14921:15;14916:2;14905:9;14901:18;14894:43;;14973:6;14968:2;14957:9;14953:18;14946:34;15016:3;15011:2;15000:9;14996:18;14989:31;15037:62;15094:3;15083:9;15079:19;15071:6;15063;15037:62;:::i;:::-;15029:70;14607:498;-1:-1:-1;;;;;;;14607:498:10:o;15916:493::-;16165:6;16157;16153:19;16142:9;16135:38;16209:3;16204:2;16193:9;16189:18;16182:31;16116:4;16230:62;16287:3;16276:9;16272:19;16264:6;16256;16230:62;:::i;:::-;-1:-1:-1;;;;;16328:31:10;;;;16348:2;16308:18;;16301:59;-1:-1:-1;16391:2:10;16376:18;16369:34;16222:70;15916:493;-1:-1:-1;;;15916:493:10:o;16777:1202::-;-1:-1:-1;;;;;16891:27:10;;16888:53;;;16921:18;;:::i;:::-;16950:93;17039:3;16999:38;17031:4;17025:11;16999:38;:::i;:::-;16993:4;16950:93;:::i;:::-;17069:1;17094:2;17089:3;17086:11;17111:1;17106:615;;;;17765:1;17782:3;17779:93;;;-1:-1:-1;17838:19:10;;;17825:33;17779:93;17898:64;17958:3;17951:5;17898:64;:::i;:::-;17892:4;17885:78;;17079:894;;17106:615;11094:1;11087:14;;;11131:4;11118:18;;-1:-1:-1;;17142:17:10;;;17242:9;17264:229;17278:7;17275:1;17272:14;17264:229;;;17367:19;;;17354:33;17339:49;;17474:4;17459:20;;;;17427:1;17415:14;;;;17294:12;17264:229;;;17268:3;17521;17512:7;17509:16;17506:159;;;17645:1;17641:6;17635:3;17629;17626:1;17622:11;17618:21;17614:34;17610:39;17597:9;17592:3;17588:19;17575:33;17571:79;17563:6;17556:95;17506:159;;;17708:1;17702:3;17699:1;17695:11;17691:19;17685:4;17678:33;17079:894;;16777:1202;;;:::o;18852:320::-;18927:5;18956:52;18972:35;19000:6;18972:35;:::i;18956:52::-;18947:61;;19031:6;19024:5;19017:21;19071:3;19062:6;19057:3;19053:16;19050:25;19047:45;;;19088:1;19085;19078:12;19047:45;19101:65;19159:6;19152:4;19145:5;19141:16;19136:3;19101:65;:::i;19177:457::-;19256:6;19309:2;19297:9;19288:7;19284:23;19280:32;19277:52;;;19325:1;19322;19315:12;19277:52;19352:16;;-1:-1:-1;;;;;19380:30:10;;19377:50;;;19423:1;19420;19413:12;19377:50;19446:22;;19499:4;19491:13;;19487:27;-1:-1:-1;19477:55:10;;19528:1;19525;19518:12;19477:55;19551:77;19620:7;19615:2;19609:9;19604:2;19600;19596:11;19551:77;:::i;19639:557::-;19896:6;19888;19884:19;19873:9;19866:38;19940:3;19935:2;19924:9;19920:18;19913:31;19847:4;19967:46;20008:3;19997:9;19993:19;19985:6;19967:46;:::i;:::-;-1:-1:-1;;;;;20049:31:10;;20069:2;20029:18;;20022:59;20117:22;;;20112:2;20097:18;;20090:50;20157:33;20121:6;20175;20157:33;:::i;20979:840::-;21328:6;21320;21316:19;21305:9;21298:38;21372:3;21367:2;21356:9;21352:18;21345:31;21279:4;21399:46;21440:3;21429:9;21425:19;21417:6;21399:46;:::i;:::-;21493:9;21485:6;21481:22;21476:2;21465:9;21461:18;21454:50;21527:33;21553:6;21545;21527:33;:::i;:::-;-1:-1:-1;;;;;21634:15:10;;;21629:2;21614:18;;21607:43;21687:15;;21681:3;21666:19;;21659:44;21740:22;;;21587:3;21719:19;;21712:51;21513:47;-1:-1:-1;21780:33:10;21513:47;21798:6;21780:33;:::i;:::-;21772:41;20979:840;-1:-1:-1;;;;;;;;;20979:840:10:o;23642:125::-;23707:9;;;23728:10;;;23725:36;;;23741:18;;:::i;24461:287::-;24590:3;24628:6;24622:13;24644:66;24703:6;24698:3;24691:4;24683:6;24679:17;24644:66;:::i;:::-;24726:16;;;;;24461:287;-1:-1:-1;;24461:287:10:o;24753:719::-;25056:6;25048;25044:19;25033:9;25026:38;25100:3;25095:2;25084:9;25080:18;25073:31;25007:4;25127:46;25168:3;25157:9;25153:19;25145:6;25127:46;:::i;:::-;-1:-1:-1;;;;;25209:31:10;;25229:2;25189:18;;25182:59;25277:22;;;25272:2;25257:18;;25250:50;25323:33;25281:6;25341;25323:33;:::i;:::-;25309:47;;25405:9;25397:6;25393:22;25387:3;25376:9;25372:19;25365:51;25433:33;25459:6;25451;25433:33;:::i;:::-;25425:41;24753:719;-1:-1:-1;;;;;;;;24753:719:10:o"},"gasEstimates":{"creation":{"codeDepositCost":"1741000","executionCost":"infinite","totalCost":"infinite"},"external":{"DEFAULT_PAYLOAD_SIZE_LIMIT()":"635","data()":"infinite","failedMessages(uint16,bytes,uint64)":"infinite","forceResumeReceive(uint16,bytes)":"infinite","getConfig(uint16,uint16,address,uint256)":"infinite","getTrustedRemoteAddress(uint16)":"infinite","isTrustedRemote(uint16,bytes)":"infinite","lzEndpoint()":"infinite","lzReceive(uint16,bytes,uint64,bytes)":"infinite","minDstGasLookup(uint16,uint16)":"infinite","nonblockingLzReceive(uint16,bytes,uint64,bytes)":"infinite","owner()":"2678","payloadSizeLimitLookup(uint16)":"2595","precrime()":"2691","renounceOwnership()":"infinite","retryMessage(uint16,bytes,uint64,bytes)":"infinite","send(string)":"infinite","setConfig(uint16,uint16,uint256,bytes)":"infinite","setMinDstGas(uint16,uint16,uint256)":"infinite","setPayloadSizeLimit(uint16,uint256)":"24723","setPrecrime(address)":"28302","setReceiveVersion(uint16)":"infinite","setSendVersion(uint16)":"infinite","setTrustedRemote(uint16,bytes)":"infinite","setTrustedRemoteAddress(uint16,bytes)":"infinite","transferOwnership(address)":"28928","trustAddress(address)":"infinite","trustedRemoteLookup(uint16)":"infinite"},"internal":{"_nonblockingLzReceive(uint16,bytes memory,uint64,bytes memory)":"infinite"}},"methodIdentifiers":{"DEFAULT_PAYLOAD_SIZE_LIMIT()":"c4461834","data()":"73d4a13a","failedMessages(uint16,bytes,uint64)":"5b8c41e6","forceResumeReceive(uint16,bytes)":"42d65a8d","getConfig(uint16,uint16,address,uint256)":"f5ecbdbc","getTrustedRemoteAddress(uint16)":"9f38369a","isTrustedRemote(uint16,bytes)":"3d8b38f6","lzEndpoint()":"b353aaa7","lzReceive(uint16,bytes,uint64,bytes)":"001d3567","minDstGasLookup(uint16,uint16)":"8cfd8f5c","nonblockingLzReceive(uint16,bytes,uint64,bytes)":"66ad5c8a","owner()":"8da5cb5b","payloadSizeLimitLookup(uint16)":"3f1f4fa4","precrime()":"950c8a74","renounceOwnership()":"715018a6","retryMessage(uint16,bytes,uint64,bytes)":"d1deba1f","send(string)":"66792ba1","setConfig(uint16,uint16,uint256,bytes)":"cbed8b9c","setMinDstGas(uint16,uint16,uint256)":"df2a5b3b","setPayloadSizeLimit(uint16,uint256)":"0df37483","setPrecrime(address)":"baf3292d","setReceiveVersion(uint16)":"10ddb137","setSendVersion(uint16)":"07e0db17","setTrustedRemote(uint16,bytes)":"eb8d72b7","setTrustedRemoteAddress(uint16,bytes)":"a6c3d165","transferOwnership(address)":"f2fde38b","trustAddress(address)":"5cdf1649","trustedRemoteLookup(uint16)":"7533d788"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_lzEndpoint\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_reason\",\"type\":\"bytes\"}],\"name\":\"MessageFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"_payloadHash\",\"type\":\"bytes32\"}],\"name\":\"RetryMessageSuccess\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_type\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_minDstGas\",\"type\":\"uint256\"}],\"name\":\"SetMinDstGas\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"precrime\",\"type\":\"address\"}],\"name\":\"SetPrecrime\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_remoteChainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_path\",\"type\":\"bytes\"}],\"name\":\"SetTrustedRemote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_remoteChainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_remoteAddress\",\"type\":\"bytes\"}],\"name\":\"SetTrustedRemoteAddress\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_PAYLOAD_SIZE_LIMIT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"data\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"name\":\"failedMessages\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"}],\"name\":\"forceResumeReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_chainId\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_configType\",\"type\":\"uint256\"}],\"name\":\"getConfig\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_remoteChainId\",\"type\":\"uint16\"}],\"name\":\"getTrustedRemoteAddress\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"}],\"name\":\"isTrustedRemote\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lzEndpoint\",\"outputs\":[{\"internalType\":\"contract ILayerZeroEndpoint\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"}],\"name\":\"lzReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"minDstGasLookup\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"}],\"name\":\"nonblockingLzReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"payloadSizeLimitLookup\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"precrime\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"}],\"name\":\"retryMessage\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_message\",\"type\":\"string\"}],\"name\":\"send\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_chainId\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"_configType\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_config\",\"type\":\"bytes\"}],\"name\":\"setConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_packetType\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"_minGas\",\"type\":\"uint256\"}],\"name\":\"setMinDstGas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"_size\",\"type\":\"uint256\"}],\"name\":\"setPayloadSizeLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_precrime\",\"type\":\"address\"}],\"name\":\"setPrecrime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"}],\"name\":\"setReceiveVersion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"}],\"name\":\"setSendVersion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_remoteChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_path\",\"type\":\"bytes\"}],\"name\":\"setTrustedRemote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_remoteChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_remoteAddress\",\"type\":\"bytes\"}],\"name\":\"setTrustedRemoteAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_otherContract\",\"type\":\"address\"}],\"name\":\"trustAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"trustedRemoteLookup\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LayerZeroTest.sol\":\"LayerZeroTest\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@layerzerolabs/solidity-examples/contracts/libraries/BytesLib.sol\":{\"content\":\"// SPDX-License-Identifier: Unlicense\\n/*\\n * @title Solidity Bytes Arrays Utils\\n * @author Gon\\u00e7alo S\\u00e1 <goncalo.sa@consensys.net>\\n *\\n * @dev Bytes tightly packed arrays utility library for ethereum contracts written in Solidity.\\n *      The library lets you concatenate, slice and type cast bytes arrays both in memory and storage.\\n */\\npragma solidity >=0.8.0 <0.9.0;\\n\\nlibrary BytesLib {\\n    function concat(bytes memory _preBytes, bytes memory _postBytes) internal pure returns (bytes memory) {\\n        bytes memory tempBytes;\\n\\n        assembly {\\n            // Get a location of some free memory and store it in tempBytes as\\n            // Solidity does for memory variables.\\n            tempBytes := mload(0x40)\\n\\n            // Store the length of the first bytes array at the beginning of\\n            // the memory for tempBytes.\\n            let length := mload(_preBytes)\\n            mstore(tempBytes, length)\\n\\n            // Maintain a memory counter for the current write location in the\\n            // temp bytes array by adding the 32 bytes for the array length to\\n            // the starting location.\\n            let mc := add(tempBytes, 0x20)\\n            // Stop copying when the memory counter reaches the length of the\\n            // first bytes array.\\n            let end := add(mc, length)\\n\\n            for {\\n                // Initialize a copy counter to the start of the _preBytes data,\\n                // 32 bytes into its memory.\\n                let cc := add(_preBytes, 0x20)\\n            } lt(mc, end) {\\n                // Increase both counters by 32 bytes each iteration.\\n                mc := add(mc, 0x20)\\n                cc := add(cc, 0x20)\\n            } {\\n                // Write the _preBytes data into the tempBytes memory 32 bytes\\n                // at a time.\\n                mstore(mc, mload(cc))\\n            }\\n\\n            // Add the length of _postBytes to the current length of tempBytes\\n            // and store it as the new length in the first 32 bytes of the\\n            // tempBytes memory.\\n            length := mload(_postBytes)\\n            mstore(tempBytes, add(length, mload(tempBytes)))\\n\\n            // Move the memory counter back from a multiple of 0x20 to the\\n            // actual end of the _preBytes data.\\n            mc := end\\n            // Stop copying when the memory counter reaches the new combined\\n            // length of the arrays.\\n            end := add(mc, length)\\n\\n            for {\\n                let cc := add(_postBytes, 0x20)\\n            } lt(mc, end) {\\n                mc := add(mc, 0x20)\\n                cc := add(cc, 0x20)\\n            } {\\n                mstore(mc, mload(cc))\\n            }\\n\\n            // Update the free-memory pointer by padding our last write location\\n            // to 32 bytes: add 31 bytes to the end of tempBytes to move to the\\n            // next 32 byte block, then round down to the nearest multiple of\\n            // 32. If the sum of the length of the two arrays is zero then add\\n            // one before rounding down to leave a blank 32 bytes (the length block with 0).\\n            mstore(\\n                0x40,\\n                and(\\n                    add(add(end, iszero(add(length, mload(_preBytes)))), 31),\\n                    not(31) // Round down to the nearest 32 bytes.\\n                )\\n            )\\n        }\\n\\n        return tempBytes;\\n    }\\n\\n    function concatStorage(bytes storage _preBytes, bytes memory _postBytes) internal {\\n        assembly {\\n            // Read the first 32 bytes of _preBytes storage, which is the length\\n            // of the array. (We don't need to use the offset into the slot\\n            // because arrays use the entire slot.)\\n            let fslot := sload(_preBytes.slot)\\n            // Arrays of 31 bytes or less have an even value in their slot,\\n            // while longer arrays have an odd value. The actual length is\\n            // the slot divided by two for odd values, and the lowest order\\n            // byte divided by two for even values.\\n            // If the slot is even, bitwise and the slot with 255 and divide by\\n            // two to get the length. If the slot is odd, bitwise and the slot\\n            // with -1 and divide by two.\\n            let slength := div(and(fslot, sub(mul(0x100, iszero(and(fslot, 1))), 1)), 2)\\n            let mlength := mload(_postBytes)\\n            let newlength := add(slength, mlength)\\n            // slength can contain both the length and contents of the array\\n            // if length < 32 bytes so let's prepare for that\\n            // v. http://solidity.readthedocs.io/en/latest/miscellaneous.html#layout-of-state-variables-in-storage\\n            switch add(lt(slength, 32), lt(newlength, 32))\\n            case 2 {\\n                // Since the new array still fits in the slot, we just need to\\n                // update the contents of the slot.\\n                // uint256(bytes_storage) = uint256(bytes_storage) + uint256(bytes_memory) + new_length\\n                sstore(\\n                    _preBytes.slot,\\n                    // all the modifications to the slot are inside this\\n                    // next block\\n                    add(\\n                        // we can just add to the slot contents because the\\n                        // bytes we want to change are the LSBs\\n                        fslot,\\n                        add(\\n                            mul(\\n                                div(\\n                                    // load the bytes from memory\\n                                    mload(add(_postBytes, 0x20)),\\n                                    // zero all bytes to the right\\n                                    exp(0x100, sub(32, mlength))\\n                                ),\\n                                // and now shift left the number of bytes to\\n                                // leave space for the length in the slot\\n                                exp(0x100, sub(32, newlength))\\n                            ),\\n                            // increase length by the double of the memory\\n                            // bytes length\\n                            mul(mlength, 2)\\n                        )\\n                    )\\n                )\\n            }\\n            case 1 {\\n                // The stored value fits in the slot, but the combined value\\n                // will exceed it.\\n                // get the keccak hash to get the contents of the array\\n                mstore(0x0, _preBytes.slot)\\n                let sc := add(keccak256(0x0, 0x20), div(slength, 32))\\n\\n                // save new length\\n                sstore(_preBytes.slot, add(mul(newlength, 2), 1))\\n\\n                // The contents of the _postBytes array start 32 bytes into\\n                // the structure. Our first read should obtain the `submod`\\n                // bytes that can fit into the unused space in the last word\\n                // of the stored array. To get this, we read 32 bytes starting\\n                // from `submod`, so the data we read overlaps with the array\\n                // contents by `submod` bytes. Masking the lowest-order\\n                // `submod` bytes allows us to add that value directly to the\\n                // stored value.\\n\\n                let submod := sub(32, slength)\\n                let mc := add(_postBytes, submod)\\n                let end := add(_postBytes, mlength)\\n                let mask := sub(exp(0x100, submod), 1)\\n\\n                sstore(sc, add(and(fslot, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00), and(mload(mc), mask)))\\n\\n                for {\\n                    mc := add(mc, 0x20)\\n                    sc := add(sc, 1)\\n                } lt(mc, end) {\\n                    sc := add(sc, 1)\\n                    mc := add(mc, 0x20)\\n                } {\\n                    sstore(sc, mload(mc))\\n                }\\n\\n                mask := exp(0x100, sub(mc, end))\\n\\n                sstore(sc, mul(div(mload(mc), mask), mask))\\n            }\\n            default {\\n                // get the keccak hash to get the contents of the array\\n                mstore(0x0, _preBytes.slot)\\n                // Start copying to the last used word of the stored array.\\n                let sc := add(keccak256(0x0, 0x20), div(slength, 32))\\n\\n                // save new length\\n                sstore(_preBytes.slot, add(mul(newlength, 2), 1))\\n\\n                // Copy over the first `submod` bytes of the new data as in\\n                // case 1 above.\\n                let slengthmod := mod(slength, 32)\\n                let mlengthmod := mod(mlength, 32)\\n                let submod := sub(32, slengthmod)\\n                let mc := add(_postBytes, submod)\\n                let end := add(_postBytes, mlength)\\n                let mask := sub(exp(0x100, submod), 1)\\n\\n                sstore(sc, add(sload(sc), and(mload(mc), mask)))\\n\\n                for {\\n                    sc := add(sc, 1)\\n                    mc := add(mc, 0x20)\\n                } lt(mc, end) {\\n                    sc := add(sc, 1)\\n                    mc := add(mc, 0x20)\\n                } {\\n                    sstore(sc, mload(mc))\\n                }\\n\\n                mask := exp(0x100, sub(mc, end))\\n\\n                sstore(sc, mul(div(mload(mc), mask), mask))\\n            }\\n        }\\n    }\\n\\n    function slice(\\n        bytes memory _bytes,\\n        uint _start,\\n        uint _length\\n    ) internal pure returns (bytes memory) {\\n        require(_length + 31 >= _length, \\\"slice_overflow\\\");\\n        require(_bytes.length >= _start + _length, \\\"slice_outOfBounds\\\");\\n\\n        bytes memory tempBytes;\\n\\n        assembly {\\n            switch iszero(_length)\\n            case 0 {\\n                // Get a location of some free memory and store it in tempBytes as\\n                // Solidity does for memory variables.\\n                tempBytes := mload(0x40)\\n\\n                // The first word of the slice result is potentially a partial\\n                // word read from the original array. To read it, we calculate\\n                // the length of that partial word and start copying that many\\n                // bytes into the array. The first word we copy will start with\\n                // data we don't care about, but the last `lengthmod` bytes will\\n                // land at the beginning of the contents of the new array. When\\n                // we're done copying, we overwrite the full first word with\\n                // the actual length of the slice.\\n                let lengthmod := and(_length, 31)\\n\\n                // The multiplication in the next line is necessary\\n                // because when slicing multiples of 32 bytes (lengthmod == 0)\\n                // the following copy loop was copying the origin's length\\n                // and then ending prematurely not copying everything it should.\\n                let mc := add(add(tempBytes, lengthmod), mul(0x20, iszero(lengthmod)))\\n                let end := add(mc, _length)\\n\\n                for {\\n                    // The multiplication in the next line has the same exact purpose\\n                    // as the one above.\\n                    let cc := add(add(add(_bytes, lengthmod), mul(0x20, iszero(lengthmod))), _start)\\n                } lt(mc, end) {\\n                    mc := add(mc, 0x20)\\n                    cc := add(cc, 0x20)\\n                } {\\n                    mstore(mc, mload(cc))\\n                }\\n\\n                mstore(tempBytes, _length)\\n\\n                //update free-memory pointer\\n                //allocating the array padded to 32 bytes like the compiler does now\\n                mstore(0x40, and(add(mc, 31), not(31)))\\n            }\\n            //if we want a zero-length slice let's just return a zero-length array\\n            default {\\n                tempBytes := mload(0x40)\\n                //zero out the 32 bytes slice we are about to return\\n                //we need to do it because Solidity does not garbage collect\\n                mstore(tempBytes, 0)\\n\\n                mstore(0x40, add(tempBytes, 0x20))\\n            }\\n        }\\n\\n        return tempBytes;\\n    }\\n\\n    function toAddress(bytes memory _bytes, uint _start) internal pure returns (address) {\\n        require(_bytes.length >= _start + 20, \\\"toAddress_outOfBounds\\\");\\n        address tempAddress;\\n\\n        assembly {\\n            tempAddress := div(mload(add(add(_bytes, 0x20), _start)), 0x1000000000000000000000000)\\n        }\\n\\n        return tempAddress;\\n    }\\n\\n    function toUint8(bytes memory _bytes, uint _start) internal pure returns (uint8) {\\n        require(_bytes.length >= _start + 1, \\\"toUint8_outOfBounds\\\");\\n        uint8 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x1), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint16(bytes memory _bytes, uint _start) internal pure returns (uint16) {\\n        require(_bytes.length >= _start + 2, \\\"toUint16_outOfBounds\\\");\\n        uint16 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x2), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint32(bytes memory _bytes, uint _start) internal pure returns (uint32) {\\n        require(_bytes.length >= _start + 4, \\\"toUint32_outOfBounds\\\");\\n        uint32 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x4), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint64(bytes memory _bytes, uint _start) internal pure returns (uint64) {\\n        require(_bytes.length >= _start + 8, \\\"toUint64_outOfBounds\\\");\\n        uint64 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x8), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint96(bytes memory _bytes, uint _start) internal pure returns (uint96) {\\n        require(_bytes.length >= _start + 12, \\\"toUint96_outOfBounds\\\");\\n        uint96 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0xc), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint128(bytes memory _bytes, uint _start) internal pure returns (uint128) {\\n        require(_bytes.length >= _start + 16, \\\"toUint128_outOfBounds\\\");\\n        uint128 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x10), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint256(bytes memory _bytes, uint _start) internal pure returns (uint) {\\n        require(_bytes.length >= _start + 32, \\\"toUint256_outOfBounds\\\");\\n        uint tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x20), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toBytes32(bytes memory _bytes, uint _start) internal pure returns (bytes32) {\\n        require(_bytes.length >= _start + 32, \\\"toBytes32_outOfBounds\\\");\\n        bytes32 tempBytes32;\\n\\n        assembly {\\n            tempBytes32 := mload(add(add(_bytes, 0x20), _start))\\n        }\\n\\n        return tempBytes32;\\n    }\\n\\n    function equal(bytes memory _preBytes, bytes memory _postBytes) internal pure returns (bool) {\\n        bool success = true;\\n\\n        assembly {\\n            let length := mload(_preBytes)\\n\\n            // if lengths don't match the arrays are not equal\\n            switch eq(length, mload(_postBytes))\\n            case 1 {\\n                // cb is a circuit breaker in the for loop since there's\\n                //  no said feature for inline assembly loops\\n                // cb = 1 - don't breaker\\n                // cb = 0 - break\\n                let cb := 1\\n\\n                let mc := add(_preBytes, 0x20)\\n                let end := add(mc, length)\\n\\n                for {\\n                    let cc := add(_postBytes, 0x20)\\n                    // the next line is the loop condition:\\n                    // while(uint256(mc < end) + cb == 2)\\n                } eq(add(lt(mc, end), cb), 2) {\\n                    mc := add(mc, 0x20)\\n                    cc := add(cc, 0x20)\\n                } {\\n                    // if any of these checks fails then arrays are not equal\\n                    if iszero(eq(mload(mc), mload(cc))) {\\n                        // unsuccess:\\n                        success := 0\\n                        cb := 0\\n                    }\\n                }\\n            }\\n            default {\\n                // unsuccess:\\n                success := 0\\n            }\\n        }\\n\\n        return success;\\n    }\\n\\n    function equalStorage(bytes storage _preBytes, bytes memory _postBytes) internal view returns (bool) {\\n        bool success = true;\\n\\n        assembly {\\n            // we know _preBytes_offset is 0\\n            let fslot := sload(_preBytes.slot)\\n            // Decode the length of the stored array like in concatStorage().\\n            let slength := div(and(fslot, sub(mul(0x100, iszero(and(fslot, 1))), 1)), 2)\\n            let mlength := mload(_postBytes)\\n\\n            // if lengths don't match the arrays are not equal\\n            switch eq(slength, mlength)\\n            case 1 {\\n                // slength can contain both the length and contents of the array\\n                // if length < 32 bytes so let's prepare for that\\n                // v. http://solidity.readthedocs.io/en/latest/miscellaneous.html#layout-of-state-variables-in-storage\\n                if iszero(iszero(slength)) {\\n                    switch lt(slength, 32)\\n                    case 1 {\\n                        // blank the last byte which is the length\\n                        fslot := mul(div(fslot, 0x100), 0x100)\\n\\n                        if iszero(eq(fslot, mload(add(_postBytes, 0x20)))) {\\n                            // unsuccess:\\n                            success := 0\\n                        }\\n                    }\\n                    default {\\n                        // cb is a circuit breaker in the for loop since there's\\n                        //  no said feature for inline assembly loops\\n                        // cb = 1 - don't breaker\\n                        // cb = 0 - break\\n                        let cb := 1\\n\\n                        // get the keccak hash to get the contents of the array\\n                        mstore(0x0, _preBytes.slot)\\n                        let sc := keccak256(0x0, 0x20)\\n\\n                        let mc := add(_postBytes, 0x20)\\n                        let end := add(mc, mlength)\\n\\n                        // the next line is the loop condition:\\n                        // while(uint256(mc < end) + cb == 2)\\n                        for {\\n\\n                        } eq(add(lt(mc, end), cb), 2) {\\n                            sc := add(sc, 1)\\n                            mc := add(mc, 0x20)\\n                        } {\\n                            if iszero(eq(sload(sc), mload(mc))) {\\n                                // unsuccess:\\n                                success := 0\\n                                cb := 0\\n                            }\\n                        }\\n                    }\\n                }\\n            }\\n            default {\\n                // unsuccess:\\n                success := 0\\n            }\\n        }\\n\\n        return success;\\n    }\\n}\\n\",\"keccak256\":\"0x7e64cccdf22a03f513d94960f2145dd801fb5ec88d971de079b5186a9f5e93c4\",\"license\":\"Unlicense\"},\"@layerzerolabs/solidity-examples/contracts/libraries/ExcessivelySafeCall.sol\":{\"content\":\"// SPDX-License-Identifier: MIT OR Apache-2.0\\npragma solidity >=0.7.6;\\n\\nlibrary ExcessivelySafeCall {\\n    uint constant LOW_28_MASK = 0x00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff;\\n\\n    /// @notice Use when you _really_ really _really_ don't trust the called\\n    /// contract. This prevents the called contract from causing reversion of\\n    /// the caller in as many ways as we can.\\n    /// @dev The main difference between this and a solidity low-level call is\\n    /// that we limit the number of bytes that the callee can cause to be\\n    /// copied to caller memory. This prevents stupid things like malicious\\n    /// contracts returning 10,000,000 bytes causing a local OOG when copying\\n    /// to memory.\\n    /// @param _target The address to call\\n    /// @param _gas The amount of gas to forward to the remote contract\\n    /// @param _maxCopy The maximum number of bytes of returndata to copy\\n    /// to memory.\\n    /// @param _calldata The data to send to the remote contract\\n    /// @return success and returndata, as `.call()`. Returndata is capped to\\n    /// `_maxCopy` bytes.\\n    function excessivelySafeCall(\\n        address _target,\\n        uint _gas,\\n        uint16 _maxCopy,\\n        bytes memory _calldata\\n    ) internal returns (bool, bytes memory) {\\n        // set up for assembly call\\n        uint _toCopy;\\n        bool _success;\\n        bytes memory _returnData = new bytes(_maxCopy);\\n        // dispatch message to recipient\\n        // by assembly calling \\\"handle\\\" function\\n        // we call via assembly to avoid memcopying a very large returndata\\n        // returned by a malicious contract\\n        assembly {\\n            _success := call(\\n                _gas, // gas\\n                _target, // recipient\\n                0, // ether value\\n                add(_calldata, 0x20), // inloc\\n                mload(_calldata), // inlen\\n                0, // outloc\\n                0 // outlen\\n            )\\n            // limit our copy to 256 bytes\\n            _toCopy := returndatasize()\\n            if gt(_toCopy, _maxCopy) {\\n                _toCopy := _maxCopy\\n            }\\n            // Store the length of the copied bytes\\n            mstore(_returnData, _toCopy)\\n            // copy the bytes from returndata[0:_toCopy]\\n            returndatacopy(add(_returnData, 0x20), 0, _toCopy)\\n        }\\n        return (_success, _returnData);\\n    }\\n\\n    /// @notice Use when you _really_ really _really_ don't trust the called\\n    /// contract. This prevents the called contract from causing reversion of\\n    /// the caller in as many ways as we can.\\n    /// @dev The main difference between this and a solidity low-level call is\\n    /// that we limit the number of bytes that the callee can cause to be\\n    /// copied to caller memory. This prevents stupid things like malicious\\n    /// contracts returning 10,000,000 bytes causing a local OOG when copying\\n    /// to memory.\\n    /// @param _target The address to call\\n    /// @param _gas The amount of gas to forward to the remote contract\\n    /// @param _maxCopy The maximum number of bytes of returndata to copy\\n    /// to memory.\\n    /// @param _calldata The data to send to the remote contract\\n    /// @return success and returndata, as `.call()`. Returndata is capped to\\n    /// `_maxCopy` bytes.\\n    function excessivelySafeStaticCall(\\n        address _target,\\n        uint _gas,\\n        uint16 _maxCopy,\\n        bytes memory _calldata\\n    ) internal view returns (bool, bytes memory) {\\n        // set up for assembly call\\n        uint _toCopy;\\n        bool _success;\\n        bytes memory _returnData = new bytes(_maxCopy);\\n        // dispatch message to recipient\\n        // by assembly calling \\\"handle\\\" function\\n        // we call via assembly to avoid memcopying a very large returndata\\n        // returned by a malicious contract\\n        assembly {\\n            _success := staticcall(\\n                _gas, // gas\\n                _target, // recipient\\n                add(_calldata, 0x20), // inloc\\n                mload(_calldata), // inlen\\n                0, // outloc\\n                0 // outlen\\n            )\\n            // limit our copy to 256 bytes\\n            _toCopy := returndatasize()\\n            if gt(_toCopy, _maxCopy) {\\n                _toCopy := _maxCopy\\n            }\\n            // Store the length of the copied bytes\\n            mstore(_returnData, _toCopy)\\n            // copy the bytes from returndata[0:_toCopy]\\n            returndatacopy(add(_returnData, 0x20), 0, _toCopy)\\n        }\\n        return (_success, _returnData);\\n    }\\n\\n    /**\\n     * @notice Swaps function selectors in encoded contract calls\\n     * @dev Allows reuse of encoded calldata for functions with identical\\n     * argument types but different names. It simply swaps out the first 4 bytes\\n     * for the new selector. This function modifies memory in place, and should\\n     * only be used with caution.\\n     * @param _newSelector The new 4-byte selector\\n     * @param _buf The encoded contract args\\n     */\\n    function swapSelector(bytes4 _newSelector, bytes memory _buf) internal pure {\\n        require(_buf.length >= 4);\\n        uint _mask = LOW_28_MASK;\\n        assembly {\\n            // load the first word of\\n            let _word := mload(add(_buf, 0x20))\\n            // mask out the top 4 bytes\\n            // /x\\n            _word := and(_word, _mask)\\n            _word := or(_newSelector, _word)\\n            mstore(add(_buf, 0x20), _word)\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd4e52af409b5ec80432292d86fb01906785eb78ac31da3bab4565aabcd6e3e56\",\"license\":\"MIT OR Apache-2.0\"},\"@layerzerolabs/solidity-examples/contracts/lzApp/LzApp.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"./interfaces/ILayerZeroReceiver.sol\\\";\\nimport \\\"./interfaces/ILayerZeroUserApplicationConfig.sol\\\";\\nimport \\\"./interfaces/ILayerZeroEndpoint.sol\\\";\\nimport \\\"../libraries/BytesLib.sol\\\";\\n\\n/*\\n * a generic LzReceiver implementation\\n */\\nabstract contract LzApp is Ownable, ILayerZeroReceiver, ILayerZeroUserApplicationConfig {\\n    using BytesLib for bytes;\\n\\n    // ua can not send payload larger than this by default, but it can be changed by the ua owner\\n    uint public constant DEFAULT_PAYLOAD_SIZE_LIMIT = 10000;\\n\\n    ILayerZeroEndpoint public immutable lzEndpoint;\\n    mapping(uint16 => bytes) public trustedRemoteLookup;\\n    mapping(uint16 => mapping(uint16 => uint)) public minDstGasLookup;\\n    mapping(uint16 => uint) public payloadSizeLimitLookup;\\n    address public precrime;\\n\\n    event SetPrecrime(address precrime);\\n    event SetTrustedRemote(uint16 _remoteChainId, bytes _path);\\n    event SetTrustedRemoteAddress(uint16 _remoteChainId, bytes _remoteAddress);\\n    event SetMinDstGas(uint16 _dstChainId, uint16 _type, uint _minDstGas);\\n\\n    constructor(address _endpoint) {\\n        lzEndpoint = ILayerZeroEndpoint(_endpoint);\\n    }\\n\\n    function lzReceive(\\n        uint16 _srcChainId,\\n        bytes calldata _srcAddress,\\n        uint64 _nonce,\\n        bytes calldata _payload\\n    ) public virtual override {\\n        // lzReceive must be called by the endpoint for security\\n        require(_msgSender() == address(lzEndpoint), \\\"LzApp: invalid endpoint caller\\\");\\n\\n        bytes memory trustedRemote = trustedRemoteLookup[_srcChainId];\\n        // if will still block the message pathway from (srcChainId, srcAddress). should not receive message from untrusted remote.\\n        require(\\n            _srcAddress.length == trustedRemote.length && trustedRemote.length > 0 && keccak256(_srcAddress) == keccak256(trustedRemote),\\n            \\\"LzApp: invalid source sending contract\\\"\\n        );\\n\\n        _blockingLzReceive(_srcChainId, _srcAddress, _nonce, _payload);\\n    }\\n\\n    // abstract function - the default behaviour of LayerZero is blocking. See: NonblockingLzApp if you dont need to enforce ordered messaging\\n    function _blockingLzReceive(\\n        uint16 _srcChainId,\\n        bytes memory _srcAddress,\\n        uint64 _nonce,\\n        bytes memory _payload\\n    ) internal virtual;\\n\\n    function _lzSend(\\n        uint16 _dstChainId,\\n        bytes memory _payload,\\n        address payable _refundAddress,\\n        address _zroPaymentAddress,\\n        bytes memory _adapterParams,\\n        uint _nativeFee\\n    ) internal virtual {\\n        bytes memory trustedRemote = trustedRemoteLookup[_dstChainId];\\n        require(trustedRemote.length != 0, \\\"LzApp: destination chain is not a trusted source\\\");\\n        _checkPayloadSize(_dstChainId, _payload.length);\\n        lzEndpoint.send{value: _nativeFee}(_dstChainId, trustedRemote, _payload, _refundAddress, _zroPaymentAddress, _adapterParams);\\n    }\\n\\n    function _checkGasLimit(\\n        uint16 _dstChainId,\\n        uint16 _type,\\n        bytes memory _adapterParams,\\n        uint _extraGas\\n    ) internal view virtual {\\n        uint providedGasLimit = _getGasLimit(_adapterParams);\\n        uint minGasLimit = minDstGasLookup[_dstChainId][_type];\\n        require(minGasLimit > 0, \\\"LzApp: minGasLimit not set\\\");\\n        require(providedGasLimit >= minGasLimit + _extraGas, \\\"LzApp: gas limit is too low\\\");\\n    }\\n\\n    function _getGasLimit(bytes memory _adapterParams) internal pure virtual returns (uint gasLimit) {\\n        require(_adapterParams.length >= 34, \\\"LzApp: invalid adapterParams\\\");\\n        assembly {\\n            gasLimit := mload(add(_adapterParams, 34))\\n        }\\n    }\\n\\n    function _checkPayloadSize(uint16 _dstChainId, uint _payloadSize) internal view virtual {\\n        uint payloadSizeLimit = payloadSizeLimitLookup[_dstChainId];\\n        if (payloadSizeLimit == 0) {\\n            // use default if not set\\n            payloadSizeLimit = DEFAULT_PAYLOAD_SIZE_LIMIT;\\n        }\\n        require(_payloadSize <= payloadSizeLimit, \\\"LzApp: payload size is too large\\\");\\n    }\\n\\n    //---------------------------UserApplication config----------------------------------------\\n    function getConfig(\\n        uint16 _version,\\n        uint16 _chainId,\\n        address,\\n        uint _configType\\n    ) external view returns (bytes memory) {\\n        return lzEndpoint.getConfig(_version, _chainId, address(this), _configType);\\n    }\\n\\n    // generic config for LayerZero user Application\\n    function setConfig(\\n        uint16 _version,\\n        uint16 _chainId,\\n        uint _configType,\\n        bytes calldata _config\\n    ) external override onlyOwner {\\n        lzEndpoint.setConfig(_version, _chainId, _configType, _config);\\n    }\\n\\n    function setSendVersion(uint16 _version) external override onlyOwner {\\n        lzEndpoint.setSendVersion(_version);\\n    }\\n\\n    function setReceiveVersion(uint16 _version) external override onlyOwner {\\n        lzEndpoint.setReceiveVersion(_version);\\n    }\\n\\n    function forceResumeReceive(uint16 _srcChainId, bytes calldata _srcAddress) external override onlyOwner {\\n        lzEndpoint.forceResumeReceive(_srcChainId, _srcAddress);\\n    }\\n\\n    // _path = abi.encodePacked(remoteAddress, localAddress)\\n    // this function set the trusted path for the cross-chain communication\\n    function setTrustedRemote(uint16 _remoteChainId, bytes calldata _path) external onlyOwner {\\n        trustedRemoteLookup[_remoteChainId] = _path;\\n        emit SetTrustedRemote(_remoteChainId, _path);\\n    }\\n\\n    function setTrustedRemoteAddress(uint16 _remoteChainId, bytes calldata _remoteAddress) external onlyOwner {\\n        trustedRemoteLookup[_remoteChainId] = abi.encodePacked(_remoteAddress, address(this));\\n        emit SetTrustedRemoteAddress(_remoteChainId, _remoteAddress);\\n    }\\n\\n    function getTrustedRemoteAddress(uint16 _remoteChainId) external view returns (bytes memory) {\\n        bytes memory path = trustedRemoteLookup[_remoteChainId];\\n        require(path.length != 0, \\\"LzApp: no trusted path record\\\");\\n        return path.slice(0, path.length - 20); // the last 20 bytes should be address(this)\\n    }\\n\\n    function setPrecrime(address _precrime) external onlyOwner {\\n        precrime = _precrime;\\n        emit SetPrecrime(_precrime);\\n    }\\n\\n    function setMinDstGas(\\n        uint16 _dstChainId,\\n        uint16 _packetType,\\n        uint _minGas\\n    ) external onlyOwner {\\n        minDstGasLookup[_dstChainId][_packetType] = _minGas;\\n        emit SetMinDstGas(_dstChainId, _packetType, _minGas);\\n    }\\n\\n    // if the size is 0, it means default size limit\\n    function setPayloadSizeLimit(uint16 _dstChainId, uint _size) external onlyOwner {\\n        payloadSizeLimitLookup[_dstChainId] = _size;\\n    }\\n\\n    //--------------------------- VIEW FUNCTION ----------------------------------------\\n    function isTrustedRemote(uint16 _srcChainId, bytes calldata _srcAddress) external view returns (bool) {\\n        bytes memory trustedSource = trustedRemoteLookup[_srcChainId];\\n        return keccak256(trustedSource) == keccak256(_srcAddress);\\n    }\\n}\\n\",\"keccak256\":\"0x309c994bdcf69ad63c6789694a28eb72a773e2d9db58fe572ab2b34a475972ce\",\"license\":\"MIT\"},\"@layerzerolabs/solidity-examples/contracts/lzApp/NonblockingLzApp.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./LzApp.sol\\\";\\nimport \\\"../libraries/ExcessivelySafeCall.sol\\\";\\n\\n/*\\n * the default LayerZero messaging behaviour is blocking, i.e. any failed message will block the channel\\n * this abstract class try-catch all fail messages and store locally for future retry. hence, non-blocking\\n * NOTE: if the srcAddress is not configured properly, it will still block the message pathway from (srcChainId, srcAddress)\\n */\\nabstract contract NonblockingLzApp is LzApp {\\n    using ExcessivelySafeCall for address;\\n\\n    constructor(address _endpoint) LzApp(_endpoint) {}\\n\\n    mapping(uint16 => mapping(bytes => mapping(uint64 => bytes32))) public failedMessages;\\n\\n    event MessageFailed(uint16 _srcChainId, bytes _srcAddress, uint64 _nonce, bytes _payload, bytes _reason);\\n    event RetryMessageSuccess(uint16 _srcChainId, bytes _srcAddress, uint64 _nonce, bytes32 _payloadHash);\\n\\n    // overriding the virtual function in LzReceiver\\n    function _blockingLzReceive(\\n        uint16 _srcChainId,\\n        bytes memory _srcAddress,\\n        uint64 _nonce,\\n        bytes memory _payload\\n    ) internal virtual override {\\n        (bool success, bytes memory reason) = address(this).excessivelySafeCall(\\n            gasleft(),\\n            150,\\n            abi.encodeWithSelector(this.nonblockingLzReceive.selector, _srcChainId, _srcAddress, _nonce, _payload)\\n        );\\n        // try-catch all errors/exceptions\\n        if (!success) {\\n            _storeFailedMessage(_srcChainId, _srcAddress, _nonce, _payload, reason);\\n        }\\n    }\\n\\n    function _storeFailedMessage(\\n        uint16 _srcChainId,\\n        bytes memory _srcAddress,\\n        uint64 _nonce,\\n        bytes memory _payload,\\n        bytes memory _reason\\n    ) internal virtual {\\n        failedMessages[_srcChainId][_srcAddress][_nonce] = keccak256(_payload);\\n        emit MessageFailed(_srcChainId, _srcAddress, _nonce, _payload, _reason);\\n    }\\n\\n    function nonblockingLzReceive(\\n        uint16 _srcChainId,\\n        bytes calldata _srcAddress,\\n        uint64 _nonce,\\n        bytes calldata _payload\\n    ) public virtual {\\n        // only internal transaction\\n        require(_msgSender() == address(this), \\\"NonblockingLzApp: caller must be LzApp\\\");\\n        _nonblockingLzReceive(_srcChainId, _srcAddress, _nonce, _payload);\\n    }\\n\\n    //@notice override this function\\n    function _nonblockingLzReceive(\\n        uint16 _srcChainId,\\n        bytes memory _srcAddress,\\n        uint64 _nonce,\\n        bytes memory _payload\\n    ) internal virtual;\\n\\n    function retryMessage(\\n        uint16 _srcChainId,\\n        bytes calldata _srcAddress,\\n        uint64 _nonce,\\n        bytes calldata _payload\\n    ) public payable virtual {\\n        // assert there is message to retry\\n        bytes32 payloadHash = failedMessages[_srcChainId][_srcAddress][_nonce];\\n        require(payloadHash != bytes32(0), \\\"NonblockingLzApp: no stored message\\\");\\n        require(keccak256(_payload) == payloadHash, \\\"NonblockingLzApp: invalid payload\\\");\\n        // clear the stored message\\n        failedMessages[_srcChainId][_srcAddress][_nonce] = bytes32(0);\\n        // execute the message. revert if it fails again\\n        _nonblockingLzReceive(_srcChainId, _srcAddress, _nonce, _payload);\\n        emit RetryMessageSuccess(_srcChainId, _srcAddress, _nonce, payloadHash);\\n    }\\n}\\n\",\"keccak256\":\"0x612ff1f2a158b7e64e873885b5ff08afa348998fd9005f384d555d643ba7968d\",\"license\":\"MIT\"},\"@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroEndpoint.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.5.0;\\n\\nimport \\\"./ILayerZeroUserApplicationConfig.sol\\\";\\n\\ninterface ILayerZeroEndpoint is ILayerZeroUserApplicationConfig {\\n    // @notice send a LayerZero message to the specified address at a LayerZero endpoint.\\n    // @param _dstChainId - the destination chain identifier\\n    // @param _destination - the address on destination chain (in bytes). address length/format may vary by chains\\n    // @param _payload - a custom bytes payload to send to the destination contract\\n    // @param _refundAddress - if the source transaction is cheaper than the amount of value passed, refund the additional amount to this address\\n    // @param _zroPaymentAddress - the address of the ZRO token holder who would pay for the transaction\\n    // @param _adapterParams - parameters for custom functionality. e.g. receive airdropped native gas from the relayer on destination\\n    function send(\\n        uint16 _dstChainId,\\n        bytes calldata _destination,\\n        bytes calldata _payload,\\n        address payable _refundAddress,\\n        address _zroPaymentAddress,\\n        bytes calldata _adapterParams\\n    ) external payable;\\n\\n    // @notice used by the messaging library to publish verified payload\\n    // @param _srcChainId - the source chain identifier\\n    // @param _srcAddress - the source contract (as bytes) at the source chain\\n    // @param _dstAddress - the address on destination chain\\n    // @param _nonce - the unbound message ordering nonce\\n    // @param _gasLimit - the gas limit for external contract execution\\n    // @param _payload - verified payload to send to the destination contract\\n    function receivePayload(\\n        uint16 _srcChainId,\\n        bytes calldata _srcAddress,\\n        address _dstAddress,\\n        uint64 _nonce,\\n        uint _gasLimit,\\n        bytes calldata _payload\\n    ) external;\\n\\n    // @notice get the inboundNonce of a lzApp from a source chain which could be EVM or non-EVM chain\\n    // @param _srcChainId - the source chain identifier\\n    // @param _srcAddress - the source chain contract address\\n    function getInboundNonce(uint16 _srcChainId, bytes calldata _srcAddress) external view returns (uint64);\\n\\n    // @notice get the outboundNonce from this source chain which, consequently, is always an EVM\\n    // @param _srcAddress - the source chain contract address\\n    function getOutboundNonce(uint16 _dstChainId, address _srcAddress) external view returns (uint64);\\n\\n    // @notice gets a quote in source native gas, for the amount that send() requires to pay for message delivery\\n    // @param _dstChainId - the destination chain identifier\\n    // @param _userApplication - the user app address on this EVM chain\\n    // @param _payload - the custom message to send over LayerZero\\n    // @param _payInZRO - if false, user app pays the protocol fee in native token\\n    // @param _adapterParam - parameters for the adapter service, e.g. send some dust native token to dstChain\\n    function estimateFees(\\n        uint16 _dstChainId,\\n        address _userApplication,\\n        bytes calldata _payload,\\n        bool _payInZRO,\\n        bytes calldata _adapterParam\\n    ) external view returns (uint nativeFee, uint zroFee);\\n\\n    // @notice get this Endpoint's immutable source identifier\\n    function getChainId() external view returns (uint16);\\n\\n    // @notice the interface to retry failed message on this Endpoint destination\\n    // @param _srcChainId - the source chain identifier\\n    // @param _srcAddress - the source chain contract address\\n    // @param _payload - the payload to be retried\\n    function retryPayload(\\n        uint16 _srcChainId,\\n        bytes calldata _srcAddress,\\n        bytes calldata _payload\\n    ) external;\\n\\n    // @notice query if any STORED payload (message blocking) at the endpoint.\\n    // @param _srcChainId - the source chain identifier\\n    // @param _srcAddress - the source chain contract address\\n    function hasStoredPayload(uint16 _srcChainId, bytes calldata _srcAddress) external view returns (bool);\\n\\n    // @notice query if the _libraryAddress is valid for sending msgs.\\n    // @param _userApplication - the user app address on this EVM chain\\n    function getSendLibraryAddress(address _userApplication) external view returns (address);\\n\\n    // @notice query if the _libraryAddress is valid for receiving msgs.\\n    // @param _userApplication - the user app address on this EVM chain\\n    function getReceiveLibraryAddress(address _userApplication) external view returns (address);\\n\\n    // @notice query if the non-reentrancy guard for send() is on\\n    // @return true if the guard is on. false otherwise\\n    function isSendingPayload() external view returns (bool);\\n\\n    // @notice query if the non-reentrancy guard for receive() is on\\n    // @return true if the guard is on. false otherwise\\n    function isReceivingPayload() external view returns (bool);\\n\\n    // @notice get the configuration of the LayerZero messaging library of the specified version\\n    // @param _version - messaging library version\\n    // @param _chainId - the chainId for the pending config change\\n    // @param _userApplication - the contract address of the user application\\n    // @param _configType - type of configuration. every messaging library has its own convention.\\n    function getConfig(\\n        uint16 _version,\\n        uint16 _chainId,\\n        address _userApplication,\\n        uint _configType\\n    ) external view returns (bytes memory);\\n\\n    // @notice get the send() LayerZero messaging library version\\n    // @param _userApplication - the contract address of the user application\\n    function getSendVersion(address _userApplication) external view returns (uint16);\\n\\n    // @notice get the lzReceive() LayerZero messaging library version\\n    // @param _userApplication - the contract address of the user application\\n    function getReceiveVersion(address _userApplication) external view returns (uint16);\\n}\\n\",\"keccak256\":\"0xab7fcacc672251c850f00c0abd4100df9afcc4ad70b8d331a2fd4cb07acab9f4\",\"license\":\"MIT\"},\"@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroReceiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.5.0;\\n\\ninterface ILayerZeroReceiver {\\n    // @notice LayerZero endpoint will invoke this function to deliver the message on the destination\\n    // @param _srcChainId - the source endpoint identifier\\n    // @param _srcAddress - the source sending contract address from the source chain\\n    // @param _nonce - the ordered message nonce\\n    // @param _payload - the signed payload is the UA bytes has encoded to be sent\\n    function lzReceive(\\n        uint16 _srcChainId,\\n        bytes calldata _srcAddress,\\n        uint64 _nonce,\\n        bytes calldata _payload\\n    ) external;\\n}\\n\",\"keccak256\":\"0xac1966c1229bd4dc36b6c69eeb94a537bd9aa2198d7623b9ba7f8f7dbe79bb4c\",\"license\":\"MIT\"},\"@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroUserApplicationConfig.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.5.0;\\n\\ninterface ILayerZeroUserApplicationConfig {\\n    // @notice set the configuration of the LayerZero messaging library of the specified version\\n    // @param _version - messaging library version\\n    // @param _chainId - the chainId for the pending config change\\n    // @param _configType - type of configuration. every messaging library has its own convention.\\n    // @param _config - configuration in the bytes. can encode arbitrary content.\\n    function setConfig(\\n        uint16 _version,\\n        uint16 _chainId,\\n        uint _configType,\\n        bytes calldata _config\\n    ) external;\\n\\n    // @notice set the send() LayerZero messaging library version to _version\\n    // @param _version - new messaging library version\\n    function setSendVersion(uint16 _version) external;\\n\\n    // @notice set the lzReceive() LayerZero messaging library version to _version\\n    // @param _version - new messaging library version\\n    function setReceiveVersion(uint16 _version) external;\\n\\n    // @notice Only when the UA needs to resume the message flow in blocking mode and clear the stored payload\\n    // @param _srcChainId - the chainId of the source chain\\n    // @param _srcAddress - the contract address of the source contract at the source chain\\n    function forceResumeReceive(uint16 _srcChainId, bytes calldata _srcAddress) external;\\n}\\n\",\"keccak256\":\"0xb4df93aeb0fb46373a4fb728ad2603edc8b9a1577eee8d801768dc115bf96498\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/LayerZeroTest.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.20;\\r\\n\\r\\nimport \\\"@layerzerolabs/solidity-examples/contracts/lzApp/NonblockingLzApp.sol\\\";\\r\\n\\r\\n/*\\r\\n    LayerZero BNB Testnet\\r\\n      lzChainId: 10102  lzEndpoint: 0x6Fcb97553D41516Cb228ac03FdC8B9a0a9df04A1\\r\\n      contract: \\r\\n    LayerZero Fantom Testnet\\r\\n      lzChainId:10112   lzEndpoint: 0x7dcAD72640F835B0FA36EFD3D6d3ec902C7E5acf\\r\\n      contract: \\r\\n*/\\r\\n\\r\\ncontract LayerZeroTest is NonblockingLzApp {\\r\\n    string public data = \\\"Nothing received yet\\\";\\r\\n    uint16 destChainId;\\r\\n    \\r\\n    constructor(address _lzEndpoint) NonblockingLzApp(_lzEndpoint) {\\r\\n        if (_lzEndpoint == 0x6Fcb97553D41516Cb228ac03FdC8B9a0a9df04A1) destChainId = 10112;\\r\\n        if (_lzEndpoint == 0x7dcAD72640F835B0FA36EFD3D6d3ec902C7E5acf) destChainId = 10102;\\r\\n        // if (_lzEndpoint == 0xf69186dfBa60DdB133E91E9A4B5673624293d8F8) destChainId = 10109;\\r\\n        // if (_lzEndpoint == 0x6aB5Ae6822647046626e83ee6dB8187151E1d5ab) destChainId = 10143;\\r\\n    }\\r\\n\\r\\n    function _nonblockingLzReceive(uint16, bytes memory, uint64, bytes memory _payload) internal override {\\r\\n       data = abi.decode(_payload, (string));\\r\\n    }\\r\\n\\r\\n    function send(string memory _message) public payable {\\r\\n        bytes memory payload = abi.encode(_message);\\r\\n        _lzSend(destChainId, payload, payable(msg.sender), address(0x0), bytes(\\\"\\\"), msg.value);\\r\\n    }\\r\\n\\r\\n    function trustAddress(address _otherContract) public onlyOwner {\\r\\n        trustedRemoteLookup[destChainId] = abi.encodePacked(_otherContract, address(this));   \\r\\n    }\\r\\n}\",\"keccak256\":\"0x6000e66a8a88d489e6ba2ab516026b6ce547ce8ba9bf2e75350b35854bc860f4\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1410,"contract":"contracts/LayerZeroTest.sol:LayerZeroTest","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":455,"contract":"contracts/LayerZeroTest.sol:LayerZeroTest","label":"trustedRemoteLookup","offset":0,"slot":"1","type":"t_mapping(t_uint16,t_bytes_storage)"},{"astId":461,"contract":"contracts/LayerZeroTest.sol:LayerZeroTest","label":"minDstGasLookup","offset":0,"slot":"2","type":"t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))"},{"astId":465,"contract":"contracts/LayerZeroTest.sol:LayerZeroTest","label":"payloadSizeLimitLookup","offset":0,"slot":"3","type":"t_mapping(t_uint16,t_uint256)"},{"astId":467,"contract":"contracts/LayerZeroTest.sol:LayerZeroTest","label":"precrime","offset":0,"slot":"4","type":"t_address"},{"astId":997,"contract":"contracts/LayerZeroTest.sol:LayerZeroTest","label":"failedMessages","offset":0,"slot":"5","type":"t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))"},{"astId":1545,"contract":"contracts/LayerZeroTest.sol:LayerZeroTest","label":"data","offset":0,"slot":"6","type":"t_string_storage"},{"astId":1547,"contract":"contracts/LayerZeroTest.sol:LayerZeroTest","label":"destChainId","offset":0,"slot":"7","type":"t_uint16"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_bytes_memory_ptr":{"encoding":"bytes","label":"bytes","numberOfBytes":"32"},"t_bytes_storage":{"encoding":"bytes","label":"bytes","numberOfBytes":"32"},"t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32))":{"encoding":"mapping","key":"t_bytes_memory_ptr","label":"mapping(bytes => mapping(uint64 => bytes32))","numberOfBytes":"32","value":"t_mapping(t_uint64,t_bytes32)"},"t_mapping(t_uint16,t_bytes_storage)":{"encoding":"mapping","key":"t_uint16","label":"mapping(uint16 => bytes)","numberOfBytes":"32","value":"t_bytes_storage"},"t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))":{"encoding":"mapping","key":"t_uint16","label":"mapping(uint16 => mapping(bytes => mapping(uint64 => bytes32)))","numberOfBytes":"32","value":"t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32))"},"t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))":{"encoding":"mapping","key":"t_uint16","label":"mapping(uint16 => mapping(uint16 => uint256))","numberOfBytes":"32","value":"t_mapping(t_uint16,t_uint256)"},"t_mapping(t_uint16,t_uint256)":{"encoding":"mapping","key":"t_uint16","label":"mapping(uint16 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint64,t_bytes32)":{"encoding":"mapping","key":"t_uint64","label":"mapping(uint64 => bytes32)","numberOfBytes":"32","value":"t_bytes32"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint16":{"encoding":"inplace","label":"uint16","numberOfBytes":"2"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint64":{"encoding":"inplace","label":"uint64","numberOfBytes":"8"}}},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}